import {
  init_quill,
  quill_exports
} from "./chunk-BBYJ22EO.js";
import {
  __commonJS,
  __toCommonJS
} from "./chunk-EWTE5DHJ.js";

// node_modules/quill-table-better/dist/quill-table-better.js
var require_quill_table_better = __commonJS({
  "node_modules/quill-table-better/dist/quill-table-better.js"(exports, module) {
    !function(t, e) {
      "object" == typeof exports && "object" == typeof module ? module.exports = e((init_quill(), __toCommonJS(quill_exports))) : "function" == typeof define && define.amd ? define(["quill"], e) : "object" == typeof exports ? exports.QuillTableBetter = e((init_quill(), __toCommonJS(quill_exports))) : t.QuillTableBetter = e(t.Quill);
    }(self, function(t) {
      return function() {
        var e = { 386: function(t2) {
          var e2 = -1, n2 = 1, r2 = 0;
          function i2(t3, g2, b2, m2, v2) {
            if (t3 === g2) return t3 ? [[r2, t3]] : [];
            if (null != b2) {
              var w2 = function(t4, e3, n3) {
                var r3 = "number" == typeof n3 ? { index: n3, length: 0 } : n3.oldRange, i3 = "number" == typeof n3 ? null : n3.newRange, s2 = t4.length, o2 = e3.length;
                if (0 === r3.length && (null === i3 || 0 === i3.length)) {
                  var l2 = r3.index, a2 = t4.slice(0, l2), c2 = t4.slice(l2), u2 = i3 ? i3.index : null, h2 = l2 + o2 - s2;
                  if ((null === u2 || u2 === h2) && !(h2 < 0 || h2 > o2)) {
                    var d2 = e3.slice(0, h2);
                    if ((g3 = e3.slice(h2)) === c2) {
                      var p2 = Math.min(l2, h2);
                      if ((m3 = a2.slice(0, p2)) === (w3 = d2.slice(0, p2))) return y(m3, a2.slice(p2), d2.slice(p2), c2);
                    }
                  }
                  if (null === u2 || u2 === l2) {
                    var f2 = l2, g3 = (d2 = e3.slice(0, f2), e3.slice(f2));
                    if (d2 === a2) {
                      var b3 = Math.min(s2 - f2, o2 - f2);
                      if ((v3 = c2.slice(c2.length - b3)) === (x2 = g3.slice(g3.length - b3))) return y(a2, c2.slice(0, c2.length - b3), g3.slice(0, g3.length - b3), v3);
                    }
                  }
                }
                if (r3.length > 0 && i3 && 0 === i3.length) {
                  var m3 = t4.slice(0, r3.index), v3 = t4.slice(r3.index + r3.length);
                  if (!(o2 < (p2 = m3.length) + (b3 = v3.length))) {
                    var w3 = e3.slice(0, p2), x2 = e3.slice(o2 - b3);
                    if (m3 === w3 && v3 === x2) return y(m3, t4.slice(p2, s2 - b3), e3.slice(p2, o2 - b3), v3);
                  }
                }
                return null;
              }(t3, g2, b2);
              if (w2) return w2;
            }
            var x = o(t3, g2), k = t3.substring(0, x);
            x = a(t3 = t3.substring(x), g2 = g2.substring(x));
            var C = t3.substring(t3.length - x), _ = function(t4, l2) {
              var c2;
              if (!t4) return [[n2, l2]];
              if (!l2) return [[e2, t4]];
              var u2 = t4.length > l2.length ? t4 : l2, h2 = t4.length > l2.length ? l2 : t4, d2 = u2.indexOf(h2);
              if (-1 !== d2) return c2 = [[n2, u2.substring(0, d2)], [r2, h2], [n2, u2.substring(d2 + h2.length)]], t4.length > l2.length && (c2[0][0] = c2[2][0] = e2), c2;
              if (1 === h2.length) return [[e2, t4], [n2, l2]];
              var p2 = function(t5, e3) {
                var n3 = t5.length > e3.length ? t5 : e3, r3 = t5.length > e3.length ? e3 : t5;
                if (n3.length < 4 || 2 * r3.length < n3.length) return null;
                function i3(t6, e4, n4) {
                  for (var r4, i4, s3, l4, c4 = t6.substring(n4, n4 + Math.floor(t6.length / 4)), u4 = -1, h4 = ""; -1 !== (u4 = e4.indexOf(c4, u4 + 1)); ) {
                    var d4 = o(t6.substring(n4), e4.substring(u4)), p4 = a(t6.substring(0, n4), e4.substring(0, u4));
                    h4.length < p4 + d4 && (h4 = e4.substring(u4 - p4, u4) + e4.substring(u4, u4 + d4), r4 = t6.substring(0, n4 - p4), i4 = t6.substring(n4 + d4), s3 = e4.substring(0, u4 - p4), l4 = e4.substring(u4 + d4));
                  }
                  return 2 * h4.length >= t6.length ? [r4, i4, s3, l4, h4] : null;
                }
                var s2, l3, c3, u3, h3, d3 = i3(n3, r3, Math.ceil(n3.length / 4)), p3 = i3(n3, r3, Math.ceil(n3.length / 2));
                return d3 || p3 ? (s2 = p3 ? d3 && d3[4].length > p3[4].length ? d3 : p3 : d3, t5.length > e3.length ? (l3 = s2[0], c3 = s2[1], u3 = s2[2], h3 = s2[3]) : (u3 = s2[0], h3 = s2[1], l3 = s2[2], c3 = s2[3]), [l3, c3, u3, h3, s2[4]]) : null;
              }(t4, l2);
              if (p2) {
                var f2 = p2[0], g3 = p2[1], b3 = p2[2], m3 = p2[3], v3 = p2[4], y2 = i2(f2, b3), w3 = i2(g3, m3);
                return y2.concat([[r2, v3]], w3);
              }
              return function(t5, r3) {
                for (var i3 = t5.length, o2 = r3.length, l3 = Math.ceil((i3 + o2) / 2), a2 = l3, c3 = 2 * l3, u3 = new Array(c3), h3 = new Array(c3), d3 = 0; d3 < c3; d3++) u3[d3] = -1, h3[d3] = -1;
                u3[a2 + 1] = 0, h3[a2 + 1] = 0;
                for (var p3 = i3 - o2, f3 = p3 % 2 != 0, g4 = 0, b4 = 0, m4 = 0, v4 = 0, y3 = 0; y3 < l3; y3++) {
                  for (var w4 = -y3 + g4; w4 <= y3 - b4; w4 += 2) {
                    for (var x2 = a2 + w4, k2 = (A = w4 === -y3 || w4 !== y3 && u3[x2 - 1] < u3[x2 + 1] ? u3[x2 + 1] : u3[x2 - 1] + 1) - w4; A < i3 && k2 < o2 && t5.charAt(A) === r3.charAt(k2); ) A++, k2++;
                    if (u3[x2] = A, A > i3) b4 += 2;
                    else if (k2 > o2) g4 += 2;
                    else if (f3 && (T = a2 + p3 - w4) >= 0 && T < c3 && -1 !== h3[T] && A >= (_2 = i3 - h3[T])) return s(t5, r3, A, k2);
                  }
                  for (var C2 = -y3 + m4; C2 <= y3 - v4; C2 += 2) {
                    for (var _2, T = a2 + C2, N = (_2 = C2 === -y3 || C2 !== y3 && h3[T - 1] < h3[T + 1] ? h3[T + 1] : h3[T - 1] + 1) - C2; _2 < i3 && N < o2 && t5.charAt(i3 - _2 - 1) === r3.charAt(o2 - N - 1); ) _2++, N++;
                    if (h3[T] = _2, _2 > i3) v4 += 2;
                    else if (N > o2) m4 += 2;
                    else if (!f3) {
                      var A;
                      if ((x2 = a2 + p3 - C2) >= 0 && x2 < c3 && -1 !== u3[x2]) {
                        if (k2 = a2 + (A = u3[x2]) - x2, A >= (_2 = i3 - _2)) return s(t5, r3, A, k2);
                      }
                    }
                  }
                }
                return [[e2, t5], [n2, r3]];
              }(t4, l2);
            }(t3 = t3.substring(0, t3.length - x), g2 = g2.substring(0, g2.length - x));
            return k && _.unshift([r2, k]), C && _.push([r2, C]), f(_, v2), m2 && function(t4) {
              for (var i3 = false, s2 = [], o2 = 0, g3 = null, b3 = 0, m3 = 0, v3 = 0, y2 = 0, w3 = 0; b3 < t4.length; ) t4[b3][0] == r2 ? (s2[o2++] = b3, m3 = y2, v3 = w3, y2 = 0, w3 = 0, g3 = t4[b3][1]) : (t4[b3][0] == n2 ? y2 += t4[b3][1].length : w3 += t4[b3][1].length, g3 && g3.length <= Math.max(m3, v3) && g3.length <= Math.max(y2, w3) && (t4.splice(s2[o2 - 1], 0, [e2, g3]), t4[s2[o2 - 1] + 1][0] = n2, o2--, b3 = --o2 > 0 ? s2[o2 - 1] : -1, m3 = 0, v3 = 0, y2 = 0, w3 = 0, g3 = null, i3 = true)), b3++;
              for (i3 && f(t4), function(t5) {
                function e3(t6, e4) {
                  if (!t6 || !e4) return 6;
                  var n4 = t6.charAt(t6.length - 1), r3 = e4.charAt(0), i5 = n4.match(c), s4 = r3.match(c), o4 = i5 && n4.match(u), l3 = s4 && r3.match(u), a2 = o4 && n4.match(h), f3 = l3 && r3.match(h), g5 = a2 && t6.match(d), b5 = f3 && e4.match(p);
                  return g5 || b5 ? 5 : a2 || f3 ? 4 : i5 && !o4 && l3 ? 3 : o4 || l3 ? 2 : i5 || s4 ? 1 : 0;
                }
                for (var n3 = 1; n3 < t5.length - 1; ) {
                  if (t5[n3 - 1][0] == r2 && t5[n3 + 1][0] == r2) {
                    var i4 = t5[n3 - 1][1], s3 = t5[n3][1], o3 = t5[n3 + 1][1], l2 = a(i4, s3);
                    if (l2) {
                      var f2 = s3.substring(s3.length - l2);
                      i4 = i4.substring(0, i4.length - l2), s3 = f2 + s3.substring(0, s3.length - l2), o3 = f2 + o3;
                    }
                    for (var g4 = i4, b4 = s3, m4 = o3, v4 = e3(i4, s3) + e3(s3, o3); s3.charAt(0) === o3.charAt(0); ) {
                      i4 += s3.charAt(0), s3 = s3.substring(1) + o3.charAt(0), o3 = o3.substring(1);
                      var y3 = e3(i4, s3) + e3(s3, o3);
                      y3 >= v4 && (v4 = y3, g4 = i4, b4 = s3, m4 = o3);
                    }
                    t5[n3 - 1][1] != g4 && (g4 ? t5[n3 - 1][1] = g4 : (t5.splice(n3 - 1, 1), n3--), t5[n3][1] = b4, m4 ? t5[n3 + 1][1] = m4 : (t5.splice(n3 + 1, 1), n3--));
                  }
                  n3++;
                }
              }(t4), b3 = 1; b3 < t4.length; ) {
                if (t4[b3 - 1][0] == e2 && t4[b3][0] == n2) {
                  var x2 = t4[b3 - 1][1], k2 = t4[b3][1], C2 = l(x2, k2), _2 = l(k2, x2);
                  C2 >= _2 ? (C2 >= x2.length / 2 || C2 >= k2.length / 2) && (t4.splice(b3, 0, [r2, k2.substring(0, C2)]), t4[b3 - 1][1] = x2.substring(0, x2.length - C2), t4[b3 + 1][1] = k2.substring(C2), b3++) : (_2 >= x2.length / 2 || _2 >= k2.length / 2) && (t4.splice(b3, 0, [r2, x2.substring(0, _2)]), t4[b3 - 1][0] = n2, t4[b3 - 1][1] = k2.substring(0, k2.length - _2), t4[b3 + 1][0] = e2, t4[b3 + 1][1] = x2.substring(_2), b3++), b3++;
                }
                b3++;
              }
            }(_), _;
          }
          function s(t3, e3, n3, r3) {
            var s2 = t3.substring(0, n3), o2 = e3.substring(0, r3), l2 = t3.substring(n3), a2 = e3.substring(r3), c2 = i2(s2, o2), u2 = i2(l2, a2);
            return c2.concat(u2);
          }
          function o(t3, e3) {
            if (!t3 || !e3 || t3.charAt(0) !== e3.charAt(0)) return 0;
            for (var n3 = 0, r3 = Math.min(t3.length, e3.length), i3 = r3, s2 = 0; n3 < i3; ) t3.substring(s2, i3) == e3.substring(s2, i3) ? s2 = n3 = i3 : r3 = i3, i3 = Math.floor((r3 - n3) / 2 + n3);
            return g(t3.charCodeAt(i3 - 1)) && i3--, i3;
          }
          function l(t3, e3) {
            var n3 = t3.length, r3 = e3.length;
            if (0 == n3 || 0 == r3) return 0;
            n3 > r3 ? t3 = t3.substring(n3 - r3) : n3 < r3 && (e3 = e3.substring(0, n3));
            var i3 = Math.min(n3, r3);
            if (t3 == e3) return i3;
            for (var s2 = 0, o2 = 1; ; ) {
              var l2 = t3.substring(i3 - o2), a2 = e3.indexOf(l2);
              if (-1 == a2) return s2;
              o2 += a2, 0 != a2 && t3.substring(i3 - o2) != e3.substring(0, o2) || (s2 = o2, o2++);
            }
          }
          function a(t3, e3) {
            if (!t3 || !e3 || t3.slice(-1) !== e3.slice(-1)) return 0;
            for (var n3 = 0, r3 = Math.min(t3.length, e3.length), i3 = r3, s2 = 0; n3 < i3; ) t3.substring(t3.length - i3, t3.length - s2) == e3.substring(e3.length - i3, e3.length - s2) ? s2 = n3 = i3 : r3 = i3, i3 = Math.floor((r3 - n3) / 2 + n3);
            return b(t3.charCodeAt(t3.length - i3)) && i3--, i3;
          }
          var c = /[^a-zA-Z0-9]/, u = /\s/, h = /[\r\n]/, d = /\n\r?\n$/, p = /^\r?\n\r?\n/;
          function f(t3, i3) {
            t3.push([r2, ""]);
            for (var s2, l2 = 0, c2 = 0, u2 = 0, h2 = "", d2 = ""; l2 < t3.length; ) if (l2 < t3.length - 1 && !t3[l2][1]) t3.splice(l2, 1);
            else switch (t3[l2][0]) {
              case n2:
                u2++, d2 += t3[l2][1], l2++;
                break;
              case e2:
                c2++, h2 += t3[l2][1], l2++;
                break;
              case r2:
                var p2 = l2 - u2 - c2 - 1;
                if (i3) {
                  if (p2 >= 0 && v(t3[p2][1])) {
                    var g2 = t3[p2][1].slice(-1);
                    if (t3[p2][1] = t3[p2][1].slice(0, -1), h2 = g2 + h2, d2 = g2 + d2, !t3[p2][1]) {
                      t3.splice(p2, 1), l2--;
                      var b2 = p2 - 1;
                      t3[b2] && t3[b2][0] === n2 && (u2++, d2 = t3[b2][1] + d2, b2--), t3[b2] && t3[b2][0] === e2 && (c2++, h2 = t3[b2][1] + h2, b2--), p2 = b2;
                    }
                  }
                  m(t3[l2][1]) && (g2 = t3[l2][1].charAt(0), t3[l2][1] = t3[l2][1].slice(1), h2 += g2, d2 += g2);
                }
                if (l2 < t3.length - 1 && !t3[l2][1]) {
                  t3.splice(l2, 1);
                  break;
                }
                if (h2.length > 0 || d2.length > 0) {
                  h2.length > 0 && d2.length > 0 && (0 !== (s2 = o(d2, h2)) && (p2 >= 0 ? t3[p2][1] += d2.substring(0, s2) : (t3.splice(0, 0, [r2, d2.substring(0, s2)]), l2++), d2 = d2.substring(s2), h2 = h2.substring(s2)), 0 !== (s2 = a(d2, h2)) && (t3[l2][1] = d2.substring(d2.length - s2) + t3[l2][1], d2 = d2.substring(0, d2.length - s2), h2 = h2.substring(0, h2.length - s2)));
                  var y2 = u2 + c2;
                  0 === h2.length && 0 === d2.length ? (t3.splice(l2 - y2, y2), l2 -= y2) : 0 === h2.length ? (t3.splice(l2 - y2, y2, [n2, d2]), l2 = l2 - y2 + 1) : 0 === d2.length ? (t3.splice(l2 - y2, y2, [e2, h2]), l2 = l2 - y2 + 1) : (t3.splice(l2 - y2, y2, [e2, h2], [n2, d2]), l2 = l2 - y2 + 2);
                }
                0 !== l2 && t3[l2 - 1][0] === r2 ? (t3[l2 - 1][1] += t3[l2][1], t3.splice(l2, 1)) : l2++, u2 = 0, c2 = 0, h2 = "", d2 = "";
            }
            "" === t3[t3.length - 1][1] && t3.pop();
            var w2 = false;
            for (l2 = 1; l2 < t3.length - 1; ) t3[l2 - 1][0] === r2 && t3[l2 + 1][0] === r2 && (t3[l2][1].substring(t3[l2][1].length - t3[l2 - 1][1].length) === t3[l2 - 1][1] ? (t3[l2][1] = t3[l2 - 1][1] + t3[l2][1].substring(0, t3[l2][1].length - t3[l2 - 1][1].length), t3[l2 + 1][1] = t3[l2 - 1][1] + t3[l2 + 1][1], t3.splice(l2 - 1, 1), w2 = true) : t3[l2][1].substring(0, t3[l2 + 1][1].length) == t3[l2 + 1][1] && (t3[l2 - 1][1] += t3[l2 + 1][1], t3[l2][1] = t3[l2][1].substring(t3[l2 + 1][1].length) + t3[l2 + 1][1], t3.splice(l2 + 1, 1), w2 = true)), l2++;
            w2 && f(t3, i3);
          }
          function g(t3) {
            return t3 >= 55296 && t3 <= 56319;
          }
          function b(t3) {
            return t3 >= 56320 && t3 <= 57343;
          }
          function m(t3) {
            return b(t3.charCodeAt(0));
          }
          function v(t3) {
            return g(t3.charCodeAt(t3.length - 1));
          }
          function y(t3, i3, s2, o2) {
            return v(t3) || m(o2) ? null : function(t4) {
              for (var e3 = [], n3 = 0; n3 < t4.length; n3++) t4[n3][1].length > 0 && e3.push(t4[n3]);
              return e3;
            }([[r2, t3], [e2, i3], [n2, s2], [r2, o2]]);
          }
          function w(t3, e3, n3, r3) {
            return i2(t3, e3, n3, r3, true);
          }
          w.INSERT = n2, w.DELETE = e2, w.EQUAL = r2, t2.exports = w;
        }, 861: function(t2, e2, n2) {
          t2 = n2.nmd(t2);
          var r2 = "__lodash_hash_undefined__", i2 = 9007199254740991, s = "[object Arguments]", o = "[object Boolean]", l = "[object Date]", a = "[object Function]", c = "[object GeneratorFunction]", u = "[object Map]", h = "[object Number]", d = "[object Object]", p = "[object Promise]", f = "[object RegExp]", g = "[object Set]", b = "[object String]", m = "[object Symbol]", v = "[object WeakMap]", y = "[object ArrayBuffer]", w = "[object DataView]", x = "[object Float32Array]", k = "[object Float64Array]", C = "[object Int8Array]", _ = "[object Int16Array]", T = "[object Int32Array]", N = "[object Uint8Array]", A = "[object Uint8ClampedArray]", L = "[object Uint16Array]", S = "[object Uint32Array]", E = /\w*$/, j = /^\[object .+?Constructor\]$/, q = /^(?:0|[1-9]\d*)$/, M = {};
          M[s] = M["[object Array]"] = M[y] = M[w] = M[o] = M[l] = M[x] = M[k] = M[C] = M[_] = M[T] = M[u] = M[h] = M[d] = M[f] = M[g] = M[b] = M[m] = M[N] = M[A] = M[L] = M[S] = true, M["[object Error]"] = M[a] = M[v] = false;
          var B = "object" == typeof n2.g && n2.g && n2.g.Object === Object && n2.g, O = "object" == typeof self && self && self.Object === Object && self, R = B || O || Function("return this")(), P = e2 && !e2.nodeType && e2, I = P && t2 && !t2.nodeType && t2, D = I && I.exports === P;
          function z(t3, e3) {
            return t3.set(e3[0], e3[1]), t3;
          }
          function H(t3, e3) {
            return t3.add(e3), t3;
          }
          function F(t3, e3, n3, r3) {
            var i3 = -1, s2 = t3 ? t3.length : 0;
            for (r3 && s2 && (n3 = t3[++i3]); ++i3 < s2; ) n3 = e3(n3, t3[i3], i3, t3);
            return n3;
          }
          function U(t3) {
            var e3 = false;
            if (null != t3 && "function" != typeof t3.toString) try {
              e3 = !!(t3 + "");
            } catch (t4) {
            }
            return e3;
          }
          function V(t3) {
            var e3 = -1, n3 = Array(t3.size);
            return t3.forEach(function(t4, r3) {
              n3[++e3] = [r3, t4];
            }), n3;
          }
          function W(t3, e3) {
            return function(n3) {
              return t3(e3(n3));
            };
          }
          function $(t3) {
            var e3 = -1, n3 = Array(t3.size);
            return t3.forEach(function(t4) {
              n3[++e3] = t4;
            }), n3;
          }
          var G, K = Array.prototype, Y = Function.prototype, Z = Object.prototype, X = R["__core-js_shared__"], J = (G = /[^.]+$/.exec(X && X.keys && X.keys.IE_PROTO || "")) ? "Symbol(src)_1." + G : "", Q = Y.toString, tt = Z.hasOwnProperty, et = Z.toString, nt = RegExp("^" + Q.call(tt).replace(/[\\^$.*+?()[\]{}|]/g, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"), rt = D ? R.Buffer : void 0, it = R.Symbol, st = R.Uint8Array, ot = W(Object.getPrototypeOf, Object), lt = Object.create, at = Z.propertyIsEnumerable, ct = K.splice, ut = Object.getOwnPropertySymbols, ht = rt ? rt.isBuffer : void 0, dt = W(Object.keys, Object), pt = Rt(R, "DataView"), ft = Rt(R, "Map"), gt = Rt(R, "Promise"), bt = Rt(R, "Set"), mt = Rt(R, "WeakMap"), vt = Rt(Object, "create"), yt = Ht(pt), wt = Ht(ft), xt = Ht(gt), kt = Ht(bt), Ct = Ht(mt), _t = it ? it.prototype : void 0, Tt = _t ? _t.valueOf : void 0;
          function Nt(t3) {
            var e3 = -1, n3 = t3 ? t3.length : 0;
            for (this.clear(); ++e3 < n3; ) {
              var r3 = t3[e3];
              this.set(r3[0], r3[1]);
            }
          }
          function At(t3) {
            var e3 = -1, n3 = t3 ? t3.length : 0;
            for (this.clear(); ++e3 < n3; ) {
              var r3 = t3[e3];
              this.set(r3[0], r3[1]);
            }
          }
          function Lt(t3) {
            var e3 = -1, n3 = t3 ? t3.length : 0;
            for (this.clear(); ++e3 < n3; ) {
              var r3 = t3[e3];
              this.set(r3[0], r3[1]);
            }
          }
          function St(t3) {
            this.__data__ = new At(t3);
          }
          function Et(t3, e3, n3) {
            var r3 = t3[e3];
            tt.call(t3, e3) && Ft(r3, n3) && (void 0 !== n3 || e3 in t3) || (t3[e3] = n3);
          }
          function jt(t3, e3) {
            for (var n3 = t3.length; n3--; ) if (Ft(t3[n3][0], e3)) return n3;
            return -1;
          }
          function qt(t3, e3, n3, r3, i3, p2, v2) {
            var j2;
            if (r3 && (j2 = p2 ? r3(t3, i3, p2, v2) : r3(t3)), void 0 !== j2) return j2;
            if (!Gt(t3)) return t3;
            var q2 = Ut(t3);
            if (q2) {
              if (j2 = function(t4) {
                var e4 = t4.length, n4 = t4.constructor(e4);
                return e4 && "string" == typeof t4[0] && tt.call(t4, "index") && (n4.index = t4.index, n4.input = t4.input), n4;
              }(t3), !e3) return function(t4, e4) {
                var n4 = -1, r4 = t4.length;
                for (e4 || (e4 = Array(r4)); ++n4 < r4; ) e4[n4] = t4[n4];
                return e4;
              }(t3, j2);
            } else {
              var B2 = It(t3), O2 = B2 == a || B2 == c;
              if (Wt(t3)) return function(t4, e4) {
                if (e4) return t4.slice();
                var n4 = new t4.constructor(t4.length);
                return t4.copy(n4), n4;
              }(t3, e3);
              if (B2 == d || B2 == s || O2 && !p2) {
                if (U(t3)) return p2 ? t3 : {};
                if (j2 = function(t4) {
                  return "function" != typeof t4.constructor || zt(t4) ? {} : Gt(e4 = ot(t4)) ? lt(e4) : {};
                  var e4;
                }(O2 ? {} : t3), !e3) return function(t4, e4) {
                  return Bt(t4, Pt(t4), e4);
                }(t3, function(t4, e4) {
                  return t4 && Bt(e4, Kt(e4), t4);
                }(j2, t3));
              } else {
                if (!M[B2]) return p2 ? t3 : {};
                j2 = function(t4, e4, n4, r4) {
                  var i4, s2 = t4.constructor;
                  switch (e4) {
                    case y:
                      return Mt(t4);
                    case o:
                    case l:
                      return new s2(+t4);
                    case w:
                      return function(t5, e5) {
                        var n5 = e5 ? Mt(t5.buffer) : t5.buffer;
                        return new t5.constructor(n5, t5.byteOffset, t5.byteLength);
                      }(t4, r4);
                    case x:
                    case k:
                    case C:
                    case _:
                    case T:
                    case N:
                    case A:
                    case L:
                    case S:
                      return function(t5, e5) {
                        var n5 = e5 ? Mt(t5.buffer) : t5.buffer;
                        return new t5.constructor(n5, t5.byteOffset, t5.length);
                      }(t4, r4);
                    case u:
                      return function(t5, e5, n5) {
                        return F(e5 ? n5(V(t5), true) : V(t5), z, new t5.constructor());
                      }(t4, r4, n4);
                    case h:
                    case b:
                      return new s2(t4);
                    case f:
                      return function(t5) {
                        var e5 = new t5.constructor(t5.source, E.exec(t5));
                        return e5.lastIndex = t5.lastIndex, e5;
                      }(t4);
                    case g:
                      return function(t5, e5, n5) {
                        return F(e5 ? n5($(t5), true) : $(t5), H, new t5.constructor());
                      }(t4, r4, n4);
                    case m:
                      return i4 = t4, Tt ? Object(Tt.call(i4)) : {};
                  }
                }(t3, B2, qt, e3);
              }
            }
            v2 || (v2 = new St());
            var R2 = v2.get(t3);
            if (R2) return R2;
            if (v2.set(t3, j2), !q2) var P2 = n3 ? function(t4) {
              return function(t5, e4, n4) {
                var r4 = e4(t5);
                return Ut(t5) ? r4 : function(t6, e5) {
                  for (var n5 = -1, r5 = e5.length, i4 = t6.length; ++n5 < r5; ) t6[i4 + n5] = e5[n5];
                  return t6;
                }(r4, n4(t5));
              }(t4, Kt, Pt);
            }(t3) : Kt(t3);
            return function(t4, e4) {
              for (var n4 = -1, r4 = t4 ? t4.length : 0; ++n4 < r4 && false !== e4(t4[n4], n4); ) ;
            }(P2 || t3, function(i4, s2) {
              P2 && (i4 = t3[s2 = i4]), Et(j2, s2, qt(i4, e3, n3, r3, s2, t3, v2));
            }), j2;
          }
          function Mt(t3) {
            var e3 = new t3.constructor(t3.byteLength);
            return new st(e3).set(new st(t3)), e3;
          }
          function Bt(t3, e3, n3, r3) {
            n3 || (n3 = {});
            for (var i3 = -1, s2 = e3.length; ++i3 < s2; ) {
              var o2 = e3[i3], l2 = r3 ? r3(n3[o2], t3[o2], o2, n3, t3) : void 0;
              Et(n3, o2, void 0 === l2 ? t3[o2] : l2);
            }
            return n3;
          }
          function Ot(t3, e3) {
            var n3, r3, i3 = t3.__data__;
            return ("string" == (r3 = typeof (n3 = e3)) || "number" == r3 || "symbol" == r3 || "boolean" == r3 ? "__proto__" !== n3 : null === n3) ? i3["string" == typeof e3 ? "string" : "hash"] : i3.map;
          }
          function Rt(t3, e3) {
            var n3 = function(t4, e4) {
              return null == t4 ? void 0 : t4[e4];
            }(t3, e3);
            return function(t4) {
              return !(!Gt(t4) || (e4 = t4, J && J in e4)) && ($t(t4) || U(t4) ? nt : j).test(Ht(t4));
              var e4;
            }(n3) ? n3 : void 0;
          }
          Nt.prototype.clear = function() {
            this.__data__ = vt ? vt(null) : {};
          }, Nt.prototype.delete = function(t3) {
            return this.has(t3) && delete this.__data__[t3];
          }, Nt.prototype.get = function(t3) {
            var e3 = this.__data__;
            if (vt) {
              var n3 = e3[t3];
              return n3 === r2 ? void 0 : n3;
            }
            return tt.call(e3, t3) ? e3[t3] : void 0;
          }, Nt.prototype.has = function(t3) {
            var e3 = this.__data__;
            return vt ? void 0 !== e3[t3] : tt.call(e3, t3);
          }, Nt.prototype.set = function(t3, e3) {
            return this.__data__[t3] = vt && void 0 === e3 ? r2 : e3, this;
          }, At.prototype.clear = function() {
            this.__data__ = [];
          }, At.prototype.delete = function(t3) {
            var e3 = this.__data__, n3 = jt(e3, t3);
            return !(n3 < 0 || (n3 == e3.length - 1 ? e3.pop() : ct.call(e3, n3, 1), 0));
          }, At.prototype.get = function(t3) {
            var e3 = this.__data__, n3 = jt(e3, t3);
            return n3 < 0 ? void 0 : e3[n3][1];
          }, At.prototype.has = function(t3) {
            return jt(this.__data__, t3) > -1;
          }, At.prototype.set = function(t3, e3) {
            var n3 = this.__data__, r3 = jt(n3, t3);
            return r3 < 0 ? n3.push([t3, e3]) : n3[r3][1] = e3, this;
          }, Lt.prototype.clear = function() {
            this.__data__ = { hash: new Nt(), map: new (ft || At)(), string: new Nt() };
          }, Lt.prototype.delete = function(t3) {
            return Ot(this, t3).delete(t3);
          }, Lt.prototype.get = function(t3) {
            return Ot(this, t3).get(t3);
          }, Lt.prototype.has = function(t3) {
            return Ot(this, t3).has(t3);
          }, Lt.prototype.set = function(t3, e3) {
            return Ot(this, t3).set(t3, e3), this;
          }, St.prototype.clear = function() {
            this.__data__ = new At();
          }, St.prototype.delete = function(t3) {
            return this.__data__.delete(t3);
          }, St.prototype.get = function(t3) {
            return this.__data__.get(t3);
          }, St.prototype.has = function(t3) {
            return this.__data__.has(t3);
          }, St.prototype.set = function(t3, e3) {
            var n3 = this.__data__;
            if (n3 instanceof At) {
              var r3 = n3.__data__;
              if (!ft || r3.length < 199) return r3.push([t3, e3]), this;
              n3 = this.__data__ = new Lt(r3);
            }
            return n3.set(t3, e3), this;
          };
          var Pt = ut ? W(ut, Object) : function() {
            return [];
          }, It = function(t3) {
            return et.call(t3);
          };
          function Dt(t3, e3) {
            return !!(e3 = null == e3 ? i2 : e3) && ("number" == typeof t3 || q.test(t3)) && t3 > -1 && t3 % 1 == 0 && t3 < e3;
          }
          function zt(t3) {
            var e3 = t3 && t3.constructor;
            return t3 === ("function" == typeof e3 && e3.prototype || Z);
          }
          function Ht(t3) {
            if (null != t3) {
              try {
                return Q.call(t3);
              } catch (t4) {
              }
              try {
                return t3 + "";
              } catch (t4) {
              }
            }
            return "";
          }
          function Ft(t3, e3) {
            return t3 === e3 || t3 != t3 && e3 != e3;
          }
          (pt && It(new pt(new ArrayBuffer(1))) != w || ft && It(new ft()) != u || gt && It(gt.resolve()) != p || bt && It(new bt()) != g || mt && It(new mt()) != v) && (It = function(t3) {
            var e3 = et.call(t3), n3 = e3 == d ? t3.constructor : void 0, r3 = n3 ? Ht(n3) : void 0;
            if (r3) switch (r3) {
              case yt:
                return w;
              case wt:
                return u;
              case xt:
                return p;
              case kt:
                return g;
              case Ct:
                return v;
            }
            return e3;
          });
          var Ut = Array.isArray;
          function Vt(t3) {
            return null != t3 && function(t4) {
              return "number" == typeof t4 && t4 > -1 && t4 % 1 == 0 && t4 <= i2;
            }(t3.length) && !$t(t3);
          }
          var Wt = ht || function() {
            return false;
          };
          function $t(t3) {
            var e3 = Gt(t3) ? et.call(t3) : "";
            return e3 == a || e3 == c;
          }
          function Gt(t3) {
            var e3 = typeof t3;
            return !!t3 && ("object" == e3 || "function" == e3);
          }
          function Kt(t3) {
            return Vt(t3) ? function(t4, e3) {
              var n3 = Ut(t4) || function(t5) {
                return function(t6) {
                  return /* @__PURE__ */ function(t7) {
                    return !!t7 && "object" == typeof t7;
                  }(t6) && Vt(t6);
                }(t5) && tt.call(t5, "callee") && (!at.call(t5, "callee") || et.call(t5) == s);
              }(t4) ? function(t5, e4) {
                for (var n4 = -1, r4 = Array(t5); ++n4 < t5; ) r4[n4] = e4(n4);
                return r4;
              }(t4.length, String) : [], r3 = n3.length, i3 = !!r3;
              for (var o2 in t4) !e3 && !tt.call(t4, o2) || i3 && ("length" == o2 || Dt(o2, r3)) || n3.push(o2);
              return n3;
            }(t3) : function(t4) {
              if (!zt(t4)) return dt(t4);
              var e3 = [];
              for (var n3 in Object(t4)) tt.call(t4, n3) && "constructor" != n3 && e3.push(n3);
              return e3;
            }(t3);
          }
          t2.exports = function(t3) {
            return qt(t3, true, true);
          };
        }, 842: function(t2, e2, n2) {
          t2 = n2.nmd(t2);
          var r2 = "__lodash_hash_undefined__", i2 = 1, s = 2, o = 9007199254740991, l = "[object Arguments]", a = "[object Array]", c = "[object AsyncFunction]", u = "[object Boolean]", h = "[object Date]", d = "[object Error]", p = "[object Function]", f = "[object GeneratorFunction]", g = "[object Map]", b = "[object Number]", m = "[object Null]", v = "[object Object]", y = "[object Promise]", w = "[object Proxy]", x = "[object RegExp]", k = "[object Set]", C = "[object String]", _ = "[object Undefined]", T = "[object WeakMap]", N = "[object ArrayBuffer]", A = "[object DataView]", L = /^\[object .+?Constructor\]$/, S = /^(?:0|[1-9]\d*)$/, E = {};
          E["[object Float32Array]"] = E["[object Float64Array]"] = E["[object Int8Array]"] = E["[object Int16Array]"] = E["[object Int32Array]"] = E["[object Uint8Array]"] = E["[object Uint8ClampedArray]"] = E["[object Uint16Array]"] = E["[object Uint32Array]"] = true, E[l] = E[a] = E[N] = E[u] = E[A] = E[h] = E[d] = E[p] = E[g] = E[b] = E[v] = E[x] = E[k] = E[C] = E[T] = false;
          var j = "object" == typeof n2.g && n2.g && n2.g.Object === Object && n2.g, q = "object" == typeof self && self && self.Object === Object && self, M = j || q || Function("return this")(), B = e2 && !e2.nodeType && e2, O = B && t2 && !t2.nodeType && t2, R = O && O.exports === B, P = R && j.process, I = function() {
            try {
              return P && P.binding && P.binding("util");
            } catch (t3) {
            }
          }(), D = I && I.isTypedArray;
          function z(t3, e3) {
            for (var n3 = -1, r3 = null == t3 ? 0 : t3.length; ++n3 < r3; ) if (e3(t3[n3], n3, t3)) return true;
            return false;
          }
          function H(t3) {
            var e3 = -1, n3 = Array(t3.size);
            return t3.forEach(function(t4, r3) {
              n3[++e3] = [r3, t4];
            }), n3;
          }
          function F(t3) {
            var e3 = -1, n3 = Array(t3.size);
            return t3.forEach(function(t4) {
              n3[++e3] = t4;
            }), n3;
          }
          var U, V, W, $ = Array.prototype, G = Function.prototype, K = Object.prototype, Y = M["__core-js_shared__"], Z = G.toString, X = K.hasOwnProperty, J = (U = /[^.]+$/.exec(Y && Y.keys && Y.keys.IE_PROTO || "")) ? "Symbol(src)_1." + U : "", Q = K.toString, tt = RegExp("^" + Z.call(X).replace(/[\\^$.*+?()[\]{}|]/g, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"), et = R ? M.Buffer : void 0, nt = M.Symbol, rt = M.Uint8Array, it = K.propertyIsEnumerable, st = $.splice, ot = nt ? nt.toStringTag : void 0, lt = Object.getOwnPropertySymbols, at = et ? et.isBuffer : void 0, ct = (V = Object.keys, W = Object, function(t3) {
            return V(W(t3));
          }), ut = Ot(M, "DataView"), ht = Ot(M, "Map"), dt = Ot(M, "Promise"), pt = Ot(M, "Set"), ft = Ot(M, "WeakMap"), gt = Ot(Object, "create"), bt = Dt(ut), mt = Dt(ht), vt = Dt(dt), yt = Dt(pt), wt = Dt(ft), xt = nt ? nt.prototype : void 0, kt = xt ? xt.valueOf : void 0;
          function Ct(t3) {
            var e3 = -1, n3 = null == t3 ? 0 : t3.length;
            for (this.clear(); ++e3 < n3; ) {
              var r3 = t3[e3];
              this.set(r3[0], r3[1]);
            }
          }
          function _t(t3) {
            var e3 = -1, n3 = null == t3 ? 0 : t3.length;
            for (this.clear(); ++e3 < n3; ) {
              var r3 = t3[e3];
              this.set(r3[0], r3[1]);
            }
          }
          function Tt(t3) {
            var e3 = -1, n3 = null == t3 ? 0 : t3.length;
            for (this.clear(); ++e3 < n3; ) {
              var r3 = t3[e3];
              this.set(r3[0], r3[1]);
            }
          }
          function Nt(t3) {
            var e3 = -1, n3 = null == t3 ? 0 : t3.length;
            for (this.__data__ = new Tt(); ++e3 < n3; ) this.add(t3[e3]);
          }
          function At(t3) {
            var e3 = this.__data__ = new _t(t3);
            this.size = e3.size;
          }
          function Lt(t3, e3) {
            for (var n3 = t3.length; n3--; ) if (zt(t3[n3][0], e3)) return n3;
            return -1;
          }
          function St(t3) {
            return null == t3 ? void 0 === t3 ? _ : m : ot && ot in Object(t3) ? function(t4) {
              var e3 = X.call(t4, ot), n3 = t4[ot];
              try {
                t4[ot] = void 0;
                var r3 = true;
              } catch (t5) {
              }
              var i3 = Q.call(t4);
              return r3 && (e3 ? t4[ot] = n3 : delete t4[ot]), i3;
            }(t3) : function(t4) {
              return Q.call(t4);
            }(t3);
          }
          function Et(t3) {
            return Gt(t3) && St(t3) == l;
          }
          function jt(t3, e3, n3, r3, o2) {
            return t3 === e3 || (null == t3 || null == e3 || !Gt(t3) && !Gt(e3) ? t3 != t3 && e3 != e3 : function(t4, e4, n4, r4, o3, c2) {
              var p2 = Ft(t4), f2 = Ft(e4), m2 = p2 ? a : Pt(t4), y2 = f2 ? a : Pt(e4), w2 = (m2 = m2 == l ? v : m2) == v, _2 = (y2 = y2 == l ? v : y2) == v, T2 = m2 == y2;
              if (T2 && Ut(t4)) {
                if (!Ut(e4)) return false;
                p2 = true, w2 = false;
              }
              if (T2 && !w2) return c2 || (c2 = new At()), p2 || Kt(t4) ? qt(t4, e4, n4, r4, o3, c2) : function(t5, e5, n5, r5, o4, l2, a2) {
                switch (n5) {
                  case A:
                    if (t5.byteLength != e5.byteLength || t5.byteOffset != e5.byteOffset) return false;
                    t5 = t5.buffer, e5 = e5.buffer;
                  case N:
                    return !(t5.byteLength != e5.byteLength || !l2(new rt(t5), new rt(e5)));
                  case u:
                  case h:
                  case b:
                    return zt(+t5, +e5);
                  case d:
                    return t5.name == e5.name && t5.message == e5.message;
                  case x:
                  case C:
                    return t5 == e5 + "";
                  case g:
                    var c3 = H;
                  case k:
                    var p3 = r5 & i2;
                    if (c3 || (c3 = F), t5.size != e5.size && !p3) return false;
                    var f3 = a2.get(t5);
                    if (f3) return f3 == e5;
                    r5 |= s, a2.set(t5, e5);
                    var m3 = qt(c3(t5), c3(e5), r5, o4, l2, a2);
                    return a2.delete(t5), m3;
                  case "[object Symbol]":
                    if (kt) return kt.call(t5) == kt.call(e5);
                }
                return false;
              }(t4, e4, m2, n4, r4, o3, c2);
              if (!(n4 & i2)) {
                var L2 = w2 && X.call(t4, "__wrapped__"), S2 = _2 && X.call(e4, "__wrapped__");
                if (L2 || S2) {
                  var E2 = L2 ? t4.value() : t4, j2 = S2 ? e4.value() : e4;
                  return c2 || (c2 = new At()), o3(E2, j2, n4, r4, c2);
                }
              }
              return !!T2 && (c2 || (c2 = new At()), function(t5, e5, n5, r5, s2, o4) {
                var l2 = n5 & i2, a2 = Mt(t5), c3 = a2.length;
                if (c3 != Mt(e5).length && !l2) return false;
                for (var u2 = c3; u2--; ) {
                  var h2 = a2[u2];
                  if (!(l2 ? h2 in e5 : X.call(e5, h2))) return false;
                }
                var d2 = o4.get(t5);
                if (d2 && o4.get(e5)) return d2 == e5;
                var p3 = true;
                o4.set(t5, e5), o4.set(e5, t5);
                for (var f3 = l2; ++u2 < c3; ) {
                  var g2 = t5[h2 = a2[u2]], b2 = e5[h2];
                  if (r5) var m3 = l2 ? r5(b2, g2, h2, e5, t5, o4) : r5(g2, b2, h2, t5, e5, o4);
                  if (!(void 0 === m3 ? g2 === b2 || s2(g2, b2, n5, r5, o4) : m3)) {
                    p3 = false;
                    break;
                  }
                  f3 || (f3 = "constructor" == h2);
                }
                if (p3 && !f3) {
                  var v2 = t5.constructor, y3 = e5.constructor;
                  v2 == y3 || !("constructor" in t5) || !("constructor" in e5) || "function" == typeof v2 && v2 instanceof v2 && "function" == typeof y3 && y3 instanceof y3 || (p3 = false);
                }
                return o4.delete(t5), o4.delete(e5), p3;
              }(t4, e4, n4, r4, o3, c2));
            }(t3, e3, n3, r3, jt, o2));
          }
          function qt(t3, e3, n3, r3, o2, l2) {
            var a2 = n3 & i2, c2 = t3.length, u2 = e3.length;
            if (c2 != u2 && !(a2 && u2 > c2)) return false;
            var h2 = l2.get(t3);
            if (h2 && l2.get(e3)) return h2 == e3;
            var d2 = -1, p2 = true, f2 = n3 & s ? new Nt() : void 0;
            for (l2.set(t3, e3), l2.set(e3, t3); ++d2 < c2; ) {
              var g2 = t3[d2], b2 = e3[d2];
              if (r3) var m2 = a2 ? r3(b2, g2, d2, e3, t3, l2) : r3(g2, b2, d2, t3, e3, l2);
              if (void 0 !== m2) {
                if (m2) continue;
                p2 = false;
                break;
              }
              if (f2) {
                if (!z(e3, function(t4, e4) {
                  if (i3 = e4, !f2.has(i3) && (g2 === t4 || o2(g2, t4, n3, r3, l2))) return f2.push(e4);
                  var i3;
                })) {
                  p2 = false;
                  break;
                }
              } else if (g2 !== b2 && !o2(g2, b2, n3, r3, l2)) {
                p2 = false;
                break;
              }
            }
            return l2.delete(t3), l2.delete(e3), p2;
          }
          function Mt(t3) {
            return function(t4, e3, n3) {
              var r3 = e3(t4);
              return Ft(t4) ? r3 : function(t5, e4) {
                for (var n4 = -1, r4 = e4.length, i3 = t5.length; ++n4 < r4; ) t5[i3 + n4] = e4[n4];
                return t5;
              }(r3, n3(t4));
            }(t3, Yt, Rt);
          }
          function Bt(t3, e3) {
            var n3, r3, i3 = t3.__data__;
            return ("string" == (r3 = typeof (n3 = e3)) || "number" == r3 || "symbol" == r3 || "boolean" == r3 ? "__proto__" !== n3 : null === n3) ? i3["string" == typeof e3 ? "string" : "hash"] : i3.map;
          }
          function Ot(t3, e3) {
            var n3 = function(t4, e4) {
              return null == t4 ? void 0 : t4[e4];
            }(t3, e3);
            return function(t4) {
              return !(!$t(t4) || function(t5) {
                return !!J && J in t5;
              }(t4)) && (Vt(t4) ? tt : L).test(Dt(t4));
            }(n3) ? n3 : void 0;
          }
          Ct.prototype.clear = function() {
            this.__data__ = gt ? gt(null) : {}, this.size = 0;
          }, Ct.prototype.delete = function(t3) {
            var e3 = this.has(t3) && delete this.__data__[t3];
            return this.size -= e3 ? 1 : 0, e3;
          }, Ct.prototype.get = function(t3) {
            var e3 = this.__data__;
            if (gt) {
              var n3 = e3[t3];
              return n3 === r2 ? void 0 : n3;
            }
            return X.call(e3, t3) ? e3[t3] : void 0;
          }, Ct.prototype.has = function(t3) {
            var e3 = this.__data__;
            return gt ? void 0 !== e3[t3] : X.call(e3, t3);
          }, Ct.prototype.set = function(t3, e3) {
            var n3 = this.__data__;
            return this.size += this.has(t3) ? 0 : 1, n3[t3] = gt && void 0 === e3 ? r2 : e3, this;
          }, _t.prototype.clear = function() {
            this.__data__ = [], this.size = 0;
          }, _t.prototype.delete = function(t3) {
            var e3 = this.__data__, n3 = Lt(e3, t3);
            return !(n3 < 0 || (n3 == e3.length - 1 ? e3.pop() : st.call(e3, n3, 1), --this.size, 0));
          }, _t.prototype.get = function(t3) {
            var e3 = this.__data__, n3 = Lt(e3, t3);
            return n3 < 0 ? void 0 : e3[n3][1];
          }, _t.prototype.has = function(t3) {
            return Lt(this.__data__, t3) > -1;
          }, _t.prototype.set = function(t3, e3) {
            var n3 = this.__data__, r3 = Lt(n3, t3);
            return r3 < 0 ? (++this.size, n3.push([t3, e3])) : n3[r3][1] = e3, this;
          }, Tt.prototype.clear = function() {
            this.size = 0, this.__data__ = { hash: new Ct(), map: new (ht || _t)(), string: new Ct() };
          }, Tt.prototype.delete = function(t3) {
            var e3 = Bt(this, t3).delete(t3);
            return this.size -= e3 ? 1 : 0, e3;
          }, Tt.prototype.get = function(t3) {
            return Bt(this, t3).get(t3);
          }, Tt.prototype.has = function(t3) {
            return Bt(this, t3).has(t3);
          }, Tt.prototype.set = function(t3, e3) {
            var n3 = Bt(this, t3), r3 = n3.size;
            return n3.set(t3, e3), this.size += n3.size == r3 ? 0 : 1, this;
          }, Nt.prototype.add = Nt.prototype.push = function(t3) {
            return this.__data__.set(t3, r2), this;
          }, Nt.prototype.has = function(t3) {
            return this.__data__.has(t3);
          }, At.prototype.clear = function() {
            this.__data__ = new _t(), this.size = 0;
          }, At.prototype.delete = function(t3) {
            var e3 = this.__data__, n3 = e3.delete(t3);
            return this.size = e3.size, n3;
          }, At.prototype.get = function(t3) {
            return this.__data__.get(t3);
          }, At.prototype.has = function(t3) {
            return this.__data__.has(t3);
          }, At.prototype.set = function(t3, e3) {
            var n3 = this.__data__;
            if (n3 instanceof _t) {
              var r3 = n3.__data__;
              if (!ht || r3.length < 199) return r3.push([t3, e3]), this.size = ++n3.size, this;
              n3 = this.__data__ = new Tt(r3);
            }
            return n3.set(t3, e3), this.size = n3.size, this;
          };
          var Rt = lt ? function(t3) {
            return null == t3 ? [] : (t3 = Object(t3), function(e3, n3) {
              for (var r3 = -1, i3 = null == e3 ? 0 : e3.length, s2 = 0, o2 = []; ++r3 < i3; ) {
                var l2 = e3[r3];
                a2 = l2, it.call(t3, a2) && (o2[s2++] = l2);
              }
              var a2;
              return o2;
            }(lt(t3)));
          } : function() {
            return [];
          }, Pt = St;
          function It(t3, e3) {
            return !!(e3 = null == e3 ? o : e3) && ("number" == typeof t3 || S.test(t3)) && t3 > -1 && t3 % 1 == 0 && t3 < e3;
          }
          function Dt(t3) {
            if (null != t3) {
              try {
                return Z.call(t3);
              } catch (t4) {
              }
              try {
                return t3 + "";
              } catch (t4) {
              }
            }
            return "";
          }
          function zt(t3, e3) {
            return t3 === e3 || t3 != t3 && e3 != e3;
          }
          (ut && Pt(new ut(new ArrayBuffer(1))) != A || ht && Pt(new ht()) != g || dt && Pt(dt.resolve()) != y || pt && Pt(new pt()) != k || ft && Pt(new ft()) != T) && (Pt = function(t3) {
            var e3 = St(t3), n3 = e3 == v ? t3.constructor : void 0, r3 = n3 ? Dt(n3) : "";
            if (r3) switch (r3) {
              case bt:
                return A;
              case mt:
                return g;
              case vt:
                return y;
              case yt:
                return k;
              case wt:
                return T;
            }
            return e3;
          });
          var Ht = Et(/* @__PURE__ */ function() {
            return arguments;
          }()) ? Et : function(t3) {
            return Gt(t3) && X.call(t3, "callee") && !it.call(t3, "callee");
          }, Ft = Array.isArray, Ut = at || function() {
            return false;
          };
          function Vt(t3) {
            if (!$t(t3)) return false;
            var e3 = St(t3);
            return e3 == p || e3 == f || e3 == c || e3 == w;
          }
          function Wt(t3) {
            return "number" == typeof t3 && t3 > -1 && t3 % 1 == 0 && t3 <= o;
          }
          function $t(t3) {
            var e3 = typeof t3;
            return null != t3 && ("object" == e3 || "function" == e3);
          }
          function Gt(t3) {
            return null != t3 && "object" == typeof t3;
          }
          var Kt = D ? /* @__PURE__ */ function(t3) {
            return function(e3) {
              return t3(e3);
            };
          }(D) : function(t3) {
            return Gt(t3) && Wt(t3.length) && !!E[St(t3)];
          };
          function Yt(t3) {
            return null != (e3 = t3) && Wt(e3.length) && !Vt(e3) ? function(t4, e4) {
              var n3 = Ft(t4), r3 = !n3 && Ht(t4), i3 = !n3 && !r3 && Ut(t4), s2 = !n3 && !r3 && !i3 && Kt(t4), o2 = n3 || r3 || i3 || s2, l2 = o2 ? function(t5, e5) {
                for (var n4 = -1, r4 = Array(t5); ++n4 < t5; ) r4[n4] = e5(n4);
                return r4;
              }(t4.length, String) : [], a2 = l2.length;
              for (var c2 in t4) !e4 && !X.call(t4, c2) || o2 && ("length" == c2 || i3 && ("offset" == c2 || "parent" == c2) || s2 && ("buffer" == c2 || "byteLength" == c2 || "byteOffset" == c2) || It(c2, a2)) || l2.push(c2);
              return l2;
            }(t3) : function(t4) {
              if (n3 = (e4 = t4) && e4.constructor, e4 !== ("function" == typeof n3 && n3.prototype || K)) return ct(t4);
              var e4, n3, r3 = [];
              for (var i3 in Object(t4)) X.call(t4, i3) && "constructor" != i3 && r3.push(i3);
              return r3;
            }(t3);
            var e3;
          }
          t2.exports = function(t3, e3) {
            return jt(t3, e3);
          };
        }, 930: function(t2, e2, n2) {
          t2 = n2.nmd(t2);
          var r2 = "__lodash_hash_undefined__", i2 = 9007199254740991, s = "[object Arguments]", o = "[object AsyncFunction]", l = "[object Function]", a = "[object GeneratorFunction]", c = "[object Null]", u = "[object Object]", h = "[object Proxy]", d = "[object Undefined]", p = /^\[object .+?Constructor\]$/, f = /^(?:0|[1-9]\d*)$/, g = {};
          g["[object Float32Array]"] = g["[object Float64Array]"] = g["[object Int8Array]"] = g["[object Int16Array]"] = g["[object Int32Array]"] = g["[object Uint8Array]"] = g["[object Uint8ClampedArray]"] = g["[object Uint16Array]"] = g["[object Uint32Array]"] = true, g[s] = g["[object Array]"] = g["[object ArrayBuffer]"] = g["[object Boolean]"] = g["[object DataView]"] = g["[object Date]"] = g["[object Error]"] = g[l] = g["[object Map]"] = g["[object Number]"] = g[u] = g["[object RegExp]"] = g["[object Set]"] = g["[object String]"] = g["[object WeakMap]"] = false;
          var b, m, v, y = "object" == typeof n2.g && n2.g && n2.g.Object === Object && n2.g, w = "object" == typeof self && self && self.Object === Object && self, x = y || w || Function("return this")(), k = e2 && !e2.nodeType && e2, C = k && t2 && !t2.nodeType && t2, _ = C && C.exports === k, T = _ && y.process, N = function() {
            try {
              return C && C.require && C.require("util").types || T && T.binding && T.binding("util");
            } catch (t3) {
            }
          }(), A = N && N.isTypedArray, L = Array.prototype, S = Function.prototype, E = Object.prototype, j = x["__core-js_shared__"], q = S.toString, M = E.hasOwnProperty, B = (b = /[^.]+$/.exec(j && j.keys && j.keys.IE_PROTO || "")) ? "Symbol(src)_1." + b : "", O = E.toString, R = q.call(Object), P = RegExp("^" + q.call(M).replace(/[\\^$.*+?()[\]{}|]/g, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"), I = _ ? x.Buffer : void 0, D = x.Symbol, z = x.Uint8Array, H = (I && I.allocUnsafe, m = Object.getPrototypeOf, v = Object, function(t3) {
            return m(v(t3));
          }), F = Object.create, U = E.propertyIsEnumerable, V = L.splice, W = D ? D.toStringTag : void 0, $ = function() {
            try {
              var t3 = dt(Object, "defineProperty");
              return t3({}, "", {}), t3;
            } catch (t4) {
            }
          }(), G = I ? I.isBuffer : void 0, K = Math.max, Y = Date.now, Z = dt(x, "Map"), X = dt(Object, "create"), J = /* @__PURE__ */ function() {
            function t3() {
            }
            return function(e3) {
              if (!_t(e3)) return {};
              if (F) return F(e3);
              t3.prototype = e3;
              var n3 = new t3();
              return t3.prototype = void 0, n3;
            };
          }();
          function Q(t3) {
            var e3 = -1, n3 = null == t3 ? 0 : t3.length;
            for (this.clear(); ++e3 < n3; ) {
              var r3 = t3[e3];
              this.set(r3[0], r3[1]);
            }
          }
          function tt(t3) {
            var e3 = -1, n3 = null == t3 ? 0 : t3.length;
            for (this.clear(); ++e3 < n3; ) {
              var r3 = t3[e3];
              this.set(r3[0], r3[1]);
            }
          }
          function et(t3) {
            var e3 = -1, n3 = null == t3 ? 0 : t3.length;
            for (this.clear(); ++e3 < n3; ) {
              var r3 = t3[e3];
              this.set(r3[0], r3[1]);
            }
          }
          function nt(t3) {
            var e3 = this.__data__ = new tt(t3);
            this.size = e3.size;
          }
          function rt(t3, e3, n3) {
            (void 0 !== n3 && !mt(t3[e3], n3) || void 0 === n3 && !(e3 in t3)) && ot(t3, e3, n3);
          }
          function it(t3, e3, n3) {
            var r3 = t3[e3];
            M.call(t3, e3) && mt(r3, n3) && (void 0 !== n3 || e3 in t3) || ot(t3, e3, n3);
          }
          function st(t3, e3) {
            for (var n3 = t3.length; n3--; ) if (mt(t3[n3][0], e3)) return n3;
            return -1;
          }
          function ot(t3, e3, n3) {
            "__proto__" == e3 && $ ? $(t3, e3, { configurable: true, enumerable: true, value: n3, writable: true }) : t3[e3] = n3;
          }
          Q.prototype.clear = function() {
            this.__data__ = X ? X(null) : {}, this.size = 0;
          }, Q.prototype.delete = function(t3) {
            var e3 = this.has(t3) && delete this.__data__[t3];
            return this.size -= e3 ? 1 : 0, e3;
          }, Q.prototype.get = function(t3) {
            var e3 = this.__data__;
            if (X) {
              var n3 = e3[t3];
              return n3 === r2 ? void 0 : n3;
            }
            return M.call(e3, t3) ? e3[t3] : void 0;
          }, Q.prototype.has = function(t3) {
            var e3 = this.__data__;
            return X ? void 0 !== e3[t3] : M.call(e3, t3);
          }, Q.prototype.set = function(t3, e3) {
            var n3 = this.__data__;
            return this.size += this.has(t3) ? 0 : 1, n3[t3] = X && void 0 === e3 ? r2 : e3, this;
          }, tt.prototype.clear = function() {
            this.__data__ = [], this.size = 0;
          }, tt.prototype.delete = function(t3) {
            var e3 = this.__data__, n3 = st(e3, t3);
            return !(n3 < 0 || (n3 == e3.length - 1 ? e3.pop() : V.call(e3, n3, 1), --this.size, 0));
          }, tt.prototype.get = function(t3) {
            var e3 = this.__data__, n3 = st(e3, t3);
            return n3 < 0 ? void 0 : e3[n3][1];
          }, tt.prototype.has = function(t3) {
            return st(this.__data__, t3) > -1;
          }, tt.prototype.set = function(t3, e3) {
            var n3 = this.__data__, r3 = st(n3, t3);
            return r3 < 0 ? (++this.size, n3.push([t3, e3])) : n3[r3][1] = e3, this;
          }, et.prototype.clear = function() {
            this.size = 0, this.__data__ = { hash: new Q(), map: new (Z || tt)(), string: new Q() };
          }, et.prototype.delete = function(t3) {
            var e3 = ht(this, t3).delete(t3);
            return this.size -= e3 ? 1 : 0, e3;
          }, et.prototype.get = function(t3) {
            return ht(this, t3).get(t3);
          }, et.prototype.has = function(t3) {
            return ht(this, t3).has(t3);
          }, et.prototype.set = function(t3, e3) {
            var n3 = ht(this, t3), r3 = n3.size;
            return n3.set(t3, e3), this.size += n3.size == r3 ? 0 : 1, this;
          }, nt.prototype.clear = function() {
            this.__data__ = new tt(), this.size = 0;
          }, nt.prototype.delete = function(t3) {
            var e3 = this.__data__, n3 = e3.delete(t3);
            return this.size = e3.size, n3;
          }, nt.prototype.get = function(t3) {
            return this.__data__.get(t3);
          }, nt.prototype.has = function(t3) {
            return this.__data__.has(t3);
          }, nt.prototype.set = function(t3, e3) {
            var n3 = this.__data__;
            if (n3 instanceof tt) {
              var r3 = n3.__data__;
              if (!Z || r3.length < 199) return r3.push([t3, e3]), this.size = ++n3.size, this;
              n3 = this.__data__ = new et(r3);
            }
            return n3.set(t3, e3), this.size = n3.size, this;
          };
          function lt(t3) {
            return null == t3 ? void 0 === t3 ? d : c : W && W in Object(t3) ? function(t4) {
              var e3 = M.call(t4, W), n3 = t4[W];
              try {
                t4[W] = void 0;
                var r3 = true;
              } catch (t5) {
              }
              var i3 = O.call(t4);
              return r3 && (e3 ? t4[W] = n3 : delete t4[W]), i3;
            }(t3) : function(t4) {
              return O.call(t4);
            }(t3);
          }
          function at(t3) {
            return Tt(t3) && lt(t3) == s;
          }
          function ct(t3, e3, n3, r3, i3) {
            t3 !== e3 && function(t4, e4, n4) {
              for (var r4 = -1, i4 = Object(t4), s2 = n4(t4), o2 = s2.length; o2--; ) {
                var l2 = s2[++r4];
                if (false === e4(i4[l2], l2, i4)) break;
              }
            }(e3, function(s2, o2) {
              if (i3 || (i3 = new nt()), _t(s2)) !function(t4, e4, n4, r4, i4, s3, o3) {
                var l3 = gt(t4, n4), a2 = gt(e4, n4), c2 = o3.get(a2);
                if (c2) rt(t4, n4, c2);
                else {
                  var h2, d2, p2, f2, g2, b2 = s3 ? s3(l3, a2, n4 + "", t4, e4, o3) : void 0, m2 = void 0 === b2;
                  if (m2) {
                    var v2 = yt(a2), y2 = !v2 && xt(a2), w2 = !v2 && !y2 && Nt(a2);
                    b2 = a2, v2 || y2 || w2 ? yt(l3) ? b2 = l3 : Tt(g2 = l3) && wt(g2) ? b2 = function(t5, e5) {
                      var n5 = -1, r5 = t5.length;
                      for (e5 || (e5 = Array(r5)); ++n5 < r5; ) e5[n5] = t5[n5];
                      return e5;
                    }(l3) : y2 ? (m2 = false, b2 = function(t5, e5) {
                      return t5.slice();
                    }(a2)) : w2 ? (m2 = false, f2 = new (p2 = (h2 = a2).buffer).constructor(p2.byteLength), new z(f2).set(new z(p2)), d2 = f2, b2 = new h2.constructor(d2, h2.byteOffset, h2.length)) : b2 = [] : function(t5) {
                      if (!Tt(t5) || lt(t5) != u) return false;
                      var e5 = H(t5);
                      if (null === e5) return true;
                      var n5 = M.call(e5, "constructor") && e5.constructor;
                      return "function" == typeof n5 && n5 instanceof n5 && q.call(n5) == R;
                    }(a2) || vt(a2) ? (b2 = l3, vt(l3) ? b2 = function(t5) {
                      return function(t6, e5, n5, r5) {
                        var i5 = !n5;
                        n5 || (n5 = {});
                        for (var s4 = -1, o4 = e5.length; ++s4 < o4; ) {
                          var l4 = e5[s4], a3 = void 0;
                          void 0 === a3 && (a3 = t6[l4]), i5 ? ot(n5, l4, a3) : it(n5, l4, a3);
                        }
                        return n5;
                      }(t5, At(t5));
                    }(l3) : _t(l3) && !kt(l3) || (b2 = function(t5) {
                      return "function" != typeof t5.constructor || ft(t5) ? {} : J(H(t5));
                    }(a2))) : m2 = false;
                  }
                  m2 && (o3.set(a2, b2), i4(b2, a2, r4, s3, o3), o3.delete(a2)), rt(t4, n4, b2);
                }
              }(t3, e3, o2, n3, ct, r3, i3);
              else {
                var l2 = r3 ? r3(gt(t3, o2), s2, o2 + "", t3, e3, i3) : void 0;
                void 0 === l2 && (l2 = s2), rt(t3, o2, l2);
              }
            }, At);
          }
          var ut = $ ? function(t3, e3) {
            return $(t3, "toString", { configurable: true, enumerable: false, value: (n3 = e3, function() {
              return n3;
            }), writable: true });
            var n3;
          } : Et;
          function ht(t3, e3) {
            var n3, r3, i3 = t3.__data__;
            return ("string" == (r3 = typeof (n3 = e3)) || "number" == r3 || "symbol" == r3 || "boolean" == r3 ? "__proto__" !== n3 : null === n3) ? i3["string" == typeof e3 ? "string" : "hash"] : i3.map;
          }
          function dt(t3, e3) {
            var n3 = function(t4, e4) {
              return null == t4 ? void 0 : t4[e4];
            }(t3, e3);
            return function(t4) {
              return !(!_t(t4) || function(t5) {
                return !!B && B in t5;
              }(t4)) && (kt(t4) ? P : p).test(function(t5) {
                if (null != t5) {
                  try {
                    return q.call(t5);
                  } catch (t6) {
                  }
                  try {
                    return t5 + "";
                  } catch (t6) {
                  }
                }
                return "";
              }(t4));
            }(n3) ? n3 : void 0;
          }
          function pt(t3, e3) {
            var n3 = typeof t3;
            return !!(e3 = null == e3 ? i2 : e3) && ("number" == n3 || "symbol" != n3 && f.test(t3)) && t3 > -1 && t3 % 1 == 0 && t3 < e3;
          }
          function ft(t3) {
            var e3 = t3 && t3.constructor;
            return t3 === ("function" == typeof e3 && e3.prototype || E);
          }
          function gt(t3, e3) {
            if (("constructor" !== e3 || "function" != typeof t3[e3]) && "__proto__" != e3) return t3[e3];
          }
          var bt = /* @__PURE__ */ function(t3) {
            var e3 = 0, n3 = 0;
            return function() {
              var r3 = Y(), i3 = 16 - (r3 - n3);
              if (n3 = r3, i3 > 0) {
                if (++e3 >= 800) return arguments[0];
              } else e3 = 0;
              return t3.apply(void 0, arguments);
            };
          }(ut);
          function mt(t3, e3) {
            return t3 === e3 || t3 != t3 && e3 != e3;
          }
          var vt = at(/* @__PURE__ */ function() {
            return arguments;
          }()) ? at : function(t3) {
            return Tt(t3) && M.call(t3, "callee") && !U.call(t3, "callee");
          }, yt = Array.isArray;
          function wt(t3) {
            return null != t3 && Ct(t3.length) && !kt(t3);
          }
          var xt = G || function() {
            return false;
          };
          function kt(t3) {
            if (!_t(t3)) return false;
            var e3 = lt(t3);
            return e3 == l || e3 == a || e3 == o || e3 == h;
          }
          function Ct(t3) {
            return "number" == typeof t3 && t3 > -1 && t3 % 1 == 0 && t3 <= i2;
          }
          function _t(t3) {
            var e3 = typeof t3;
            return null != t3 && ("object" == e3 || "function" == e3);
          }
          function Tt(t3) {
            return null != t3 && "object" == typeof t3;
          }
          var Nt = A ? /* @__PURE__ */ function(t3) {
            return function(e3) {
              return t3(e3);
            };
          }(A) : function(t3) {
            return Tt(t3) && Ct(t3.length) && !!g[lt(t3)];
          };
          function At(t3) {
            return wt(t3) ? function(t4, e3) {
              var n3 = yt(t4), r3 = !n3 && vt(t4), i3 = !n3 && !r3 && xt(t4), s2 = !n3 && !r3 && !i3 && Nt(t4), o2 = n3 || r3 || i3 || s2, l2 = o2 ? function(t5, e4) {
                for (var n4 = -1, r4 = Array(t5); ++n4 < t5; ) r4[n4] = e4(n4);
                return r4;
              }(t4.length, String) : [], a2 = l2.length;
              for (var c2 in t4) !e3 && !M.call(t4, c2) || o2 && ("length" == c2 || i3 && ("offset" == c2 || "parent" == c2) || s2 && ("buffer" == c2 || "byteLength" == c2 || "byteOffset" == c2) || pt(c2, a2)) || l2.push(c2);
              return l2;
            }(t3, true) : function(t4) {
              if (!_t(t4)) return function(t5) {
                var e4 = [];
                if (null != t5) for (var n4 in Object(t5)) e4.push(n4);
                return e4;
              }(t4);
              var e3 = ft(t4), n3 = [];
              for (var r3 in t4) ("constructor" != r3 || !e3 && M.call(t4, r3)) && n3.push(r3);
              return n3;
            }(t3);
          }
          var Lt, St = (Lt = function(t3, e3, n3) {
            ct(t3, e3, n3);
          }, function(t3, e3) {
            return bt(function(t4, e4, n3) {
              return e4 = K(void 0 === e4 ? t4.length - 1 : e4, 0), function() {
                for (var r3 = arguments, i3 = -1, s2 = K(r3.length - e4, 0), o2 = Array(s2); ++i3 < s2; ) o2[i3] = r3[e4 + i3];
                i3 = -1;
                for (var l2 = Array(e4 + 1); ++i3 < e4; ) l2[i3] = r3[i3];
                return l2[e4] = n3(o2), function(t5, e5, n4) {
                  switch (n4.length) {
                    case 0:
                      return t5.call(e5);
                    case 1:
                      return t5.call(e5, n4[0]);
                    case 2:
                      return t5.call(e5, n4[0], n4[1]);
                    case 3:
                      return t5.call(e5, n4[0], n4[1], n4[2]);
                  }
                  return t5.apply(e5, n4);
                }(t4, this, l2);
              };
            }(t3, e3, Et), t3 + "");
          }(function(t3, e3) {
            var n3 = -1, r3 = e3.length, i3 = r3 > 1 ? e3[r3 - 1] : void 0, s2 = r3 > 2 ? e3[2] : void 0;
            for (i3 = Lt.length > 3 && "function" == typeof i3 ? (r3--, i3) : void 0, s2 && function(t4, e4, n4) {
              if (!_t(n4)) return false;
              var r4 = typeof e4;
              return !!("number" == r4 ? wt(n4) && pt(e4, n4.length) : "string" == r4 && e4 in n4) && mt(n4[e4], t4);
            }(e3[0], e3[1], s2) && (i3 = r3 < 3 ? void 0 : i3, r3 = 1), t3 = Object(t3); ++n3 < r3; ) {
              var o2 = e3[n3];
              o2 && Lt(t3, o2, n3);
            }
            return t3;
          }));
          function Et(t3) {
            return t3;
          }
          t2.exports = St;
        }, 382: function(t2, e2, n2) {
          "use strict";
          Object.defineProperty(e2, "__esModule", { value: true });
          const r2 = n2(861), i2 = n2(842);
          var s;
          !function(t3) {
            t3.compose = function(t4 = {}, e3 = {}, n3 = false) {
              "object" != typeof t4 && (t4 = {}), "object" != typeof e3 && (e3 = {});
              let i3 = r2(e3);
              n3 || (i3 = Object.keys(i3).reduce((t5, e4) => (null != i3[e4] && (t5[e4] = i3[e4]), t5), {}));
              for (const n4 in t4) void 0 !== t4[n4] && void 0 === e3[n4] && (i3[n4] = t4[n4]);
              return Object.keys(i3).length > 0 ? i3 : void 0;
            }, t3.diff = function(t4 = {}, e3 = {}) {
              "object" != typeof t4 && (t4 = {}), "object" != typeof e3 && (e3 = {});
              const n3 = Object.keys(t4).concat(Object.keys(e3)).reduce((n4, r3) => (i2(t4[r3], e3[r3]) || (n4[r3] = void 0 === e3[r3] ? null : e3[r3]), n4), {});
              return Object.keys(n3).length > 0 ? n3 : void 0;
            }, t3.invert = function(t4 = {}, e3 = {}) {
              t4 = t4 || {};
              const n3 = Object.keys(e3).reduce((n4, r3) => (e3[r3] !== t4[r3] && void 0 !== t4[r3] && (n4[r3] = e3[r3]), n4), {});
              return Object.keys(t4).reduce((n4, r3) => (t4[r3] !== e3[r3] && void 0 === e3[r3] && (n4[r3] = null), n4), n3);
            }, t3.transform = function(t4, e3, n3 = false) {
              if ("object" != typeof t4) return e3;
              if ("object" != typeof e3) return;
              if (!n3) return e3;
              const r3 = Object.keys(e3).reduce((n4, r4) => (void 0 === t4[r4] && (n4[r4] = e3[r4]), n4), {});
              return Object.keys(r3).length > 0 ? r3 : void 0;
            };
          }(s || (s = {})), e2.default = s;
        }, 32: function(t2, e2, n2) {
          "use strict";
          Object.defineProperty(e2, "__esModule", { value: true }), e2.AttributeMap = e2.OpIterator = e2.Op = void 0;
          const r2 = n2(386), i2 = n2(861), s = n2(842), o = n2(382);
          e2.AttributeMap = o.default;
          const l = n2(427);
          e2.Op = l.default;
          const a = n2(505);
          e2.OpIterator = a.default;
          const c = String.fromCharCode(0), u = (t3, e3) => {
            if ("object" != typeof t3 || null === t3) throw new Error("cannot retain a " + typeof t3);
            if ("object" != typeof e3 || null === e3) throw new Error("cannot retain a " + typeof e3);
            const n3 = Object.keys(t3)[0];
            if (!n3 || n3 !== Object.keys(e3)[0]) throw new Error(`embed types not matched: ${n3} != ${Object.keys(e3)[0]}`);
            return [n3, t3[n3], e3[n3]];
          };
          class h {
            constructor(t3) {
              Array.isArray(t3) ? this.ops = t3 : null != t3 && Array.isArray(t3.ops) ? this.ops = t3.ops : this.ops = [];
            }
            static registerEmbed(t3, e3) {
              this.handlers[t3] = e3;
            }
            static unregisterEmbed(t3) {
              delete this.handlers[t3];
            }
            static getHandler(t3) {
              const e3 = this.handlers[t3];
              if (!e3) throw new Error(`no handlers for embed type "${t3}"`);
              return e3;
            }
            insert(t3, e3) {
              const n3 = {};
              return "string" == typeof t3 && 0 === t3.length ? this : (n3.insert = t3, null != e3 && "object" == typeof e3 && Object.keys(e3).length > 0 && (n3.attributes = e3), this.push(n3));
            }
            delete(t3) {
              return t3 <= 0 ? this : this.push({ delete: t3 });
            }
            retain(t3, e3) {
              if ("number" == typeof t3 && t3 <= 0) return this;
              const n3 = { retain: t3 };
              return null != e3 && "object" == typeof e3 && Object.keys(e3).length > 0 && (n3.attributes = e3), this.push(n3);
            }
            push(t3) {
              let e3 = this.ops.length, n3 = this.ops[e3 - 1];
              if (t3 = i2(t3), "object" == typeof n3) {
                if ("number" == typeof t3.delete && "number" == typeof n3.delete) return this.ops[e3 - 1] = { delete: n3.delete + t3.delete }, this;
                if ("number" == typeof n3.delete && null != t3.insert && (e3 -= 1, n3 = this.ops[e3 - 1], "object" != typeof n3)) return this.ops.unshift(t3), this;
                if (s(t3.attributes, n3.attributes)) {
                  if ("string" == typeof t3.insert && "string" == typeof n3.insert) return this.ops[e3 - 1] = { insert: n3.insert + t3.insert }, "object" == typeof t3.attributes && (this.ops[e3 - 1].attributes = t3.attributes), this;
                  if ("number" == typeof t3.retain && "number" == typeof n3.retain) return this.ops[e3 - 1] = { retain: n3.retain + t3.retain }, "object" == typeof t3.attributes && (this.ops[e3 - 1].attributes = t3.attributes), this;
                }
              }
              return e3 === this.ops.length ? this.ops.push(t3) : this.ops.splice(e3, 0, t3), this;
            }
            chop() {
              const t3 = this.ops[this.ops.length - 1];
              return t3 && "number" == typeof t3.retain && !t3.attributes && this.ops.pop(), this;
            }
            filter(t3) {
              return this.ops.filter(t3);
            }
            forEach(t3) {
              this.ops.forEach(t3);
            }
            map(t3) {
              return this.ops.map(t3);
            }
            partition(t3) {
              const e3 = [], n3 = [];
              return this.forEach((r3) => {
                (t3(r3) ? e3 : n3).push(r3);
              }), [e3, n3];
            }
            reduce(t3, e3) {
              return this.ops.reduce(t3, e3);
            }
            changeLength() {
              return this.reduce((t3, e3) => e3.insert ? t3 + l.default.length(e3) : e3.delete ? t3 - e3.delete : t3, 0);
            }
            length() {
              return this.reduce((t3, e3) => t3 + l.default.length(e3), 0);
            }
            slice(t3 = 0, e3 = 1 / 0) {
              const n3 = [], r3 = new a.default(this.ops);
              let i3 = 0;
              for (; i3 < e3 && r3.hasNext(); ) {
                let s2;
                i3 < t3 ? s2 = r3.next(t3 - i3) : (s2 = r3.next(e3 - i3), n3.push(s2)), i3 += l.default.length(s2);
              }
              return new h(n3);
            }
            compose(t3) {
              const e3 = new a.default(this.ops), n3 = new a.default(t3.ops), r3 = [], i3 = n3.peek();
              if (null != i3 && "number" == typeof i3.retain && null == i3.attributes) {
                let t4 = i3.retain;
                for (; "insert" === e3.peekType() && e3.peekLength() <= t4; ) t4 -= e3.peekLength(), r3.push(e3.next());
                i3.retain - t4 > 0 && n3.next(i3.retain - t4);
              }
              const l2 = new h(r3);
              for (; e3.hasNext() || n3.hasNext(); ) if ("insert" === n3.peekType()) l2.push(n3.next());
              else if ("delete" === e3.peekType()) l2.push(e3.next());
              else {
                const t4 = Math.min(e3.peekLength(), n3.peekLength()), r4 = e3.next(t4), i4 = n3.next(t4);
                if (i4.retain) {
                  const a2 = {};
                  if ("number" == typeof r4.retain) a2.retain = "number" == typeof i4.retain ? t4 : i4.retain;
                  else if ("number" == typeof i4.retain) null == r4.retain ? a2.insert = r4.insert : a2.retain = r4.retain;
                  else {
                    const t5 = null == r4.retain ? "insert" : "retain", [e4, n4, s2] = u(r4[t5], i4.retain), o2 = h.getHandler(e4);
                    a2[t5] = { [e4]: o2.compose(n4, s2, "retain" === t5) };
                  }
                  const c2 = o.default.compose(r4.attributes, i4.attributes, "number" == typeof r4.retain);
                  if (c2 && (a2.attributes = c2), l2.push(a2), !n3.hasNext() && s(l2.ops[l2.ops.length - 1], a2)) {
                    const t5 = new h(e3.rest());
                    return l2.concat(t5).chop();
                  }
                } else "number" == typeof i4.delete && ("number" == typeof r4.retain || "object" == typeof r4.retain && null !== r4.retain) && l2.push(i4);
              }
              return l2.chop();
            }
            concat(t3) {
              const e3 = new h(this.ops.slice());
              return t3.ops.length > 0 && (e3.push(t3.ops[0]), e3.ops = e3.ops.concat(t3.ops.slice(1))), e3;
            }
            diff(t3, e3) {
              if (this.ops === t3.ops) return new h();
              const n3 = [this, t3].map((e4) => e4.map((n4) => {
                if (null != n4.insert) return "string" == typeof n4.insert ? n4.insert : c;
                throw new Error("diff() called " + (e4 === t3 ? "on" : "with") + " non-document");
              }).join("")), i3 = new h(), l2 = r2(n3[0], n3[1], e3, true), u2 = new a.default(this.ops), d = new a.default(t3.ops);
              return l2.forEach((t4) => {
                let e4 = t4[1].length;
                for (; e4 > 0; ) {
                  let n4 = 0;
                  switch (t4[0]) {
                    case r2.INSERT:
                      n4 = Math.min(d.peekLength(), e4), i3.push(d.next(n4));
                      break;
                    case r2.DELETE:
                      n4 = Math.min(e4, u2.peekLength()), u2.next(n4), i3.delete(n4);
                      break;
                    case r2.EQUAL:
                      n4 = Math.min(u2.peekLength(), d.peekLength(), e4);
                      const t5 = u2.next(n4), l3 = d.next(n4);
                      s(t5.insert, l3.insert) ? i3.retain(n4, o.default.diff(t5.attributes, l3.attributes)) : i3.push(l3).delete(n4);
                  }
                  e4 -= n4;
                }
              }), i3.chop();
            }
            eachLine(t3, e3 = "\n") {
              const n3 = new a.default(this.ops);
              let r3 = new h(), i3 = 0;
              for (; n3.hasNext(); ) {
                if ("insert" !== n3.peekType()) return;
                const s2 = n3.peek(), o2 = l.default.length(s2) - n3.peekLength(), a2 = "string" == typeof s2.insert ? s2.insert.indexOf(e3, o2) - o2 : -1;
                if (a2 < 0) r3.push(n3.next());
                else if (a2 > 0) r3.push(n3.next(a2));
                else {
                  if (false === t3(r3, n3.next(1).attributes || {}, i3)) return;
                  i3 += 1, r3 = new h();
                }
              }
              r3.length() > 0 && t3(r3, {}, i3);
            }
            invert(t3) {
              const e3 = new h();
              return this.reduce((n3, r3) => {
                if (r3.insert) e3.delete(l.default.length(r3));
                else {
                  if ("number" == typeof r3.retain && null == r3.attributes) return e3.retain(r3.retain), n3 + r3.retain;
                  if (r3.delete || "number" == typeof r3.retain) {
                    const i3 = r3.delete || r3.retain;
                    return t3.slice(n3, n3 + i3).forEach((t4) => {
                      r3.delete ? e3.push(t4) : r3.retain && r3.attributes && e3.retain(l.default.length(t4), o.default.invert(r3.attributes, t4.attributes));
                    }), n3 + i3;
                  }
                  if ("object" == typeof r3.retain && null !== r3.retain) {
                    const i3 = t3.slice(n3, n3 + 1), s2 = new a.default(i3.ops).next(), [l2, c2, d] = u(r3.retain, s2.insert), p = h.getHandler(l2);
                    return e3.retain({ [l2]: p.invert(c2, d) }, o.default.invert(r3.attributes, s2.attributes)), n3 + 1;
                  }
                }
                return n3;
              }, 0), e3.chop();
            }
            transform(t3, e3 = false) {
              if (e3 = !!e3, "number" == typeof t3) return this.transformPosition(t3, e3);
              const n3 = t3, r3 = new a.default(this.ops), i3 = new a.default(n3.ops), s2 = new h();
              for (; r3.hasNext() || i3.hasNext(); ) if ("insert" !== r3.peekType() || !e3 && "insert" === i3.peekType()) if ("insert" === i3.peekType()) s2.push(i3.next());
              else {
                const t4 = Math.min(r3.peekLength(), i3.peekLength()), n4 = r3.next(t4), l2 = i3.next(t4);
                if (n4.delete) continue;
                if (l2.delete) s2.push(l2);
                else {
                  const r4 = n4.retain, i4 = l2.retain;
                  let a2 = "object" == typeof i4 && null !== i4 ? i4 : t4;
                  if ("object" == typeof r4 && null !== r4 && "object" == typeof i4 && null !== i4) {
                    const t5 = Object.keys(r4)[0];
                    if (t5 === Object.keys(i4)[0]) {
                      const n5 = h.getHandler(t5);
                      n5 && (a2 = { [t5]: n5.transform(r4[t5], i4[t5], e3) });
                    }
                  }
                  s2.retain(a2, o.default.transform(n4.attributes, l2.attributes, e3));
                }
              }
              else s2.retain(l.default.length(r3.next()));
              return s2.chop();
            }
            transformPosition(t3, e3 = false) {
              e3 = !!e3;
              const n3 = new a.default(this.ops);
              let r3 = 0;
              for (; n3.hasNext() && r3 <= t3; ) {
                const i3 = n3.peekLength(), s2 = n3.peekType();
                n3.next(), "delete" !== s2 ? ("insert" === s2 && (r3 < t3 || !e3) && (t3 += i3), r3 += i3) : t3 -= Math.min(i3, t3 - r3);
              }
              return t3;
            }
          }
          h.Op = l.default, h.OpIterator = a.default, h.AttributeMap = o.default, h.handlers = {}, e2.default = h, t2.exports = h, t2.exports.default = h;
        }, 427: function(t2, e2) {
          "use strict";
          var n2;
          Object.defineProperty(e2, "__esModule", { value: true }), function(t3) {
            t3.length = function(t4) {
              return "number" == typeof t4.delete ? t4.delete : "number" == typeof t4.retain ? t4.retain : "object" == typeof t4.retain && null !== t4.retain ? 1 : "string" == typeof t4.insert ? t4.insert.length : 1;
            };
          }(n2 || (n2 = {})), e2.default = n2;
        }, 505: function(t2, e2, n2) {
          "use strict";
          Object.defineProperty(e2, "__esModule", { value: true });
          const r2 = n2(427);
          e2.default = class {
            constructor(t3) {
              this.ops = t3, this.index = 0, this.offset = 0;
            }
            hasNext() {
              return this.peekLength() < 1 / 0;
            }
            next(t3) {
              t3 || (t3 = 1 / 0);
              const e3 = this.ops[this.index];
              if (e3) {
                const n3 = this.offset, i2 = r2.default.length(e3);
                if (t3 >= i2 - n3 ? (t3 = i2 - n3, this.index += 1, this.offset = 0) : this.offset += t3, "number" == typeof e3.delete) return { delete: t3 };
                {
                  const r3 = {};
                  return e3.attributes && (r3.attributes = e3.attributes), "number" == typeof e3.retain ? r3.retain = t3 : "object" == typeof e3.retain && null !== e3.retain ? r3.retain = e3.retain : "string" == typeof e3.insert ? r3.insert = e3.insert.substr(n3, t3) : r3.insert = e3.insert, r3;
                }
              }
              return { retain: 1 / 0 };
            }
            peek() {
              return this.ops[this.index];
            }
            peekLength() {
              return this.ops[this.index] ? r2.default.length(this.ops[this.index]) - this.offset : 1 / 0;
            }
            peekType() {
              const t3 = this.ops[this.index];
              return t3 ? "number" == typeof t3.delete ? "delete" : "number" == typeof t3.retain || "object" == typeof t3.retain && null !== t3.retain ? "retain" : "insert" : "retain";
            }
            rest() {
              if (this.hasNext()) {
                if (0 === this.offset) return this.ops.slice(this.index);
                {
                  const t3 = this.offset, e3 = this.index, n3 = this.next(), r3 = this.ops.slice(this.index);
                  return this.offset = t3, this.index = e3, [n3].concat(r3);
                }
              }
              return [];
            }
          };
        }, 912: function(e2) {
          "use strict";
          e2.exports = t;
        } }, n = {};
        function r(t2) {
          var i2 = n[t2];
          if (void 0 !== i2) return i2.exports;
          var s = n[t2] = { id: t2, loaded: false, exports: {} };
          return e[t2](s, s.exports, r), s.loaded = true, s.exports;
        }
        r.n = function(t2) {
          var e2 = t2 && t2.__esModule ? function() {
            return t2.default;
          } : function() {
            return t2;
          };
          return r.d(e2, { a: e2 }), e2;
        }, r.d = function(t2, e2) {
          for (var n2 in e2) r.o(e2, n2) && !r.o(t2, n2) && Object.defineProperty(t2, n2, { enumerable: true, get: e2[n2] });
        }, r.g = function() {
          if ("object" == typeof globalThis) return globalThis;
          try {
            return this || new Function("return this")();
          } catch (t2) {
            if ("object" == typeof window) return window;
          }
        }(), r.o = function(t2, e2) {
          return Object.prototype.hasOwnProperty.call(t2, e2);
        }, r.nmd = function(t2) {
          return t2.paths = [], t2.children || (t2.children = []), t2;
        };
        var i = {};
        return function() {
          "use strict";
          r.d(i, { default: function() {
            return nr;
          } });
          var t2 = r(912), e2 = r.n(t2), n2 = r(32), s = r.n(n2), o = '<?xml version="1.0" encoding="UTF-8"?><svg width="16" height="16" viewBox="0 0 48 48" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M36 19H12" stroke="#333" stroke-width="4" stroke-linecap="round" stroke-linejoin="round"/><path d="M42 9H6" stroke="#333" stroke-width="4" stroke-linecap="round" stroke-linejoin="round"/><path d="M42 29H6" stroke="#333" stroke-width="4" stroke-linecap="round" stroke-linejoin="round"/><path d="M36 39H12" stroke="#333" stroke-width="4" stroke-linecap="round" stroke-linejoin="round"/></svg>', l = '<?xml version="1.0" encoding="UTF-8"?><svg width="16" height="16" viewBox="0 0 48 48" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M42 9H6" stroke="#333" stroke-width="4" stroke-linecap="round" stroke-linejoin="round"/><path d="M34 19H6" stroke="#333" stroke-width="4" stroke-linecap="round" stroke-linejoin="round"/><path d="M42 29H6" stroke="#333" stroke-width="4" stroke-linecap="round" stroke-linejoin="round"/><path d="M34 39H6" stroke="#333" stroke-width="4" stroke-linecap="round" stroke-linejoin="round"/></svg>', a = '<?xml version="1.0" encoding="UTF-8"?><svg width="16" height="16" viewBox="0 0 48 48" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M42 9H6" stroke="#333" stroke-width="4" stroke-linecap="round" stroke-linejoin="round"/><path d="M42 19H14" stroke="#333" stroke-width="4" stroke-linecap="round" stroke-linejoin="round"/><path d="M42 29H6" stroke="#333" stroke-width="4" stroke-linecap="round" stroke-linejoin="round"/><path d="M42 39H14" stroke="#333" stroke-width="4" stroke-linecap="round" stroke-linejoin="round"/></svg>';
          const c = ["data-row", "width", "height", "colspan", "rowspan", "style"], u = { "border-style": "none", "border-color": "", "border-width": "", "background-color": "", width: "", height: "", padding: "", "text-align": "left", "vertical-align": "middle" }, h = ["border-style", "border-color", "border-width", "background-color", "width", "height", "padding", "text-align", "vertical-align"], d = ["aliceblue", "antiquewhite", "aqua", "aquamarine", "azure", "beige", "bisque", "black", "blanchedalmond", "blue", "blueviolet", "brown", "burlywood", "cadetblue", "chartreuse", "chocolate", "coral", "cornflowerblue", "cornsilk", "crimson", "currentcolor", "currentcolor", "cyan", "darkblue", "darkcyan", "darkgoldenrod", "darkgray", "darkgreen", "darkgrey", "darkkhaki", "darkmagenta", "darkolivegreen", "darkorange", "darkorchid", "darkred", "darksalmon", "darkseagreen", "darkslateblue", "darkslategray", "darkslategrey", "darkturquoise", "darkviolet", "deeppink", "deepskyblue", "dimgray", "dimgrey", "dodgerblue", "firebrick", "floralwhite", "forestgreen", "fuchsia", "gainsboro", "ghostwhite", "gold", "goldenrod", "gray", "green", "greenyellow", "grey", "honeydew", "hotpink", "indianred", "indigo", "ivory", "khaki", "lavender", "lavenderblush", "lawngreen", "lemonchiffon", "lightblue", "lightcoral", "lightcyan", "lightgoldenrodyellow", "lightgray", "lightgreen", "lightgrey", "lightpink", "lightsalmon", "lightseagreen", "lightskyblue", "lightslategray", "lightslategrey", "lightsteelblue", "lightyellow", "lime", "limegreen", "linen", "magenta", "maroon", "mediumaquamarine", "mediumblue", "mediumorchid", "mediumpurple", "mediumseagreen", "mediumslateblue", "mediumspringgreen", "mediumturquoise", "mediumvioletred", "midnightblue", "mintcream", "mistyrose", "moccasin", "navajowhite", "navy", "oldlace", "olive", "olivedrab", "orange", "orangered", "orchid", "palegoldenrod", "palegreen", "paleturquoise", "palevioletred", "papayawhip", "peachpuff", "peru", "pink", "plum", "powderblue", "purple", "rebeccapurple", "red", "rosybrown", "royalblue", "saddlebrown", "salmon", "sandybrown", "seagreen", "seashell", "sienna", "silver", "skyblue", "slateblue", "slategray", "slategrey", "snow", "springgreen", "steelblue", "tan", "teal", "thistle", "tomato", "transparent", "turquoise", "violet", "wheat", "white", "whitesmoke", "yellow", "yellowgreen"], p = ["border-style", "border-color", "border-width", "background-color", "width", "height", "align"];
          const f = e2().import("formats/list"), g = e2().import("blots/container"), b = ["colspan", "rowspan"];
          class m extends g {
            static create(t3) {
              const e3 = super.create();
              for (const e4 of b) "1" == t3[e4] && delete t3[e4];
              const n3 = Object.keys(t3);
              for (const r2 of n3) "data-row" === r2 ? e3.setAttribute(r2, t3[r2]) : "cellId" === r2 ? e3.setAttribute("data-cell", t3[r2]) : e3.setAttribute(`data-${r2}`, t3[r2]);
              return e3;
            }
            format(t3, e3) {
              return this.wrap(t3, e3);
            }
            static formats(t3) {
              const e3 = c.reduce((e4, n3) => {
                const r2 = n3.includes("data") ? n3 : `data-${n3}`;
                return t3.hasAttribute(r2) && (e4[n3] = t3.getAttribute(r2)), e4;
              }, {});
              e3.cellId = t3.getAttribute("data-cell");
              for (const t4 of b) e3[t4] || (e3[t4] = "1");
              return e3;
            }
            formats() {
              const t3 = this.statics.formats(this.domNode, this.scroll);
              return { [this.statics.blotName]: t3 };
            }
          }
          m.blotName = "table-list-container", m.className = "table-list-container", m.tagName = "OL";
          class v extends f {
            format(t3, e3, n3) {
              const r2 = this.formats()[this.statics.blotName];
              if ("list" === t3) {
                const [t4, i2] = this.getCellFormats(this.parent);
                if (!e3 || e3 === r2) return this.setReplace(n3, t4), this.replaceWith(W.blotName, i2);
                if (e3 !== r2) return this.replaceWith(this.statics.blotName, e3);
              } else if (t3 === m.blotName) {
                "string" == typeof e3 && (e3 = { cellId: e3 });
                const [n4, r3] = this.getCorrectCellFormats(e3);
                this.wrap($.blotName, n4), this.wrap(t3, Object.assign(Object.assign({}, n4), { cellId: r3 }));
              } else {
                if ("header" === t3) {
                  const [t4, r3] = this.getCellFormats(this.parent);
                  return this.setReplace(n3, t4), this.replaceWith("table-header", { cellId: r3, value: e3 });
                }
                if (t3 === $.blotName) {
                  const n4 = this.getListContainer(this.parent);
                  if (!n4) return;
                  const r3 = n4.formats()[n4.statics.blotName];
                  this.wrap(t3, e3), this.wrap(m.blotName, Object.assign(Object.assign({}, r3), e3));
                } else if (t3 !== this.statics.blotName || e3) super.format(t3, e3);
                else {
                  const [, t4] = this.getCellFormats(this.parent);
                  this.replaceWith(W.blotName, t4);
                }
              }
            }
            getCellFormats(t3) {
              return N(B(t3));
            }
            getCorrectCellFormats(t3) {
              const e3 = B(this.parent);
              if (e3) {
                const [n3, r2] = N(e3), i2 = Object.assign(Object.assign({}, n3), t3), s2 = i2.cellId || r2;
                return delete i2.cellId, [i2, s2];
              }
              {
                const e4 = t3.cellId, n3 = Object.assign({}, t3);
                return delete n3.cellId, [n3, e4];
              }
            }
            getListContainer(t3) {
              for (; t3; ) {
                if (t3.statics.blotName === m.blotName) return t3;
                t3 = t3.parent;
              }
              return null;
            }
            static register() {
              e2().register(m);
            }
            setReplace(t3, e3) {
              t3 ? this.parent.replaceWith($.blotName, e3) : this.wrap($.blotName, e3);
            }
          }
          v.blotName = "table-list", v.className = "table-list", e2().register({ "formats/table-list": v }, true), m.allowedChildren = [v], v.requiredContainer = m;
          const y = e2().import("formats/header");
          class w extends y {
            static create(t3) {
              const { cellId: e3, value: n3 } = t3, r2 = super.create(n3);
              return r2.setAttribute("data-cell", e3), r2;
            }
            format(t3, e3, n3) {
              if ("header" === t3) {
                const t4 = this.statics.formats(this.domNode).value, n4 = this.domNode.getAttribute("data-cell");
                t4 != e3 && e3 ? super.format("table-header", { cellId: n4, value: e3 }) : this.replaceWith(W.blotName, n4);
              } else {
                if ("list" === t3) {
                  const [t4, r2] = this.getCellFormats(this.parent);
                  return n3 ? this.wrap(m.blotName, Object.assign(Object.assign({}, t4), { cellId: r2 })) : this.wrap($.blotName, t4), this.replaceWith("table-list", e3);
                }
                if (t3 === $.blotName) return this.wrap(t3, e3);
                if (t3 !== this.statics.blotName || e3) super.format(t3, e3);
                else {
                  const t4 = this.domNode.getAttribute("data-cell");
                  this.replaceWith(W.blotName, t4);
                }
              }
            }
            static formats(t3) {
              return { cellId: t3.getAttribute("data-cell"), value: this.tagName.indexOf(t3.tagName) + 1 };
            }
            formats() {
              const t3 = this.attributes.values(), e3 = this.statics.formats(this.domNode, this.scroll);
              return null != e3 && (t3[this.statics.blotName] = e3), t3;
            }
            getCellFormats(t3) {
              return N(B(t3));
            }
          }
          w.blotName = "table-header", w.className = "ql-table-header", e2().register({ "formats/table-header": w }, true);
          var x = w;
          function k(t3) {
            if ("string" != typeof t3 || !t3) return t3;
            const e3 = t3.slice(-2), n3 = t3.slice(0, -2);
            return `${Math.round(parseFloat(n3))}${e3}`;
          }
          function C(t3) {
            const e3 = document.createElement("div");
            return e3.innerText = t3, e3.classList.add("ql-table-tooltip", "ql-hidden"), e3;
          }
          function _(t3) {
            return t3.replace(/mso.*?;/g, "");
          }
          function T(t3) {
            const [e3] = t3.descendant(W), [n3] = t3.descendant(m), [r2] = t3.descendant(x);
            return e3 || n3 || r2;
          }
          function N(t3) {
            const e3 = $.formats(t3.domNode), n3 = T(t3);
            if (n3) return [e3, A(n3.formats()[n3.statics.blotName])];
            {
              const t4 = e3["data-row"].split("-")[1];
              return [e3, `cell-${t4}`];
            }
          }
          function A(t3) {
            return t3 instanceof Object ? t3.cellId : t3;
          }
          function L(t3, e3) {
            return t3.closest(e3);
          }
          function S(t3, e3) {
            return { left: Math.min(t3.left, e3.left), right: Math.max(t3.right, e3.right), top: Math.min(t3.top, e3.top), bottom: Math.max(t3.bottom, e3.bottom) };
          }
          function E(t3, n3, r2) {
            const i2 = e2().find(n3).descendants(Z);
            let s2 = 0;
            return i2.reduce((e3, n4) => {
              const { left: i3, width: o2 } = M(n4.domNode, r2);
              return s2 = s2 || i3, s2 + 2 >= t3.left && s2 - 2 + o2 <= t3.right && e3.push(n4.domNode), s2 += o2, e3;
            }, []);
          }
          function j(t3, n3, r2, i2) {
            return e2().find(n3).descendants($).reduce((e3, n4) => {
              const { left: s2, top: o2, width: l2, height: a2 } = M(n4.domNode, r2);
              switch (i2) {
                case "column":
                  (s2 + 2 >= t3.left && s2 - 2 + l2 <= t3.right || s2 + 2 < t3.right && t3.right < s2 - 2 + l2 || t3.left > s2 + 2 && t3.left < s2 - 2 + l2) && e3.push(n4.domNode);
                  break;
                case "row":
                  break;
                default:
                  s2 + 2 >= t3.left && s2 - 2 + l2 <= t3.right && o2 + 2 >= t3.top && o2 - 2 + a2 <= t3.bottom && e3.push(n4.domNode);
              }
              return e3;
            }, []);
          }
          function q(t3) {
            return t3.replace(/data-[a-z]+="[^"]*"/g, "").replace(/class="[^"]*"/g, (t4) => t4.replace("ql-cell-selected", "").replace("ql-cell-focused", "").replace("ql-table-block", "")).replace(/class="\s*"/g, "");
          }
          function M(t3, e3) {
            const n3 = t3.getBoundingClientRect(), r2 = e3.getBoundingClientRect(), i2 = n3.left - r2.left - e3.scrollLeft, s2 = n3.top - r2.top - e3.scrollTop, o2 = n3.width, l2 = n3.height;
            return { left: i2, top: s2, width: o2, height: l2, right: i2 + o2, bottom: s2 + l2 };
          }
          function B(t3) {
            for (; t3; ) {
              if (t3.statics.blotName === $.blotName) return t3;
              t3 = t3.parent;
            }
            return null;
          }
          function O(t3, e3) {
            const n3 = getComputedStyle(t3), r2 = t3.style;
            return e3.reduce((t4, e4) => {
              return t4[e4] = (i2 = r2.getPropertyValue(e4) || n3.getPropertyValue(e4)).startsWith("rgba(") ? function(t5) {
                t5 = t5.replace(/^[^\d]+/, "").replace(/[^\d]+$/, "");
                const e5 = Math.round(+t5[0]), n4 = Math.round(+t5[1]), r3 = Math.round(+t5[2]), i3 = Math.round(255 * +t5[3]).toString(16).toUpperCase().padStart(2, "0");
                return "#" + ((1 << 24) + (e5 << 16) + (n4 << 8) + r3).toString(16).slice(1) + i3;
              }(i2) : i2.startsWith("rgb(") ? `#${(i2 = i2.replace(/^[^\d]+/, "").replace(/[^\d]+$/, "")).split(",").map((t5) => `00${parseInt(t5, 10).toString(16)}`.slice(-2)).join("")}` : i2, t4;
              var i2;
            }, {});
          }
          function R(t3) {
            return !t3 || (!!/^#([A-Fa-f0-9]{3,6})$/.test(t3) || !!/^rgb\((\d{1,3}), (\d{1,3}), (\d{1,3})\)$/.test(t3) || function(t4) {
              for (const e3 of d) if (e3 === t4) return true;
              return false;
            }(t3));
          }
          function P(t3) {
            if (!t3) return true;
            const e3 = t3.slice(-2);
            return "px" === e3 || "em" === e3 || !/[a-z]/.test(e3) && !isNaN(parseFloat(e3));
          }
          function I(t3, e3) {
            for (const n3 in e3) t3.setAttribute(n3, e3[n3]);
          }
          function D(t3, e3) {
            const n3 = t3.style;
            if (n3) for (const t4 in e3) n3.setProperty(t4, e3[t4]);
            else t3.setAttribute("style", e3.toString());
          }
          function z(t3, n3, r2) {
            const i2 = e2().find(t3);
            if (!i2) return;
            const s2 = i2.colgroup(), o2 = i2.temporary();
            if (s2) {
              let t4 = 0;
              const e3 = s2.domNode.querySelectorAll("col");
              for (const n4 of e3) t4 += ~~n4.getAttribute("width");
              D(o2.domNode, { width: `${t4}px` });
            } else D(o2.domNode, { width: ~~(n3.width + r2) + "px" });
          }
          const H = e2().import("blots/block"), F = e2().import("blots/container"), U = ["border", "cellspacing", "style", "data-class"], V = ["width"];
          class W extends H {
            static create(t3) {
              const e3 = super.create();
              return t3 ? e3.setAttribute("data-cell", t3) : e3.setAttribute("data-cell", Q()), e3;
            }
            format(t3, e3) {
              const n3 = this.formats()[this.statics.blotName];
              if (t3 === $.blotName && e3) return this.wrap(G.blotName), this.wrap(t3, e3);
              if (t3 === J.blotName) this.wrap(t3, e3);
              else {
                if ("header" === t3) return this.replaceWith("table-header", { cellId: n3, value: e3 });
                if ("table-header" === t3 && e3) return this.wrapTableCell(this.parent), this.replaceWith(t3, e3);
                if ("list" === t3 || "table-list" === t3 && e3) {
                  const t4 = this.getCellFormats(this.parent);
                  return this.wrap(m.blotName, Object.assign(Object.assign({}, t4), { cellId: n3 })), this.replaceWith("table-list", e3);
                }
                super.format(t3, e3);
              }
            }
            formats() {
              const t3 = this.attributes.values(), e3 = this.domNode.getAttribute("data-cell");
              return null != e3 && (t3[this.statics.blotName] = e3), t3;
            }
            getCellFormats(t3) {
              const e3 = B(t3);
              if (!e3) return {};
              const [n3] = N(e3);
              return n3;
            }
            wrapTableCell(t3) {
              const e3 = B(t3);
              if (!e3) return;
              const [n3] = N(e3);
              this.wrap($.blotName, n3);
            }
          }
          W.blotName = "table-cell-block", W.className = "ql-table-block", W.tagName = "P";
          class $ extends F {
            checkMerge() {
              if (super.checkMerge() && null != this.next.children.head && this.next.children.head.formats) {
                const t3 = this.children.head.formats()[this.children.head.statics.blotName], e3 = this.children.tail.formats()[this.children.tail.statics.blotName], n3 = this.next.children.head.formats()[this.next.children.head.statics.blotName], r2 = this.next.children.tail.formats()[this.next.children.tail.statics.blotName], i2 = A(t3), s2 = A(e3), o2 = A(n3), l2 = A(r2);
                return i2 === s2 && i2 === o2 && i2 === l2;
              }
              return false;
            }
            static create(t3) {
              const e3 = super.create(), n3 = Object.keys(t3);
              for (const r2 of n3) t3[r2] && e3.setAttribute(r2, t3[r2]);
              return e3;
            }
            static formats(t3) {
              const e3 = this.getEmptyRowspan(t3), n3 = c.reduce((n4, r2) => (t3.hasAttribute(r2) && (n4[r2] = "rowspan" === r2 && e3 ? "" + (~~t3.getAttribute(r2) - e3) : _(t3.getAttribute(r2))), n4), {});
              return this.hasColgroup(t3) && (delete n3.width, n3.style && (n3.style = n3.style.replace(/width.*?;/g, ""))), n3;
            }
            formats() {
              const t3 = this.statics.formats(this.domNode, this.scroll);
              return { [this.statics.blotName]: t3 };
            }
            static getEmptyRowspan(t3) {
              let e3 = t3.parentElement.nextElementSibling, n3 = 0;
              for (; e3 && "TR" === e3.tagName && !e3.innerHTML.replace(/\s/g, ""); ) n3++, e3 = e3.nextElementSibling;
              return n3;
            }
            static hasColgroup(t3) {
              for (; t3 && "TBODY" !== t3.tagName; ) t3 = t3.parentElement;
              for (; t3; ) {
                if ("COLGROUP" === t3.tagName) return true;
                t3 = t3.previousElementSibling;
              }
              return false;
            }
            html() {
              return this.domNode.outerHTML.replace(/<(ol)[^>]*><li[^>]* data-list="bullet">(?:.*?)<\/li><\/(ol)>/gi, (t3, e3, n3) => t3.replace(e3, "ul").replace(n3, "ul"));
            }
            row() {
              return this.parent;
            }
            rowOffset() {
              return this.row() ? this.row().rowOffset() : -1;
            }
            setChildrenId(t3) {
              this.children.forEach((e3) => {
                e3.domNode.setAttribute("data-cell", t3);
              });
            }
            table() {
              let t3 = this.parent;
              for (; null != t3 && "table-container" !== t3.statics.blotName; ) t3 = t3.parent;
              return t3;
            }
            optimize(t3) {
              super.optimize(t3), this.children.forEach((t4) => {
                if (null != t4.next && A(t4.formats()[t4.statics.blotName]) !== A(t4.next.formats()[t4.next.statics.blotName])) {
                  const e3 = this.splitAfter(t4);
                  e3 && e3.optimize(), this.prev && this.prev.optimize();
                }
              });
            }
          }
          $.blotName = "table-cell", $.tagName = "TD";
          class G extends F {
            checkMerge() {
              if (super.checkMerge() && null != this.next.children.head && this.next.children.head.formats) {
                const t3 = this.children.head.formats()[this.children.head.statics.blotName], e3 = this.children.tail.formats()[this.children.tail.statics.blotName], n3 = this.next.children.head.formats()[this.next.children.head.statics.blotName], r2 = this.next.children.tail.formats()[this.next.children.tail.statics.blotName];
                return t3["data-row"] === e3["data-row"] && t3["data-row"] === n3["data-row"] && t3["data-row"] === r2["data-row"];
              }
              return false;
            }
            rowOffset() {
              return this.parent ? this.parent.children.indexOf(this) : -1;
            }
          }
          G.blotName = "table-row", G.tagName = "TR";
          class K extends F {
          }
          K.blotName = "table-body", K.tagName = "TBODY";
          class Y extends H {
            static create(t3) {
              const e3 = super.create(), n3 = Object.keys(t3), r2 = J.defaultClassName;
              for (const i2 of n3) "data-class" !== i2 || ~t3[i2].indexOf(r2) ? e3.setAttribute(i2, t3[i2]) : e3.setAttribute(i2, `${r2} ${t3[i2]}`);
              return e3;
            }
            static formats(t3) {
              return U.reduce((e3, n3) => (t3.hasAttribute(n3) && (e3[n3] = t3.getAttribute(n3)), e3), {});
            }
            formats() {
              const t3 = this.statics.formats(this.domNode, this.scroll);
              return { [this.statics.blotName]: t3 };
            }
            optimize(...t3) {
              if (this.statics.requiredContainer && this.parent instanceof this.statics.requiredContainer) {
                const t4 = this.formats()[this.statics.blotName];
                for (const e3 of U) t4[e3] ? "data-class" === e3 ? this.parent.domNode.setAttribute("class", t4[e3]) : this.parent.domNode.setAttribute(e3, t4[e3]) : this.parent.domNode.removeAttribute(e3);
              }
              super.optimize(...t3);
            }
          }
          Y.blotName = "table-temporary", Y.className = "ql-table-temporary", Y.tagName = "temporary";
          class Z extends H {
            static create(t3) {
              const e3 = super.create(), n3 = Object.keys(t3);
              for (const r2 of n3) e3.setAttribute(r2, t3[r2]);
              return e3;
            }
            static formats(t3) {
              return V.reduce((e3, n3) => (t3.hasAttribute(n3) && (e3[n3] = t3.getAttribute(n3)), e3), {});
            }
            formats() {
              const t3 = this.statics.formats(this.domNode, this.scroll);
              return { [this.statics.blotName]: t3 };
            }
            html() {
              return this.domNode.outerHTML;
            }
          }
          Z.blotName = "table-col", Z.tagName = "COL";
          class X extends F {
          }
          X.blotName = "table-colgroup", X.tagName = "COLGROUP";
          class J extends F {
            colgroup() {
              const [t3] = this.descendant(X);
              return t3 || this.findChild("table-colgroup");
            }
            deleteColumn(t3, n3, r2, i2 = []) {
              const s2 = this.tbody(), o2 = this.descendants($);
              if (null != s2 && null != s2.children.head) if (n3.length === o2.length) r2();
              else {
                for (const [n4, r3] of t3) this.setCellColspan(e2().find(n4), r3);
                for (const t4 of [...n3, ...i2]) 1 === t4.parentElement.children.length && this.setCellRowspan(t4.parentElement.previousElementSibling), t4.remove();
              }
            }
            deleteRow(t3, e3) {
              const n3 = this.tbody();
              if (null != n3 && null != n3.children.head) if (t3.length === n3.children.length) e3();
              else {
                const e4 = /* @__PURE__ */ new WeakMap(), r2 = [], i2 = [], s2 = this.getMaxColumns(n3.children.head.children);
                for (const n4 of t3) {
                  const r3 = this.getCorrectRow(n4, s2);
                  r3 && r3.children.forEach((n5) => {
                    var r4;
                    const s3 = ~~n5.domNode.getAttribute("rowspan") || 1;
                    if (s3 > 1) {
                      const o2 = n5.statics.blotName, [l2] = N(n5);
                      if (t3.includes(n5.parent)) {
                        const t4 = null === (r4 = n5.parent) || void 0 === r4 ? void 0 : r4.next;
                        if (e4.has(n5)) {
                          const { rowspan: r5 } = e4.get(n5);
                          e4.set(n5, { next: t4, rowspan: r5 - 1 });
                        } else e4.set(n5, { next: t4, rowspan: s3 - 1 }), i2.push(n5);
                      } else n5.replaceWith(o2, Object.assign(Object.assign({}, l2), { rowspan: s3 - 1 }));
                    }
                  });
                }
                for (const t4 of i2) {
                  const [n4] = N(t4), { right: i3, width: s3 } = t4.domNode.getBoundingClientRect(), { next: o2, rowspan: l2 } = e4.get(t4);
                  this.setColumnCells(o2, r2, { position: i3, width: s3 }, n4, l2, t4);
                }
                for (const [t4, e5, n4, i3] of r2) {
                  const r3 = this.scroll.create($.blotName, e5);
                  i3.moveChildren(r3);
                  const s3 = Q();
                  r3.setChildrenId(s3), t4.insertBefore(r3, n4), i3.remove();
                }
                for (const e5 of t3) e5.remove();
              }
            }
            deleteTable() {
              this.remove();
            }
            findChild(t3) {
              let e3 = this.children.head;
              for (; e3; ) {
                if (e3.statics.blotName === t3) return e3;
                e3 = e3.next;
              }
              return null;
            }
            getCopyTable() {
              return this.domNode.outerHTML.replace(/<temporary[^>]*>(.*?)<\/temporary>/gi, "").replace(/<td[^>]*>(.*?)<\/td>/gi, (t3) => q(t3));
            }
            getCorrectRow(t3, e3) {
              let n3 = false;
              for (; t3 && !n3; ) {
                if (e3 === this.getMaxColumns(t3.children)) return n3 = true, t3;
                t3 = t3.prev;
              }
              return t3;
            }
            getInsertRow(t3, e3, n3) {
              const r2 = this.tbody();
              if (null == r2 || null == r2.children.head) return;
              const i2 = tt(), s2 = this.scroll.create(G.blotName), o2 = this.getMaxColumns(r2.children.head.children);
              return this.getMaxColumns(t3.children) === o2 ? (t3.children.forEach((t4) => {
                const e4 = { height: "24", "data-row": i2 }, n4 = ~~t4.domNode.getAttribute("colspan") || 1;
                this.insertTableCell(n4, e4, s2);
              }), s2) : (this.getCorrectRow(t3.prev, o2).children.forEach((t4) => {
                const r3 = { height: "24", "data-row": i2 }, o3 = ~~t4.domNode.getAttribute("colspan") || 1, l2 = ~~t4.domNode.getAttribute("rowspan") || 1;
                if (l2 > 1) if (n3 > 0 && !e3) this.insertTableCell(o3, r3, s2);
                else {
                  const [e4] = N(t4);
                  t4.replaceWith(t4.statics.blotName, Object.assign(Object.assign({}, e4), { rowspan: l2 + 1 }));
                }
                else this.insertTableCell(o3, r3, s2);
              }), s2);
            }
            getMaxColumns(t3) {
              return t3.reduce((t4, e3) => t4 + (~~e3.domNode.getAttribute("colspan") || 1), 0);
            }
            insertColumn(t3, e3, n3, r2) {
              const i2 = this.colgroup(), s2 = this.tbody();
              if (null == s2 || null == s2.children.head) return;
              const o2 = [], l2 = [];
              let a2 = s2.children.head;
              for (; a2; ) {
                if (e3 && r2 > 0) {
                  const t4 = a2.children.tail.domNode.getAttribute("data-row");
                  o2.push([a2, t4, null, null]);
                } else this.setColumnCells(a2, o2, { position: t3, width: n3 });
                a2 = a2.next;
              }
              if (i2) if (e3) l2.push([i2, null]);
              else {
                let e4 = 0, n4 = 0, r3 = i2.children.head;
                for (; r3; ) {
                  const { left: s3, width: o3 } = r3.domNode.getBoundingClientRect();
                  if (e4 = e4 || s3, n4 = e4 + o3, Math.abs(e4 - t3) <= 2) {
                    l2.push([i2, r3]);
                    break;
                  }
                  if (Math.abs(n4 - t3) <= 2 && !r3.next) {
                    l2.push([i2, null]);
                    break;
                  }
                  e4 += o3, r3 = r3.next;
                }
              }
              for (const [t4, e4, n4] of o2) t4 ? this.insertColumnCell(t4, e4, n4) : this.setCellColspan(n4, 1);
              for (const [t4, e4] of l2) this.insertCol(t4, e4);
            }
            insertCol(t3, e3) {
              const n3 = this.scroll.create(Z.blotName, { width: "72" });
              t3.insertBefore(n3, e3);
            }
            insertColumnCell(t3, e3, n3) {
              const r2 = this.colgroup() ? { "data-row": e3 } : { "data-row": e3, width: "72" }, i2 = this.scroll.create($.blotName, r2), s2 = this.scroll.create(W.blotName, Q());
              if (i2.appendChild(s2), !t3) {
                const e4 = this.tbody();
                t3 = this.scroll.create(G.blotName), e4.insertBefore(t3, null);
              }
              return t3.insertBefore(i2, n3), s2.optimize(), i2;
            }
            insertRow(t3, e3) {
              const n3 = this.tbody();
              if (null == n3 || null == n3.children.head) return;
              const r2 = n3.children.at(t3), i2 = r2 || n3.children.at(t3 - 1), s2 = this.getInsertRow(i2, r2, e3);
              n3.insertBefore(s2, r2);
            }
            insertTableCell(t3, e3, n3) {
              t3 > 1 ? Object.assign(e3, { colspan: t3 }) : delete e3.colspan;
              const r2 = this.scroll.create($.blotName, e3), i2 = this.scroll.create(W.blotName, Q());
              r2.appendChild(i2), n3.appendChild(r2), i2.optimize();
            }
            optimize(t3) {
              super.optimize(t3);
              const e3 = this.descendants(Y);
              if (this.setClassName(e3), e3.length > 1) {
                e3.shift();
                for (const t4 of e3) t4.remove();
              }
            }
            setCellColspan(t3, e3) {
              const n3 = t3.statics.blotName, r2 = t3.formats()[n3], i2 = (~~r2.colspan || 1) + e3;
              i2 > 1 ? Object.assign(r2, { colspan: i2 }) : delete r2.colspan, t3.replaceWith(n3, r2);
            }
            setCellRowspan(t3) {
              for (; t3; ) {
                const n3 = t3.querySelectorAll("td[rowspan]");
                if (n3.length) {
                  for (const t4 of n3) {
                    const n4 = e2().find(t4), r2 = n4.statics.blotName, i2 = n4.formats()[r2], s2 = (~~i2.rowspan || 1) - 1, o2 = T(n4);
                    s2 > 1 ? Object.assign(i2, { rowspan: s2 }) : delete i2.rowspan, o2.format(r2, i2);
                  }
                  break;
                }
                t3 = t3.previousElementSibling;
              }
            }
            setClassName(t3) {
              const e3 = this.statics.defaultClassName, n3 = t3[0], r2 = this.domNode.getAttribute("class"), i2 = (t4, n4) => {
                const r3 = t4.domNode.getAttribute("data-class");
                r3 !== n4 && null != n4 && t4.domNode.setAttribute("data-class", ((t5) => {
                  const n5 = (t5 || "").split(/\s+/);
                  return n5.find((t6) => t6 === e3) || n5.unshift(e3), n5.join(" ").trim();
                })(n4)), n4 || r3 || t4.domNode.setAttribute("data-class", e3);
              };
              if (n3) i2(n3, r2);
              else {
                const t4 = this.prev;
                if (!t4) return;
                const [e4] = t4.descendant($), [n4] = t4.descendant(Y);
                !e4 && n4 && i2(n4, r2);
              }
            }
            setColumnCells(t3, e3, n3, r2, i2, s2) {
              if (!t3) return;
              const { position: o2, width: l2 } = n3;
              let a2 = t3.children.head;
              for (; a2; ) {
                const { left: n4, right: c2 } = a2.domNode.getBoundingClientRect(), u2 = a2.domNode.getAttribute("data-row");
                "object" == typeof r2 && Object.assign(r2, { rowspan: i2, "data-row": u2 });
                const h2 = r2 || u2;
                if (Math.abs(n4 - o2) <= 2) {
                  e3.push([t3, h2, a2, s2]);
                  break;
                }
                if (Math.abs(c2 - o2) <= 2 && !a2.next) {
                  e3.push([t3, h2, null, s2]);
                  break;
                }
                if (Math.abs(n4 - o2 - l2) <= 2) {
                  e3.push([t3, h2, a2, s2]);
                  break;
                }
                if (o2 > n4 && o2 < c2) {
                  e3.push([null, h2, a2, s2]);
                  break;
                }
                a2 = a2.next;
              }
            }
            tbody() {
              const [t3] = this.descendant(K);
              return t3 || this.findChild("table-body");
            }
            temporary() {
              const [t3] = this.descendant(Y);
              return t3;
            }
          }
          function Q() {
            return `cell-${Math.random().toString(36).slice(2, 6)}`;
          }
          function tt() {
            return `row-${Math.random().toString(36).slice(2, 6)}`;
          }
          J.blotName = "table-container", J.defaultClassName = "ql-table-better", J.tagName = "TABLE", J.allowedChildren = [K, Y, X], K.requiredContainer = J, Y.requiredContainer = J, X.requiredContainer = J, K.allowedChildren = [G], G.requiredContainer = K, X.allowedChildren = [Z], Z.requiredContainer = X, G.allowedChildren = [$], $.requiredContainer = G, $.allowedChildren = [W, x, m], W.requiredContainer = $, x.requiredContainer = $, m.requiredContainer = $;
          var et = r(930), nt = r.n(et);
          const rt = ["border", "cellspacing", "style", "class"];
          function it(t3, e3, n3) {
            return "object" == typeof e3 ? Object.keys(e3).reduce((t4, n4) => it(t4, n4, e3[n4]), t3) : t3.reduce((t4, r2) => r2.attributes && r2.attributes[e3] ? t4.push(r2) : t4.insert(r2.insert, nt()({}, { [e3]: n3 }, r2.attributes)), new (s())());
          }
          function st(t3, e3) {
            const n3 = "TABLE" === t3.parentNode.tagName ? t3.parentNode : t3.parentNode.parentNode, r2 = Array.from(n3.querySelectorAll("tr")).indexOf(t3) + 1;
            return t3.innerHTML.replace(/\s/g, "") ? it(e3, "table-cell", r2) : new (s())();
          }
          function ot(t3, e3) {
            var n3;
            const r2 = "TABLE" === t3.parentNode.parentNode.tagName ? t3.parentNode.parentNode : t3.parentNode.parentNode.parentNode, i2 = Array.from(r2.querySelectorAll("tr")), s2 = t3.tagName, o2 = Array.from(t3.parentNode.querySelectorAll(s2)), l2 = t3.getAttribute("data-row") || i2.indexOf(t3.parentNode) + 1, a2 = (null === (n3 = null == t3 ? void 0 : t3.firstElementChild) || void 0 === n3 ? void 0 : n3.getAttribute("data-cell")) || o2.indexOf(t3) + 1;
            return e3.length() || e3.insert("\n", { "table-cell": { "data-row": l2 } }), e3.ops.forEach((t4) => {
              t4.attributes && t4.attributes["table-cell"] && (t4.attributes["table-cell"] = Object.assign(Object.assign({}, t4.attributes["table-cell"]), { "data-row": l2 }));
            }), it(function(t4, e4, n4) {
              const r3 = $.formats(t4);
              return "TH" === t4.tagName ? (e4.ops.forEach((t5) => {
                "string" != typeof t5.insert || t5.insert.endsWith("\n") || (t5.insert += "\n");
              }), it(e4, "table-cell", Object.assign(Object.assign({}, r3), { "data-row": n4 }))) : e4;
            }(t3, e3, l2), "table-cell-block", a2);
          }
          function lt(t3, e3) {
            let n3 = ~~t3.getAttribute("span") || 1;
            const r2 = t3.getAttribute("width"), i2 = new (s())();
            for (; n3 > 1; ) i2.insert("\n", { "table-col": { width: r2 } }), n3--;
            return i2.concat(e3);
          }
          function at(t3, e3) {
            const n3 = rt.reduce((e4, n4) => (t3.hasAttribute(n4) && ("class" === n4 ? e4["data-class"] = t3.getAttribute(n4) : e4[n4] = _(t3.getAttribute(n4))), e4), {});
            return new (s())().insert("\n", { "table-temporary": n3 }).concat(e3);
          }
          var ct = { col: "Column", insColL: "Insert column left", insColR: "Insert column right", delCol: "Delete column", row: "Row", insRowAbv: "Insert row above", insRowBlw: "Insert row below", delRow: "Delete row", mCells: "Merge cells", sCell: "Split cell", tblProps: "Table properties", cellProps: "Cell properties", insParaOTbl: "Insert paragraph outside the table", insB4: "Insert before", insAft: "Insert after", copyTable: "Copy table", delTable: "Delete table", border: "Border", color: "Color", width: "Width", background: "Background", dims: "Dimensions", height: "Height", padding: "Padding", tblCellTxtAlm: "Table cell text alignment", alCellTxtL: "Align cell text to the left", alCellTxtC: "Align cell text to the center", alCellTxtR: "Align cell text to the right", jusfCellTxt: "Justify cell text", alCellTxtT: "Align cell text to the top", alCellTxtM: "Align cell text to the middle", alCellTxtB: "Align cell text to the bottom", dimsAlm: "Dimensions and alignment", alTblL: "Align table to the left", tblC: "Center table", alTblR: "Align table to the right", save: "Save", cancel: "Cancel", colorMsg: 'The color is invalid. Try "#FF0000" or "rgb(255,0,0)" or "red".', dimsMsg: 'The value is invalid. Try "10px" or "2em" or simply "2".', colorPicker: "Color picker", removeColor: "Remove color", black: "Black", dimGrey: "Dim grey", grey: "Grey", lightGrey: "Light grey", white: "White", red: "Red", orange: "Orange", yellow: "Yellow", lightGreen: "Light green", green: "Green", aquamarine: "Aquamarine", turquoise: "Turquoise", lightBlue: "Light blue", blue: "Blue", purple: "Purple" }, ut = { col: "列", insColL: "向左插入列", insColR: "向右插入列", delCol: "删除列", row: "行", insRowAbv: "在上面插入行", insRowBlw: "在下面插入行", delRow: "删除行", mCells: "合并单元格", sCell: "拆分单元格", tblProps: "表格属性", cellProps: "单元格属性", insParaOTbl: "在表格外插入段落", insB4: "在表格前面插入", insAft: "在表格后面插入", copyTable: "复制表格", delTable: "删除表格", border: "边框", color: "颜色", width: "宽度", background: "背景", dims: "尺寸", height: "高度", padding: "内边距", tblCellTxtAlm: "单元格文本对齐方式", alCellTxtL: "左对齐", alCellTxtC: "水平居中对齐", alCellTxtR: "右对齐", jusfCellTxt: "两边对齐", alCellTxtT: "顶端对齐", alCellTxtM: "垂直居中对齐", alCellTxtB: "底部对齐", dimsAlm: "尺寸和对齐方式", alTblL: "表格左对齐", tblC: "表格居中", alTblR: "表格右对齐", save: "保存", cancel: "取消", colorMsg: '无效颜色，请使用 "#FF0000" 或者 "rgb(255,0,0)" 或者 "red"', dimsMsg: '无效值， 请使用 "10px" 或者 "2em" 或者 "2"', colorPicker: "颜色选择器", removeColor: "删除颜色", black: "黑色", dimGrey: "暗灰色", grey: "灰色", lightGrey: "浅灰色", white: "白色", red: "红色", orange: "橙色", yellow: "黄色", lightGreen: "浅绿色", green: "绿色", aquamarine: "海蓝色", turquoise: "青绿色", lightBlue: "浅蓝色", blue: "蓝色", purple: "紫色" }, ht = { col: "Colonne", insColL: "Insérer colonne à gauche", insColR: "Insérer colonne à droite", delCol: "Supprimer la colonne", row: "Ligne", insRowAbv: "Insérer ligne au-dessus", insRowBlw: "Insérer ligne en dessous", delRow: "Supprimer la ligne", mCells: "Fusionner les cellules", sCell: "Diviser la cellule", tblProps: "Propriétés du tableau", cellProps: "Propriétés de la cellule", insParaOTbl: "Insérer paragraphe en dehors du tableau", insB4: "Insérer avant", insAft: "Insérer après", copyTable: "Copier le tableau", delTable: "Supprimer le tableau", border: "Bordure", color: "Couleur", width: "Largeur", background: "Arrière-plan", dims: "Dimensions", height: "Hauteur", padding: "Marge intérieure", tblCellTxtAlm: "Alignement du texte de la cellule du tableau", alCellTxtL: "Aligner le texte de la cellule à gauche", alCellTxtC: "Aligner le texte de la cellule au centre", alCellTxtR: "Aligner le texte de la cellule à droite", jusfCellTxt: "Justifier le texte de la cellule", alCellTxtT: "Aligner le texte de la cellule en haut", alCellTxtM: "Aligner le texte de la cellule au milieu", alCellTxtB: "Aligner le texte de la cellule en bas", dimsAlm: "Dimensions et alignement", alTblL: "Aligner le tableau à gauche", tblC: "Centrer le tableau", alTblR: "Aligner le tableau à droite", save: "Enregistrer", cancel: "Annuler", colorMsg: 'La couleur est invalide. Essayez "#FF0000" ou "rgb(255,0,0)" ou "rouge".', dimsMsg: 'La valeur est invalide. Essayez "10px" ou "2em" ou simplement "2".', colorPicker: "Sélecteur de couleur", removeColor: "Supprimer la couleur", black: "Noir", dimGrey: "Gris foncé", grey: "Gris", lightGrey: "Gris clair", white: "Blanc", red: "Rouge", orange: "Orange", yellow: "Jaune", lightGreen: "Vert clair", green: "Vert", aquamarine: "Aigue-marine", turquoise: "Turquoise", lightBlue: "Bleu clair", blue: "Bleu", purple: "Violet" }, dt = { col: "Kolumna", insColL: "Wstaw kolumnę z lewej", insColR: "Wstaw kolumnę z prawej", delCol: "Usuń kolumnę", row: "Wiersz", insRowAbv: "Wstaw wiersz powyżej", insRowBlw: "Wstaw wiersz poniżej", delRow: "Usuń wiersz", mCells: "Scal komórki", sCell: "Podziel komórkę", tblProps: "Właściwości tabeli", cellProps: "Właściwości komórki", insParaOTbl: "Wstaw akapit poza tabelą", insB4: "Wstaw przed", insAft: "Wstaw po", copyTable: "Kopiuj tabelę", delTable: "Usuń tabelę", border: "Obramowanie", color: "Kolor", width: "Szerokość", background: "Tło", dims: "Wymiary", height: "Wysokość", padding: "Margines wewnętrzny", tblCellTxtAlm: "Wyrównanie tekstu w komórce tabeli", alCellTxtL: "Wyrównaj tekst w komórce do lewej", alCellTxtC: "Wyrównaj tekst w komórce do środka", alCellTxtR: "Wyrównaj tekst w komórce do prawej", jusfCellTxt: "Wyjustuj tekst w komórce", alCellTxtT: "Wyrównaj tekst w komórce do góry", alCellTxtM: "Wyrównaj tekst w komórce do środka", alCellTxtB: "Wyrównaj tekst w komórce do dołu", dimsAlm: "Wymiary i wyrównanie", alTblL: "Wyrównaj tabelę do lewej", tblC: "Wyśrodkuj tabelę", alTblR: "Wyrównaj tabelę do prawej", save: "Zapisz", cancel: "Anuluj", colorMsg: 'Kolor jest nieprawidłowy. Spróbuj "#FF0000" lub "rgb(255,0,0)" lub "red".', dimsMsg: 'Wartość jest nieprawidłowa. Spróbuj "10px" lub "2em" lub po prostu "2".', colorPicker: "Wybór koloru", removeColor: "Usuń kolor", black: "Czarny", dimGrey: "Przyciemniony szary", grey: "Szary", lightGrey: "Jasnoszary", white: "Biały", red: "Czerwony", orange: "Pomarańczowy", yellow: "Żółty", lightGreen: "Jasnozielony", green: "Zielony", aquamarine: "Akwamaryna", turquoise: "Turkusowy", lightBlue: "Jasnoniebieski", blue: "Niebieski", purple: "Fioletowy" }, pt = { col: "Spalte", insColL: "Spalte links einfügen", insColR: "Spalte rechts einfügen", delCol: "Spalte löschen", row: "Zeile", insRowAbv: "Zeile oberhalb einfügen", insRowBlw: "Zeile unterhalb einfügen", delRow: "Zeile löschen", mCells: "Zellen verbinden", sCell: "Zelle teilen", tblProps: "Tabelleneingenschaften", cellProps: "Zelleneigenschaften", insParaOTbl: "Absatz außerhalb der Tabelle einfügen", insB4: "Davor einfügen", insAft: "Danach einfügen", copyTable: "Tabelle kopieren", delTable: "Tabelle löschen", border: "Rahmen", color: "Farbe", width: "Breite", background: "Schattierung", dims: "Maße", height: "Höhe", padding: "Abstand", tblCellTxtAlm: "Ausrichtung", alCellTxtL: "Zellentext links ausrichten", alCellTxtC: "Zellentext mittig ausrichten", alCellTxtR: "Zellentext rechts ausrichten", jusfCellTxt: "Zellentext Blocksatz", alCellTxtT: "Zellentext oben ausrichten", alCellTxtM: "Zellentext mittig ausrichten", alCellTxtB: "Zellentext unten ausrichten", dimsAlm: "Maße und Ausrichtung", alTblL: "Tabelle links ausrichten", tblC: "Tabelle mittig ausrichten", alTblR: "Tabelle rechts ausrichten", save: "Speichern", cancel: "Abbrechen", colorMsg: 'Die Farbe ist ungültig. Probiere "#FF0000", "rgb(255,0,0)" oder "red".', dimsMsg: 'Der Wert ist ungültig. Probiere "10px", "2em" oder einfach "2".', colorPicker: "Farbwähler", removeColor: "Farbe entfernen", black: "Schwarz", dimGrey: "Dunkelgrau", grey: "Grau", lightGrey: "Hellgrau", white: "Weiß", red: "Rot", orange: "Orange", yellow: "Gelb", lightGreen: "Hellgrün", green: "Grün", aquamarine: "Aquamarin", turquoise: "Türkis", lightBlue: "Hellblau", blue: "Blau", purple: "Lila" }, ft = { col: "Столбец", insColL: "Вставить столбец слева", insColR: "Вставить столбец справа", delCol: "Удалить столбец", row: "Строка", insRowAbv: "Вставить строку сверху", insRowBlw: "Вставить строку снизу", delRow: "Удалить строку", mCells: "Объединить ячейки", sCell: "Разбить ячейку", tblProps: "Свойства таблицы", cellProps: "Свойства ячейки", insParaOTbl: "Вставить абзац за пределами таблицы", insB4: "Вставить абзац перед", insAft: "Вставить абзац после", copyTable: "Копировать таблицу", delTable: "Удалить таблицу", border: "Обводка", color: "Цвет", width: "Ширина", background: "Фон", dims: "Размеры", height: "Высота", padding: "Отступ", tblCellTxtAlm: "Выравнивание текста в ячейке таблицы", alCellTxtL: "Выровнять текст в ячейке по левому краю", alCellTxtC: "Выровнять текст в ячейке по центру", alCellTxtR: "Выровнять текст в ячейке по правому краю", jusfCellTxt: "Выровнять текст в ячейке по ширине", alCellTxtT: "Выровнять текст в ячейке по верху", alCellTxtM: "Выровнять текст в ячейке по середине", alCellTxtB: "Выровнять текст в ячейке по низу", dimsAlm: "Размеры и выравнивание", alTblL: "Выровнять таблицу по левому краю", tblC: "Центрировать таблицу", alTblR: "Выровнять таблицу по правому краю", save: "Сохранить", cancel: "Отменить", colorMsg: 'Неверный цвет. Попробуйте "#FF0000", "rgb(255,0,0)" или "red".', dimsMsg: 'Недопустимое значение. Попробуйте "10px", "2em" или просто "2".', colorPicker: "Выбор цвета", removeColor: "Удалить цвет", black: "Черный", dimGrey: "Темно-серый", grey: "Серый", lightGrey: "Светло-серый", white: "Белый", red: "Красный", orange: "Оранжевый", yellow: "Желтый", lightGreen: "Светло-зеленый", green: "Зеленый", aquamarine: "Аквамарин", turquoise: "Бирюзовый", lightBlue: "Светло-голубой", blue: "Синий", purple: "Фиолетовый" }, gt = { col: "Sütun", insColL: "Sola sütun ekle", insColR: "Sağa sütun ekle", delCol: "Sütunu sil", row: "Satır", insRowAbv: "Üstüne satır ekle", insRowBlw: "Altına satır ekle", delRow: "Satırı sil", mCells: "Hücreleri birleştir", sCell: "Hücreyi böl", tblProps: "Tablo özellikleri", cellProps: "Hücre özellikleri", insParaOTbl: "Tablo dışında paragraf ekle", insB4: "Öncesine ekle", insAft: "Sonrasına ekle", copyTable: "Tabloyu kopyala", delTable: "Tabloyu sil", border: "Kenarlık", color: "Renk", width: "Genişlik", background: "Arka plan", dims: "Boyutlar", height: "Yükseklik", padding: "Dolgu", tblCellTxtAlm: "Tablo hücresi metin hizalaması", alCellTxtL: "Hücre metnini sola hizala", alCellTxtC: "Hücre metnini ortaya hizala", alCellTxtR: "Hücre metnini sağa hizala", jusfCellTxt: "Hücre metnini yasla", alCellTxtT: "Hücre metnini üste hizala", alCellTxtM: "Hücre metnini ortaya hizala", alCellTxtB: "Hücre metnini alta hizala", dimsAlm: "Boyutlar ve hizalama", alTblL: "Tabloyu sola hizala", tblC: "Tabloyu ortala", alTblR: "Tabloyu sağa hizala", save: "Kaydet", cancel: "İptal", colorMsg: 'Renk geçersiz. "#FF0000", "rgb(255,0,0)" veya "red" deneyin.', dimsMsg: 'Değer geçersiz. "10px", "2em" veya sadece "2" deneyin.', colorPicker: "Renk seçici", removeColor: "Rengi kaldır", black: "Siyah", dimGrey: "Koyu gri", grey: "Gri", lightGrey: "Açık gri", white: "Beyaz", red: "Kırmızı", orange: "Turuncu", yellow: "Sarı", lightGreen: "Açık yeşil", green: "Yeşil", aquamarine: "Akuamarin", turquoise: "Turkuaz", lightBlue: "Açık mavi", blue: "Mavi", purple: "Mor" }, bt = class {
            constructor(t3) {
              this.config = { en_US: ct, zh_CN: ut, fr_FR: ht, pl_PL: dt, de_DE: pt, ru_RU: ft, tr_TR: gt }, this.init(t3);
            }
            changeLanguage(t3) {
              this.name = t3;
            }
            init(t3) {
              if (void 0 === t3 || "string" == typeof t3) this.changeLanguage(t3 || "en_US");
              else {
                const { name: e3, content: n3 } = t3;
                n3 && this.registry(e3, n3), e3 && this.changeLanguage(e3);
              }
            }
            registry(t3, e3) {
              this.config = Object.assign(Object.assign({}, this.config), { [t3]: e3 });
            }
            useLanguage(t3) {
              return this.config[this.name][t3];
            }
          }, mt = ((t3) => (t3[t3.TYPE = 3] = "TYPE", t3[t3.LEVEL = 12] = "LEVEL", t3[t3.ATTRIBUTE = 13] = "ATTRIBUTE", t3[t3.BLOT = 14] = "BLOT", t3[t3.INLINE = 7] = "INLINE", t3[t3.BLOCK = 11] = "BLOCK", t3[t3.BLOCK_BLOT = 10] = "BLOCK_BLOT", t3[t3.INLINE_BLOT = 6] = "INLINE_BLOT", t3[t3.BLOCK_ATTRIBUTE = 9] = "BLOCK_ATTRIBUTE", t3[t3.INLINE_ATTRIBUTE = 5] = "INLINE_ATTRIBUTE", t3[t3.ANY = 15] = "ANY", t3))(mt || {});
          class vt {
            constructor(t3, e3, n3 = {}) {
              this.attrName = t3, this.keyName = e3;
              const r2 = mt.TYPE & mt.ATTRIBUTE;
              this.scope = null != n3.scope ? n3.scope & mt.LEVEL | r2 : mt.ATTRIBUTE, null != n3.whitelist && (this.whitelist = n3.whitelist);
            }
            static keys(t3) {
              return Array.from(t3.attributes).map((t4) => t4.name);
            }
            add(t3, e3) {
              return !!this.canAdd(t3, e3) && (t3.setAttribute(this.keyName, e3), true);
            }
            canAdd(t3, e3) {
              return null == this.whitelist || ("string" == typeof e3 ? this.whitelist.indexOf(e3.replace(/["']/g, "")) > -1 : this.whitelist.indexOf(e3) > -1);
            }
            remove(t3) {
              t3.removeAttribute(this.keyName);
            }
            value(t3) {
              const e3 = t3.getAttribute(this.keyName);
              return this.canAdd(t3, e3) && e3 ? e3 : "";
            }
          }
          class yt extends Error {
            constructor(t3) {
              super(t3 = "[Parchment] " + t3), this.message = t3, this.name = this.constructor.name;
            }
          }
          const wt = class t3 {
            constructor() {
              this.attributes = {}, this.classes = {}, this.tags = {}, this.types = {};
            }
            static find(t4, e3 = false) {
              if (null == t4) return null;
              if (this.blots.has(t4)) return this.blots.get(t4) || null;
              if (e3) {
                let n3 = null;
                try {
                  n3 = t4.parentNode;
                } catch {
                  return null;
                }
                return this.find(n3, e3);
              }
              return null;
            }
            create(e3, n3, r2) {
              const i2 = this.query(n3);
              if (null == i2) throw new yt(`Unable to create ${n3} blot`);
              const s2 = i2, o2 = n3 instanceof Node || n3.nodeType === Node.TEXT_NODE ? n3 : s2.create(r2), l2 = new s2(e3, o2, r2);
              return t3.blots.set(l2.domNode, l2), l2;
            }
            find(e3, n3 = false) {
              return t3.find(e3, n3);
            }
            query(t4, e3 = mt.ANY) {
              let n3;
              return "string" == typeof t4 ? n3 = this.types[t4] || this.attributes[t4] : t4 instanceof Text || t4.nodeType === Node.TEXT_NODE ? n3 = this.types.text : "number" == typeof t4 ? t4 & mt.LEVEL & mt.BLOCK ? n3 = this.types.block : t4 & mt.LEVEL & mt.INLINE && (n3 = this.types.inline) : t4 instanceof Element && ((t4.getAttribute("class") || "").split(/\s+/).some((t5) => (n3 = this.classes[t5], !!n3)), n3 = n3 || this.tags[t4.tagName]), null == n3 ? null : "scope" in n3 && e3 & mt.LEVEL & n3.scope && e3 & mt.TYPE & n3.scope ? n3 : null;
            }
            register(...t4) {
              return t4.map((t5) => {
                const e3 = "blotName" in t5, n3 = "attrName" in t5;
                if (!e3 && !n3) throw new yt("Invalid definition");
                if (e3 && "abstract" === t5.blotName) throw new yt("Cannot register abstract class");
                const r2 = e3 ? t5.blotName : n3 ? t5.attrName : void 0;
                return this.types[r2] = t5, n3 ? "string" == typeof t5.keyName && (this.attributes[t5.keyName] = t5) : e3 && (t5.className && (this.classes[t5.className] = t5), t5.tagName && (Array.isArray(t5.tagName) ? t5.tagName = t5.tagName.map((t6) => t6.toUpperCase()) : t5.tagName = t5.tagName.toUpperCase(), (Array.isArray(t5.tagName) ? t5.tagName : [t5.tagName]).forEach((e4) => {
                  (null == this.tags[e4] || null == t5.className) && (this.tags[e4] = t5);
                }))), t5;
              });
            }
          };
          wt.blots = /* @__PURE__ */ new WeakMap();
          let xt = wt;
          function kt(t3, e3) {
            return (t3.getAttribute("class") || "").split(/\s+/).filter((t4) => 0 === t4.indexOf(`${e3}-`));
          }
          const Ct = class extends vt {
            static keys(t3) {
              return (t3.getAttribute("class") || "").split(/\s+/).map((t4) => t4.split("-").slice(0, -1).join("-"));
            }
            add(t3, e3) {
              return !!this.canAdd(t3, e3) && (this.remove(t3), t3.classList.add(`${this.keyName}-${e3}`), true);
            }
            remove(t3) {
              kt(t3, this.keyName).forEach((e3) => {
                t3.classList.remove(e3);
              }), 0 === t3.classList.length && t3.removeAttribute("class");
            }
            value(t3) {
              const e3 = (kt(t3, this.keyName)[0] || "").slice(this.keyName.length + 1);
              return this.canAdd(t3, e3) ? e3 : "";
            }
          };
          function _t(t3) {
            const e3 = t3.split("-"), n3 = e3.slice(1).map((t4) => t4[0].toUpperCase() + t4.slice(1)).join("");
            return e3[0] + n3;
          }
          const Tt = class extends vt {
            static keys(t3) {
              return (t3.getAttribute("style") || "").split(";").map((t4) => t4.split(":")[0].trim());
            }
            add(t3, e3) {
              return !!this.canAdd(t3, e3) && (t3.style[_t(this.keyName)] = e3, true);
            }
            remove(t3) {
              t3.style[_t(this.keyName)] = "", t3.getAttribute("style") || t3.removeAttribute("style");
            }
            value(t3) {
              const e3 = t3.style[_t(this.keyName)];
              return this.canAdd(t3, e3) ? e3 : "";
            }
          }, Nt = class {
            constructor(t3) {
              this.attributes = {}, this.domNode = t3, this.build();
            }
            attribute(t3, e3) {
              e3 ? t3.add(this.domNode, e3) && (null != t3.value(this.domNode) ? this.attributes[t3.attrName] = t3 : delete this.attributes[t3.attrName]) : (t3.remove(this.domNode), delete this.attributes[t3.attrName]);
            }
            build() {
              this.attributes = {};
              const t3 = xt.find(this.domNode);
              if (null == t3) return;
              const e3 = vt.keys(this.domNode), n3 = Ct.keys(this.domNode), r2 = Tt.keys(this.domNode);
              e3.concat(n3).concat(r2).forEach((e4) => {
                const n4 = t3.scroll.query(e4, mt.ATTRIBUTE);
                n4 instanceof vt && (this.attributes[n4.attrName] = n4);
              });
            }
            copy(t3) {
              Object.keys(this.attributes).forEach((e3) => {
                const n3 = this.attributes[e3].value(this.domNode);
                t3.format(e3, n3);
              });
            }
            move(t3) {
              this.copy(t3), Object.keys(this.attributes).forEach((t4) => {
                this.attributes[t4].remove(this.domNode);
              }), this.attributes = {};
            }
            values() {
              return Object.keys(this.attributes).reduce((t3, e3) => (t3[e3] = this.attributes[e3].value(this.domNode), t3), {});
            }
          }, At = class {
            constructor(t3, e3) {
              this.scroll = t3, this.domNode = e3, xt.blots.set(e3, this), this.prev = null, this.next = null;
            }
            static create(t3) {
              if (null == this.tagName) throw new yt("Blot definition missing tagName");
              let e3, n3;
              return Array.isArray(this.tagName) ? ("string" == typeof t3 ? (n3 = t3.toUpperCase(), parseInt(n3, 10).toString() === n3 && (n3 = parseInt(n3, 10))) : "number" == typeof t3 && (n3 = t3), e3 = "number" == typeof n3 ? document.createElement(this.tagName[n3 - 1]) : n3 && this.tagName.indexOf(n3) > -1 ? document.createElement(n3) : document.createElement(this.tagName[0])) : e3 = document.createElement(this.tagName), this.className && e3.classList.add(this.className), e3;
            }
            get statics() {
              return this.constructor;
            }
            attach() {
            }
            clone() {
              const t3 = this.domNode.cloneNode(false);
              return this.scroll.create(t3);
            }
            detach() {
              null != this.parent && this.parent.removeChild(this), xt.blots.delete(this.domNode);
            }
            deleteAt(t3, e3) {
              this.isolate(t3, e3).remove();
            }
            formatAt(t3, e3, n3, r2) {
              const i2 = this.isolate(t3, e3);
              if (null != this.scroll.query(n3, mt.BLOT) && r2) i2.wrap(n3, r2);
              else if (null != this.scroll.query(n3, mt.ATTRIBUTE)) {
                const t4 = this.scroll.create(this.statics.scope);
                i2.wrap(t4), t4.format(n3, r2);
              }
            }
            insertAt(t3, e3, n3) {
              const r2 = null == n3 ? this.scroll.create("text", e3) : this.scroll.create(e3, n3), i2 = this.split(t3);
              this.parent.insertBefore(r2, i2 || void 0);
            }
            isolate(t3, e3) {
              const n3 = this.split(t3);
              if (null == n3) throw new Error("Attempt to isolate at end");
              return n3.split(e3), n3;
            }
            length() {
              return 1;
            }
            offset(t3 = this.parent) {
              return null == this.parent || this === t3 ? 0 : this.parent.children.offset(this) + this.parent.offset(t3);
            }
            optimize(t3) {
              this.statics.requiredContainer && !(this.parent instanceof this.statics.requiredContainer) && this.wrap(this.statics.requiredContainer.blotName);
            }
            remove() {
              null != this.domNode.parentNode && this.domNode.parentNode.removeChild(this.domNode), this.detach();
            }
            replaceWith(t3, e3) {
              const n3 = "string" == typeof t3 ? this.scroll.create(t3, e3) : t3;
              return null != this.parent && (this.parent.insertBefore(n3, this.next || void 0), this.remove()), n3;
            }
            split(t3, e3) {
              return 0 === t3 ? this : this.next;
            }
            update(t3, e3) {
            }
            wrap(t3, e3) {
              const n3 = "string" == typeof t3 ? this.scroll.create(t3, e3) : t3;
              if (null != this.parent && this.parent.insertBefore(n3, this.next || void 0), "function" != typeof n3.appendChild) throw new yt(`Cannot wrap ${t3}`);
              return n3.appendChild(this), n3;
            }
          };
          At.blotName = "abstract";
          let Lt = At;
          const St = class extends Lt {
            static value(t3) {
              return true;
            }
            index(t3, e3) {
              return this.domNode === t3 || this.domNode.compareDocumentPosition(t3) & Node.DOCUMENT_POSITION_CONTAINED_BY ? Math.min(e3, 1) : -1;
            }
            position(t3, e3) {
              let n3 = Array.from(this.parent.domNode.childNodes).indexOf(this.domNode);
              return t3 > 0 && (n3 += 1), [this.parent.domNode, n3];
            }
            value() {
              return { [this.statics.blotName]: this.statics.value(this.domNode) || true };
            }
          };
          St.scope = mt.INLINE_BLOT;
          const Et = St;
          class jt {
            constructor() {
              this.head = null, this.tail = null, this.length = 0;
            }
            append(...t3) {
              if (this.insertBefore(t3[0], null), t3.length > 1) {
                const e3 = t3.slice(1);
                this.append(...e3);
              }
            }
            at(t3) {
              const e3 = this.iterator();
              let n3 = e3();
              for (; n3 && t3 > 0; ) t3 -= 1, n3 = e3();
              return n3;
            }
            contains(t3) {
              const e3 = this.iterator();
              let n3 = e3();
              for (; n3; ) {
                if (n3 === t3) return true;
                n3 = e3();
              }
              return false;
            }
            indexOf(t3) {
              const e3 = this.iterator();
              let n3 = e3(), r2 = 0;
              for (; n3; ) {
                if (n3 === t3) return r2;
                r2 += 1, n3 = e3();
              }
              return -1;
            }
            insertBefore(t3, e3) {
              null != t3 && (this.remove(t3), t3.next = e3, null != e3 ? (t3.prev = e3.prev, null != e3.prev && (e3.prev.next = t3), e3.prev = t3, e3 === this.head && (this.head = t3)) : null != this.tail ? (this.tail.next = t3, t3.prev = this.tail, this.tail = t3) : (t3.prev = null, this.head = this.tail = t3), this.length += 1);
            }
            offset(t3) {
              let e3 = 0, n3 = this.head;
              for (; null != n3; ) {
                if (n3 === t3) return e3;
                e3 += n3.length(), n3 = n3.next;
              }
              return -1;
            }
            remove(t3) {
              this.contains(t3) && (null != t3.prev && (t3.prev.next = t3.next), null != t3.next && (t3.next.prev = t3.prev), t3 === this.head && (this.head = t3.next), t3 === this.tail && (this.tail = t3.prev), this.length -= 1);
            }
            iterator(t3 = this.head) {
              return () => {
                const e3 = t3;
                return null != t3 && (t3 = t3.next), e3;
              };
            }
            find(t3, e3 = false) {
              const n3 = this.iterator();
              let r2 = n3();
              for (; r2; ) {
                const i2 = r2.length();
                if (t3 < i2 || e3 && t3 === i2 && (null == r2.next || 0 !== r2.next.length())) return [r2, t3];
                t3 -= i2, r2 = n3();
              }
              return [null, 0];
            }
            forEach(t3) {
              const e3 = this.iterator();
              let n3 = e3();
              for (; n3; ) t3(n3), n3 = e3();
            }
            forEachAt(t3, e3, n3) {
              if (e3 <= 0) return;
              const [r2, i2] = this.find(t3);
              let s2 = t3 - i2;
              const o2 = this.iterator(r2);
              let l2 = o2();
              for (; l2 && s2 < t3 + e3; ) {
                const r3 = l2.length();
                t3 > s2 ? n3(l2, t3 - s2, Math.min(e3, s2 + r3 - t3)) : n3(l2, 0, Math.min(r3, t3 + e3 - s2)), s2 += r3, l2 = o2();
              }
            }
            map(t3) {
              return this.reduce((e3, n3) => (e3.push(t3(n3)), e3), []);
            }
            reduce(t3, e3) {
              const n3 = this.iterator();
              let r2 = n3();
              for (; r2; ) e3 = t3(e3, r2), r2 = n3();
              return e3;
            }
          }
          function qt(t3, e3) {
            const n3 = e3.find(t3);
            if (n3) return n3;
            try {
              return e3.create(t3);
            } catch {
              const n4 = e3.create(mt.INLINE);
              return Array.from(t3.childNodes).forEach((t4) => {
                n4.domNode.appendChild(t4);
              }), t3.parentNode && t3.parentNode.replaceChild(n4.domNode, t3), n4.attach(), n4;
            }
          }
          const Mt = class t3 extends Lt {
            constructor(t4, e3) {
              super(t4, e3), this.uiNode = null, this.build();
            }
            appendChild(t4) {
              this.insertBefore(t4);
            }
            attach() {
              super.attach(), this.children.forEach((t4) => {
                t4.attach();
              });
            }
            attachUI(e3) {
              null != this.uiNode && this.uiNode.remove(), this.uiNode = e3, t3.uiClass && this.uiNode.classList.add(t3.uiClass), this.uiNode.setAttribute("contenteditable", "false"), this.domNode.insertBefore(this.uiNode, this.domNode.firstChild);
            }
            build() {
              this.children = new jt(), Array.from(this.domNode.childNodes).filter((t4) => t4 !== this.uiNode).reverse().forEach((t4) => {
                try {
                  const e3 = qt(t4, this.scroll);
                  this.insertBefore(e3, this.children.head || void 0);
                } catch (t5) {
                  if (t5 instanceof yt) return;
                  throw t5;
                }
              });
            }
            deleteAt(t4, e3) {
              if (0 === t4 && e3 === this.length()) return this.remove();
              this.children.forEachAt(t4, e3, (t5, e4, n3) => {
                t5.deleteAt(e4, n3);
              });
            }
            descendant(e3, n3 = 0) {
              const [r2, i2] = this.children.find(n3);
              return null == e3.blotName && e3(r2) || null != e3.blotName && r2 instanceof e3 ? [r2, i2] : r2 instanceof t3 ? r2.descendant(e3, i2) : [null, -1];
            }
            descendants(e3, n3 = 0, r2 = Number.MAX_VALUE) {
              let i2 = [], s2 = r2;
              return this.children.forEachAt(n3, r2, (n4, r3, o2) => {
                (null == e3.blotName && e3(n4) || null != e3.blotName && n4 instanceof e3) && i2.push(n4), n4 instanceof t3 && (i2 = i2.concat(n4.descendants(e3, r3, s2))), s2 -= o2;
              }), i2;
            }
            detach() {
              this.children.forEach((t4) => {
                t4.detach();
              }), super.detach();
            }
            enforceAllowedChildren() {
              let e3 = false;
              this.children.forEach((n3) => {
                e3 || this.statics.allowedChildren.some((t4) => n3 instanceof t4) || (n3.statics.scope === mt.BLOCK_BLOT ? (null != n3.next && this.splitAfter(n3), null != n3.prev && this.splitAfter(n3.prev), n3.parent.unwrap(), e3 = true) : n3 instanceof t3 ? n3.unwrap() : n3.remove());
              });
            }
            formatAt(t4, e3, n3, r2) {
              this.children.forEachAt(t4, e3, (t5, e4, i2) => {
                t5.formatAt(e4, i2, n3, r2);
              });
            }
            insertAt(t4, e3, n3) {
              const [r2, i2] = this.children.find(t4);
              if (r2) r2.insertAt(i2, e3, n3);
              else {
                const t5 = null == n3 ? this.scroll.create("text", e3) : this.scroll.create(e3, n3);
                this.appendChild(t5);
              }
            }
            insertBefore(t4, e3) {
              null != t4.parent && t4.parent.children.remove(t4);
              let n3 = null;
              this.children.insertBefore(t4, e3 || null), t4.parent = this, null != e3 && (n3 = e3.domNode), (this.domNode.parentNode !== t4.domNode || this.domNode.nextSibling !== n3) && this.domNode.insertBefore(t4.domNode, n3), t4.attach();
            }
            length() {
              return this.children.reduce((t4, e3) => t4 + e3.length(), 0);
            }
            moveChildren(t4, e3) {
              this.children.forEach((n3) => {
                t4.insertBefore(n3, e3);
              });
            }
            optimize(t4) {
              if (super.optimize(t4), this.enforceAllowedChildren(), null != this.uiNode && this.uiNode !== this.domNode.firstChild && this.domNode.insertBefore(this.uiNode, this.domNode.firstChild), 0 === this.children.length) if (null != this.statics.defaultChild) {
                const t5 = this.scroll.create(this.statics.defaultChild.blotName);
                this.appendChild(t5);
              } else this.remove();
            }
            path(e3, n3 = false) {
              const [r2, i2] = this.children.find(e3, n3), s2 = [[this, e3]];
              return r2 instanceof t3 ? s2.concat(r2.path(i2, n3)) : (null != r2 && s2.push([r2, i2]), s2);
            }
            removeChild(t4) {
              this.children.remove(t4);
            }
            replaceWith(e3, n3) {
              const r2 = "string" == typeof e3 ? this.scroll.create(e3, n3) : e3;
              return r2 instanceof t3 && this.moveChildren(r2), super.replaceWith(r2);
            }
            split(t4, e3 = false) {
              if (!e3) {
                if (0 === t4) return this;
                if (t4 === this.length()) return this.next;
              }
              const n3 = this.clone();
              return this.parent && this.parent.insertBefore(n3, this.next || void 0), this.children.forEachAt(t4, this.length(), (t5, r2, i2) => {
                const s2 = t5.split(r2, e3);
                null != s2 && n3.appendChild(s2);
              }), n3;
            }
            splitAfter(t4) {
              const e3 = this.clone();
              for (; null != t4.next; ) e3.appendChild(t4.next);
              return this.parent && this.parent.insertBefore(e3, this.next || void 0), e3;
            }
            unwrap() {
              this.parent && this.moveChildren(this.parent, this.next || void 0), this.remove();
            }
            update(t4, e3) {
              const n3 = [], r2 = [];
              t4.forEach((t5) => {
                t5.target === this.domNode && "childList" === t5.type && (n3.push(...t5.addedNodes), r2.push(...t5.removedNodes));
              }), r2.forEach((t5) => {
                if (null != t5.parentNode && "IFRAME" !== t5.tagName && document.body.compareDocumentPosition(t5) & Node.DOCUMENT_POSITION_CONTAINED_BY) return;
                const e4 = this.scroll.find(t5);
                null != e4 && (null == e4.domNode.parentNode || e4.domNode.parentNode === this.domNode) && e4.detach();
              }), n3.filter((t5) => t5.parentNode === this.domNode && t5 !== this.uiNode).sort((t5, e4) => t5 === e4 ? 0 : t5.compareDocumentPosition(e4) & Node.DOCUMENT_POSITION_FOLLOWING ? 1 : -1).forEach((t5) => {
                let e4 = null;
                null != t5.nextSibling && (e4 = this.scroll.find(t5.nextSibling));
                const n4 = qt(t5, this.scroll);
                (n4.next !== e4 || null == n4.next) && (null != n4.parent && n4.parent.removeChild(this), this.insertBefore(n4, e4 || void 0));
              }), this.enforceAllowedChildren();
            }
          };
          Mt.uiClass = "";
          const Bt = Mt, Ot = class t3 extends Bt {
            static create(t4) {
              return super.create(t4);
            }
            static formats(e3, n3) {
              const r2 = n3.query(t3.blotName);
              if (null == r2 || e3.tagName !== r2.tagName) {
                if ("string" == typeof this.tagName) return true;
                if (Array.isArray(this.tagName)) return e3.tagName.toLowerCase();
              }
            }
            constructor(t4, e3) {
              super(t4, e3), this.attributes = new Nt(this.domNode);
            }
            format(e3, n3) {
              if (e3 !== this.statics.blotName || n3) {
                const t4 = this.scroll.query(e3, mt.INLINE);
                if (null == t4) return;
                t4 instanceof vt ? this.attributes.attribute(t4, n3) : n3 && (e3 !== this.statics.blotName || this.formats()[e3] !== n3) && this.replaceWith(e3, n3);
              } else this.children.forEach((e4) => {
                e4 instanceof t3 || (e4 = e4.wrap(t3.blotName, true)), this.attributes.copy(e4);
              }), this.unwrap();
            }
            formats() {
              const t4 = this.attributes.values(), e3 = this.statics.formats(this.domNode, this.scroll);
              return null != e3 && (t4[this.statics.blotName] = e3), t4;
            }
            formatAt(t4, e3, n3, r2) {
              null != this.formats()[n3] || this.scroll.query(n3, mt.ATTRIBUTE) ? this.isolate(t4, e3).format(n3, r2) : super.formatAt(t4, e3, n3, r2);
            }
            optimize(e3) {
              super.optimize(e3);
              const n3 = this.formats();
              if (0 === Object.keys(n3).length) return this.unwrap();
              const r2 = this.next;
              r2 instanceof t3 && r2.prev === this && function(t4, e4) {
                if (Object.keys(t4).length !== Object.keys(e4).length) return false;
                for (const n4 in t4) if (t4[n4] !== e4[n4]) return false;
                return true;
              }(n3, r2.formats()) && (r2.moveChildren(this), r2.remove());
            }
            replaceWith(t4, e3) {
              const n3 = super.replaceWith(t4, e3);
              return this.attributes.copy(n3), n3;
            }
            update(t4, e3) {
              super.update(t4, e3), t4.some((t5) => t5.target === this.domNode && "attributes" === t5.type) && this.attributes.build();
            }
            wrap(e3, n3) {
              const r2 = super.wrap(e3, n3);
              return r2 instanceof t3 && this.attributes.move(r2), r2;
            }
          };
          Ot.allowedChildren = [Ot, Et], Ot.blotName = "inline", Ot.scope = mt.INLINE_BLOT, Ot.tagName = "SPAN";
          const Rt = Ot, Pt = class t3 extends Bt {
            static create(t4) {
              return super.create(t4);
            }
            static formats(e3, n3) {
              const r2 = n3.query(t3.blotName);
              if (null == r2 || e3.tagName !== r2.tagName) {
                if ("string" == typeof this.tagName) return true;
                if (Array.isArray(this.tagName)) return e3.tagName.toLowerCase();
              }
            }
            constructor(t4, e3) {
              super(t4, e3), this.attributes = new Nt(this.domNode);
            }
            format(e3, n3) {
              const r2 = this.scroll.query(e3, mt.BLOCK);
              null != r2 && (r2 instanceof vt ? this.attributes.attribute(r2, n3) : e3 !== this.statics.blotName || n3 ? n3 && (e3 !== this.statics.blotName || this.formats()[e3] !== n3) && this.replaceWith(e3, n3) : this.replaceWith(t3.blotName));
            }
            formats() {
              const t4 = this.attributes.values(), e3 = this.statics.formats(this.domNode, this.scroll);
              return null != e3 && (t4[this.statics.blotName] = e3), t4;
            }
            formatAt(t4, e3, n3, r2) {
              null != this.scroll.query(n3, mt.BLOCK) ? this.format(n3, r2) : super.formatAt(t4, e3, n3, r2);
            }
            insertAt(t4, e3, n3) {
              if (null == n3 || null != this.scroll.query(e3, mt.INLINE)) super.insertAt(t4, e3, n3);
              else {
                const r2 = this.split(t4);
                if (null == r2) throw new Error("Attempt to insertAt after block boundaries");
                {
                  const t5 = this.scroll.create(e3, n3);
                  r2.parent.insertBefore(t5, r2);
                }
              }
            }
            replaceWith(t4, e3) {
              const n3 = super.replaceWith(t4, e3);
              return this.attributes.copy(n3), n3;
            }
            update(t4, e3) {
              super.update(t4, e3), t4.some((t5) => t5.target === this.domNode && "attributes" === t5.type) && this.attributes.build();
            }
          };
          Pt.blotName = "block", Pt.scope = mt.BLOCK_BLOT, Pt.tagName = "P", Pt.allowedChildren = [Rt, Pt, Et];
          const It = Pt, Dt = class extends Bt {
            checkMerge() {
              return null !== this.next && this.next.statics.blotName === this.statics.blotName;
            }
            deleteAt(t3, e3) {
              super.deleteAt(t3, e3), this.enforceAllowedChildren();
            }
            formatAt(t3, e3, n3, r2) {
              super.formatAt(t3, e3, n3, r2), this.enforceAllowedChildren();
            }
            insertAt(t3, e3, n3) {
              super.insertAt(t3, e3, n3), this.enforceAllowedChildren();
            }
            optimize(t3) {
              super.optimize(t3), this.children.length > 0 && null != this.next && this.checkMerge() && (this.next.moveChildren(this), this.next.remove());
            }
          };
          Dt.blotName = "container", Dt.scope = mt.BLOCK_BLOT;
          const zt = Dt, Ht = class extends Et {
            static formats(t3, e3) {
            }
            format(t3, e3) {
              super.formatAt(0, this.length(), t3, e3);
            }
            formatAt(t3, e3, n3, r2) {
              0 === t3 && e3 === this.length() ? this.format(n3, r2) : super.formatAt(t3, e3, n3, r2);
            }
            formats() {
              return this.statics.formats(this.domNode, this.scroll);
            }
          }, Ft = { attributes: true, characterData: true, characterDataOldValue: true, childList: true, subtree: true }, Ut = class extends Bt {
            constructor(t3, e3) {
              super(null, e3), this.registry = t3, this.scroll = this, this.build(), this.observer = new MutationObserver((t4) => {
                this.update(t4);
              }), this.observer.observe(this.domNode, Ft), this.attach();
            }
            create(t3, e3) {
              return this.registry.create(this, t3, e3);
            }
            find(t3, e3 = false) {
              const n3 = this.registry.find(t3, e3);
              return n3 ? n3.scroll === this ? n3 : e3 ? this.find(n3.scroll.domNode.parentNode, true) : null : null;
            }
            query(t3, e3 = mt.ANY) {
              return this.registry.query(t3, e3);
            }
            register(...t3) {
              return this.registry.register(...t3);
            }
            build() {
              null != this.scroll && super.build();
            }
            detach() {
              super.detach(), this.observer.disconnect();
            }
            deleteAt(t3, e3) {
              this.update(), 0 === t3 && e3 === this.length() ? this.children.forEach((t4) => {
                t4.remove();
              }) : super.deleteAt(t3, e3);
            }
            formatAt(t3, e3, n3, r2) {
              this.update(), super.formatAt(t3, e3, n3, r2);
            }
            insertAt(t3, e3, n3) {
              this.update(), super.insertAt(t3, e3, n3);
            }
            optimize(t3 = [], e3 = {}) {
              super.optimize(e3);
              const n3 = e3.mutationsMap || /* @__PURE__ */ new WeakMap();
              let r2 = Array.from(this.observer.takeRecords());
              for (; r2.length > 0; ) t3.push(r2.pop());
              const i2 = (t4, e4 = true) => {
                null == t4 || t4 === this || null != t4.domNode.parentNode && (n3.has(t4.domNode) || n3.set(t4.domNode, []), e4 && i2(t4.parent));
              }, s2 = (t4) => {
                n3.has(t4.domNode) && (t4 instanceof Bt && t4.children.forEach(s2), n3.delete(t4.domNode), t4.optimize(e3));
              };
              let o2 = t3;
              for (let e4 = 0; o2.length > 0; e4 += 1) {
                if (e4 >= 100) throw new Error("[Parchment] Maximum optimize iterations reached");
                for (o2.forEach((t4) => {
                  const e5 = this.find(t4.target, true);
                  null != e5 && (e5.domNode === t4.target && ("childList" === t4.type ? (i2(this.find(t4.previousSibling, false)), Array.from(t4.addedNodes).forEach((t5) => {
                    const e6 = this.find(t5, false);
                    i2(e6, false), e6 instanceof Bt && e6.children.forEach((t6) => {
                      i2(t6, false);
                    });
                  })) : "attributes" === t4.type && i2(e5.prev)), i2(e5));
                }), this.children.forEach(s2), o2 = Array.from(this.observer.takeRecords()), r2 = o2.slice(); r2.length > 0; ) t3.push(r2.pop());
              }
            }
            update(t3, e3 = {}) {
              t3 = t3 || this.observer.takeRecords();
              const n3 = /* @__PURE__ */ new WeakMap();
              t3.map((t4) => {
                const e4 = this.find(t4.target, true);
                return null == e4 ? null : n3.has(e4.domNode) ? (n3.get(e4.domNode).push(t4), null) : (n3.set(e4.domNode, [t4]), e4);
              }).forEach((t4) => {
                null != t4 && t4 !== this && n3.has(t4.domNode) && t4.update(n3.get(t4.domNode) || [], e3);
              }), e3.mutationsMap = n3, n3.has(this.domNode) && super.update(n3.get(this.domNode), e3), this.optimize(t3, e3);
            }
          };
          Ut.blotName = "scroll", Ut.defaultChild = It, Ut.allowedChildren = [It, zt], Ut.scope = mt.BLOCK_BLOT, Ut.tagName = "DIV";
          const Vt = class t3 extends Et {
            static create(t4) {
              return document.createTextNode(t4);
            }
            static value(t4) {
              return t4.data;
            }
            constructor(t4, e3) {
              super(t4, e3), this.text = this.statics.value(this.domNode);
            }
            deleteAt(t4, e3) {
              this.domNode.data = this.text = this.text.slice(0, t4) + this.text.slice(t4 + e3);
            }
            index(t4, e3) {
              return this.domNode === t4 ? e3 : -1;
            }
            insertAt(t4, e3, n3) {
              null == n3 ? (this.text = this.text.slice(0, t4) + e3 + this.text.slice(t4), this.domNode.data = this.text) : super.insertAt(t4, e3, n3);
            }
            length() {
              return this.text.length;
            }
            optimize(e3) {
              super.optimize(e3), this.text = this.statics.value(this.domNode), 0 === this.text.length ? this.remove() : this.next instanceof t3 && this.next.prev === this && (this.insertAt(this.length(), this.next.value()), this.next.remove());
            }
            position(t4, e3 = false) {
              return [this.domNode, t4];
            }
            split(t4, e3 = false) {
              if (!e3) {
                if (0 === t4) return this;
                if (t4 === this.length()) return this.next;
              }
              const n3 = this.scroll.create(this.domNode.splitText(t4));
              return this.parent.insertBefore(n3, this.next || void 0), this.text = this.statics.value(this.domNode), n3;
            }
            update(t4, e3) {
              t4.some((t5) => "characterData" === t5.type && t5.target === this.domNode) && (this.text = this.statics.value(this.domNode));
            }
            value() {
              return this.text;
            }
          };
          Vt.blotName = "text", Vt.scope = mt.INLINE_BLOT;
          const Wt = ["bold", "italic", "underline", "strike", "size", "color", "background", "font", "list", "header", "align", "link", "image"], $t = ["link", "image"];
          var Gt, Kt, Yt, Zt, Xt, Jt = class {
            constructor(t3, e3) {
              this.quill = t3, this.selectedTds = [], this.startTd = null, this.endTd = null, this.disabledList = [], this.singleList = [], this.tableBetter = e3, this.quill.root.addEventListener("click", this.handleClick.bind(this)), this.initDocumentListener(), this.initWhiteList();
            }
            attach(t3) {
              let e3 = Array.from(t3.classList).find((t4) => 0 === t4.indexOf("ql-"));
              if (!e3) return;
              const [n3, r2] = this.getButtonsWhiteList(), i2 = this.getCorrectDisabled(t3, e3);
              e3 = e3.slice(3), n3.includes(e3) || this.disabledList.push(...i2), r2.includes(e3) && this.singleList.push(...i2);
            }
            clearSelected() {
              for (const t3 of this.selectedTds) t3.classList && t3.classList.remove("ql-cell-focused", "ql-cell-selected");
              this.selectedTds = [], this.startTd = null, this.endTd = null;
            }
            exitTableFocus(t3, n3) {
              const r2 = B(t3).table(), i2 = n3 ? -1 : r2.length(), s2 = r2.offset(this.quill.scroll) + i2;
              this.tableBetter.hideTools(), this.quill.setSelection(s2, 0, e2().sources.USER);
            }
            getButtonsWhiteList() {
              const { options: t3 = {} } = this.tableBetter, { toolbarButtons: e3 = {} } = t3, { whiteList: n3 = Wt, singleWhiteList: r2 = $t } = e3;
              return [n3, r2];
            }
            getCopyColumns(t3) {
              const e3 = t3.querySelector("tr");
              return Array.from(e3.querySelectorAll("td")).reduce((t4, e4) => t4 + (~~e4.getAttribute("colspan") || 1), 0);
            }
            getCopyData() {
              const t3 = e2().find(this.selectedTds[0]).table();
              if (t3.descendants($).length === this.selectedTds.length) {
                const e3 = t3.getCopyTable();
                return { html: e3, text: this.getText(e3) };
              }
              let n3 = "";
              const r2 = {};
              for (const t4 of this.selectedTds) {
                const e3 = t4.getAttribute("data-row");
                r2[e3] || (r2[e3] = []), r2[e3].push(t4);
              }
              for (const t4 of Object.values(r2)) {
                let e3 = "";
                for (const n4 of t4) e3 += q(n4.outerHTML);
                e3 = `<tr>${e3}</tr>`, n3 += e3;
              }
              return n3 = `<table><tbody>${n3}</tbody></table>`, { html: n3, text: this.getText(n3) };
            }
            getCorrectDisabled(t3, e3) {
              if ("SELECT" !== t3.tagName) return [t3];
              const n3 = t3.closest("span.ql-formats");
              return n3 ? [...n3.querySelectorAll(`span.${e3}.ql-picker`), t3] : [t3];
            }
            getCorrectRow(t3, n3) {
              const r2 = "next" === n3 ? 0 : -1;
              let i2 = (~~t3.getAttribute("rowspan") || 1) + r2 || 1, s2 = e2().find(t3).parent;
              for (; s2 && i2; ) s2 = s2[n3], i2--;
              return null == s2 ? void 0 : s2.domNode;
            }
            getCorrectValue(t3, n3) {
              for (const r2 of this.selectedTds) {
                const i2 = e2().find(r2).html() || r2.outerHTML, s2 = this.quill.clipboard.convert({ html: i2, text: "\n" });
                for (const e3 of s2.ops) if (!this.isContinue(e3) && (n3 = this.getListCorrectValue(t3, n3, null == e3 ? void 0 : e3.attributes)) != ((null == e3 ? void 0 : e3.attributes) && (null == e3 ? void 0 : e3.attributes[t3]) || false)) return n3;
              }
              return !n3;
            }
            getListCorrectValue(t3, e3, n3 = {}) {
              return "list" !== t3 ? e3 : "check" === e3 ? "checked" !== n3[t3] && "unchecked" !== n3[t3] && "unchecked" : e3;
            }
            getPasteComputeBounds(t3, e3, n3) {
              const r2 = t3.getBoundingClientRect(), i2 = e3.getBoundingClientRect(), s2 = n3.domNode.getBoundingClientRect(), o2 = this.quill.container.getBoundingClientRect(), l2 = this.quill.container.scrollLeft, a2 = this.quill.container.scrollTop;
              return { left: r2.left - o2.left - l2, right: i2.right - o2.left - l2, top: r2.top - o2.top - a2, bottom: s2.bottom - o2.top - a2 };
            }
            getPasteInfo(t3, e3, n3) {
              let r2 = 0, i2 = null, s2 = null, o2 = t3.parentElement;
              for (; t3; ) {
                if (r2 += ~~t3.getAttribute("colspan") || 1, r2 >= e3) {
                  r2 = e3, i2 = t3;
                  break;
                }
                t3 = t3.nextElementSibling;
              }
              for (; --n3; ) {
                if (!o2.nextElementSibling) {
                  s2 = o2.firstElementChild;
                  break;
                }
                o2 = o2.nextElementSibling;
              }
              return [{ clospan: Math.abs(e3 - r2), cloTd: i2 }, { rowspan: n3, rowTd: s2 }];
            }
            getPasteLastRow(t3, e3) {
              for (; --e3 && t3; ) t3 = t3.next;
              return t3;
            }
            getPasteTds(t3) {
              const e3 = {};
              for (const n3 of t3) {
                const t4 = n3.getAttribute("data-row");
                e3[t4] || (e3[t4] = []), e3[t4].push(n3);
              }
              return Object.values(e3);
            }
            getText(t3) {
              return this.quill.clipboard.convert({ html: t3 }).filter((t4) => "string" == typeof t4.insert).map((t4) => t4.insert).join("");
            }
            handleClick(t3) {
              if (t3.detail < 3 || !this.selectedTds.length) return;
              const { index: n3, length: r2 } = this.quill.getSelection(true);
              this.quill.setSelection(n3, r2 - 1, e2().sources.SILENT), this.quill.scrollSelectionIntoView();
            }
            handleDeleteKeyup(t3) {
              var e3;
              (null === (e3 = this.selectedTds) || void 0 === e3 ? void 0 : e3.length) < 2 || "Backspace" !== t3.key && "Delete" !== t3.key || (t3.ctrlKey ? (this.tableBetter.tableMenus.deleteColumn(true), this.tableBetter.tableMenus.deleteRow(true)) : this.removeSelectedTdsContent());
            }
            handleKeyup(t3) {
              switch (t3.key) {
                case "ArrowLeft":
                case "ArrowRight":
                  this.makeTableArrowLevelHandler(t3.key);
                  break;
                case "ArrowUp":
                case "ArrowDown":
                  this.makeTableArrowVerticalHandler(t3.key);
              }
            }
            handleMousedown(t3) {
              this.clearSelected();
              const e3 = t3.target.closest("table");
              if (!e3) return;
              this.tableBetter.tableMenus.destroyTablePropertiesForm();
              const n3 = t3.target.closest("td");
              this.startTd = n3, this.endTd = n3, this.selectedTds = [n3], n3.classList.add("ql-cell-focused");
              const r2 = (t4) => {
                const r3 = t4.target.closest("td");
                if (!r3) return;
                const i3 = n3.isEqualNode(r3);
                if (i3) return;
                this.clearSelected(), this.startTd = n3, this.endTd = r3;
                const s2 = S(M(n3, this.quill.container), M(r3, this.quill.container));
                this.selectedTds = j(s2, e3, this.quill.container);
                for (const t5 of this.selectedTds) t5.classList && t5.classList.add("ql-cell-selected");
                i3 || this.quill.blur();
              }, i2 = (t4) => {
                this.setSingleDisabled(), this.setCorrectPositionTds(this.startTd, this.endTd, this.selectedTds), this.quill.root.removeEventListener("mousemove", r2), this.quill.root.removeEventListener("mouseup", i2);
              };
              this.quill.root.addEventListener("mousemove", r2), this.quill.root.addEventListener("mouseup", i2);
            }
            initDocumentListener() {
              document.addEventListener("copy", (t3) => this.onCaptureCopy(t3, false)), document.addEventListener("cut", (t3) => this.onCaptureCopy(t3, true)), document.addEventListener("keyup", this.handleDeleteKeyup.bind(this)), document.addEventListener("paste", this.onCapturePaste.bind(this));
            }
            initWhiteList() {
              const t3 = this.quill.getModule("toolbar");
              Array.from(t3.container.querySelectorAll("button, select")).forEach((t4) => {
                this.attach(t4);
              });
            }
            insertColumnCell(t3, e3) {
              const n3 = t3.tbody();
              n3 && n3.children.forEach((n4) => {
                const r2 = n4.children.tail.domNode.getAttribute("data-row");
                for (let i2 = 0; i2 < e3; i2++) t3.insertColumnCell(n4, r2, null);
              });
            }
            insertRow(t3, n3, r2) {
              const i2 = e2().find(r2).rowOffset();
              for (; n3--; ) t3.insertRow(i2 + 1, 1);
            }
            insertWith(t3) {
              return "string" == typeof t3 && t3.startsWith("\n") && t3.endsWith("\n");
            }
            isContinue(t3) {
              return !(!this.insertWith(t3.insert) || t3.attributes && !t3.attributes["table-list"] && !t3.attributes["table-header"]);
            }
            lines(t3) {
              const e3 = (t4) => {
                let n3 = [];
                return t4.children.forEach((t5) => {
                  t5 instanceof zt ? n3 = n3.concat(e3(t5)) : function(t6) {
                    return t6 instanceof It || t6 instanceof Ht;
                  }(t5) && n3.push(t5);
                }), n3;
              };
              return e3(t3);
            }
            makeTableArrowLevelHandler(t3) {
              const e3 = "ArrowLeft" === t3 ? this.startTd : this.endTd, n3 = this.quill.getSelection();
              if (!n3) return;
              const [r2] = this.quill.getLine(n3.index), i2 = B(r2);
              if (!i2) return this.tableBetter.hideTools();
              !i2 || e3 && e3.isEqualNode(i2.domNode) || (this.setSelected(i2.domNode, false), this.tableBetter.showTools(false));
            }
            makeTableArrowVerticalHandler(t3) {
              const n3 = "ArrowUp" === t3, r2 = this.quill.getSelection();
              if (!r2) return;
              const [i2, s2] = this.quill.getLine(r2.index), o2 = n3 ? "prev" : "next";
              if (i2[o2] && this.selectedTds.length) {
                const t4 = i2[o2].offset(this.quill.scroll) + Math.min(s2, i2[o2].length() - 1);
                this.quill.setSelection(t4, 0, e2().sources.USER);
              } else {
                if (!this.selectedTds.length) {
                  const t5 = B(i2);
                  if (!t5) return;
                  return this.tableArrowSelection(n3, t5), void this.tableBetter.showTools(false);
                }
                const t4 = n3 ? this.startTd : this.endTd, r3 = e2().find(t4).parent[o2], { left: s3, right: l2 } = t4.getBoundingClientRect();
                if (r3) {
                  let t5 = null, e3 = r3;
                  for (; e3 && !t5; ) {
                    let n4 = e3.children.head;
                    for (; n4; ) {
                      const { left: e4, right: r4 } = n4.domNode.getBoundingClientRect();
                      if (Math.abs(e4 - s3) <= 2) {
                        t5 = n4;
                        break;
                      }
                      if (Math.abs(r4 - l2) <= 2) {
                        t5 = n4;
                        break;
                      }
                      n4 = n4.next;
                    }
                    e3 = e3[o2];
                  }
                  t5 ? this.tableArrowSelection(n3, t5) : this.exitTableFocus(i2, n3);
                } else this.exitTableFocus(i2, n3);
              }
            }
            onCaptureCopy(t3, e3 = false) {
              var n3, r2, i2;
              if ((null === (n3 = this.selectedTds) || void 0 === n3 ? void 0 : n3.length) < 2) return;
              if (t3.defaultPrevented) return;
              t3.preventDefault();
              const { html: s2, text: o2 } = this.getCopyData();
              null === (r2 = t3.clipboardData) || void 0 === r2 || r2.setData("text/plain", o2), null === (i2 = t3.clipboardData) || void 0 === i2 || i2.setData("text/html", s2), e3 && this.removeSelectedTdsContent();
            }
            onCapturePaste(t3) {
              var n3, r2, i2;
              if (!(null === (n3 = this.selectedTds) || void 0 === n3 ? void 0 : n3.length)) return;
              t3.preventDefault();
              const s2 = null === (r2 = t3.clipboardData) || void 0 === r2 ? void 0 : r2.getData("text/html"), o2 = (null === (i2 = t3.clipboardData) || void 0 === i2 || i2.getData("text/plain"), document.createElement("div"));
              o2.innerHTML = s2;
              const l2 = Array.from(o2.querySelectorAll("tr"));
              if (!l2.length) return;
              const a2 = e2().find(this.startTd), c2 = a2.row(), u2 = a2.table();
              this.quill.history.cutoff();
              const h2 = this.getCopyColumns(o2), [d2, p2] = this.getPasteInfo(this.startTd, h2, l2.length), { clospan: f2, cloTd: g2 } = d2, { rowspan: b2, rowTd: m2 } = p2;
              f2 && this.insertColumnCell(u2, f2), b2 && this.insertRow(u2, b2, m2);
              const v2 = f2 ? c2.children.tail.domNode : g2, y2 = this.getPasteLastRow(c2, l2.length), w2 = this.getPasteComputeBounds(this.startTd, v2, y2), x2 = this.getPasteTds(j(w2, u2.domNode, this.quill.container)), k2 = l2.reduce((t4, e3) => (t4.push(Array.from(e3.querySelectorAll("td"))), t4), []), C2 = [];
              for (; k2.length; ) {
                const t4 = k2.shift(), n4 = x2.shift();
                let r3 = null, i3 = null;
                for (; t4.length; ) {
                  const s3 = t4.shift(), o3 = n4.shift();
                  if (o3) r3 = o3, i3 = this.pasteSelectedTd(o3, s3);
                  else {
                    const t5 = r3.getAttribute("data-row"), n5 = e2().find(r3);
                    i3 = u2.insertColumnCell(n5.parent, t5, n5.next), i3 = this.pasteSelectedTd(i3.domNode, s3), r3 = i3.domNode;
                  }
                  i3 && C2.push(i3.domNode);
                }
                for (; n4.length; ) n4.shift().remove();
              }
              this.quill.blur(), this.setSelectedTds(C2), this.tableBetter.tableMenus.updateMenus(), this.quill.scrollSelectionIntoView();
            }
            pasteSelectedTd(t3, n3) {
              const r2 = t3.getAttribute("data-row"), i2 = $.formats(n3);
              Object.assign(i2, { "data-row": r2 });
              const o2 = e2().find(t3), l2 = o2.replaceWith(o2.statics.blotName, i2);
              this.quill.setSelection(l2.offset(this.quill.scroll) + l2.length() - 1, 0, e2().sources.USER);
              const a2 = this.quill.getSelection(true), c2 = this.quill.getFormat(a2.index), u2 = n3.innerHTML, h2 = this.getText(u2), d2 = this.quill.clipboard.convert({ text: h2, html: u2 }), p2 = new (s())().retain(a2.index).delete(a2.length).concat(it(d2, c2));
              return this.quill.updateContents(p2, e2().sources.USER), l2;
            }
            removeCursor() {
              const t3 = this.quill.getSelection(true);
              t3 && 0 === t3.length && (this.quill.selection.cursor.remove(), this.quill.blur());
            }
            removeSelectedTdContent(t3) {
              const n3 = e2().find(t3);
              let r2 = n3.children.head;
              const i2 = r2.formats()[W.blotName], s2 = this.quill.scroll.create(W.blotName, i2);
              for (n3.insertBefore(s2, r2); r2; ) r2.remove(), r2 = r2.next;
            }
            removeSelectedTdsContent() {
              if (!(this.selectedTds.length < 2)) {
                for (const t3 of this.selectedTds) this.removeSelectedTdContent(t3);
                this.tableBetter.tableMenus.updateMenus();
              }
            }
            setCorrectPositionTds(t3, e3, n3) {
              if (!t3 || !e3 || n3.length < 2) return;
              const r2 = n3[0], i2 = n3[n3.length - 1], s2 = [.../* @__PURE__ */ new Set([t3, e3, r2, i2])];
              s2.sort((t4, e4) => {
                const n4 = t4.getBoundingClientRect(), r3 = e4.getBoundingClientRect();
                return (n4.top <= r3.top || n4.bottom <= r3.bottom) && (n4.left <= r3.left || n4.right <= r3.right) ? -1 : 1;
              }), this.startTd = s2[0], this.endTd = s2[s2.length - 1];
            }
            setDisabled(t3) {
              for (const e3 of this.disabledList) t3 ? e3.classList.add("ql-table-button-disabled") : e3.classList.remove("ql-table-button-disabled");
              this.setSingleDisabled();
            }
            setSelected(t3, n3 = true) {
              const r2 = e2().find(t3);
              this.clearSelected(), this.startTd = t3, this.endTd = t3, this.selectedTds = [t3], t3.classList.add("ql-cell-focused"), n3 && this.quill.setSelection(r2.offset(this.quill.scroll) + r2.length() - 1, 0, e2().sources.USER);
            }
            setSelectedTds(t3) {
              this.clearSelected(), this.startTd = t3[0], this.endTd = t3[t3.length - 1], this.selectedTds = t3;
              for (const t4 of this.selectedTds) t4.classList && t4.classList.add("ql-cell-selected");
            }
            setSelectedTdsFormat(t3, n3) {
              const r2 = [], i2 = this.quill.getModule("toolbar");
              for (const s2 of this.selectedTds) if (null != i2.handlers[t3]) {
                const o2 = e2().find(s2), l2 = this.lines(o2), a2 = i2.handlers[t3].call(i2, n3, l2);
                a2 && r2.push(B(a2).domNode);
              } else {
                const r3 = window.getSelection();
                r3.selectAllChildren(s2), this.quill.format(t3, n3, e2().sources.USER), r3.removeAllRanges();
              }
              this.quill.blur(), r2.length && this.setSelectedTds(r2);
            }
            setSingleDisabled() {
              for (const t3 of this.singleList) this.selectedTds.length > 1 ? t3.classList.add("ql-table-button-disabled") : t3.classList.remove("ql-table-button-disabled");
            }
            tableArrowSelection(t3, n3) {
              const r2 = t3 ? "tail" : "head", i2 = t3 ? n3.children[r2].length() - 1 : 0;
              this.setSelected(n3.domNode, false);
              const s2 = n3.children[r2].offset(this.quill.scroll) + i2;
              this.quill.setSelection(s2, 0, e2().sources.USER);
            }
            updateSelected(t3) {
              switch (t3) {
                case "column":
                  {
                    const t4 = this.endTd.nextElementSibling || this.startTd.previousElementSibling;
                    if (!t4) return;
                    this.setSelected(t4);
                  }
                  break;
                case "row": {
                  const t4 = this.getCorrectRow(this.endTd, "next") || this.getCorrectRow(this.startTd, "prev");
                  if (!t4) return;
                  const e3 = M(this.startTd, this.quill.container);
                  let n3 = t4.firstElementChild;
                  for (; n3; ) {
                    const t5 = M(n3, this.quill.container);
                    if (t5.left + 2 >= e3.left || t5.right - 2 >= e3.left) return void this.setSelected(n3);
                    n3 = n3.nextElementSibling;
                  }
                  this.setSelected(t4.firstElementChild);
                }
              }
            }
          }, Qt = class {
            constructor(t3, e3) {
              this.quill = t3, this.options = null, this.drag = false, this.line = null, this.dragBlock = null, this.dragTable = null, this.direction = null, this.tableBetter = e3, this.quill.root.addEventListener("mousemove", this.handleMouseMove.bind(this));
            }
            createDragBlock() {
              const t3 = document.createElement("div");
              t3.classList.add("ql-operate-block");
              const { dragBlockProps: e3 } = this.getProperty(this.options);
              D(t3, e3), this.dragBlock = t3, this.quill.container.appendChild(t3), this.updateCell(t3);
            }
            createDragTable(t3) {
              const e3 = document.createElement("div"), n3 = this.getDragTableProperty(t3);
              e3.classList.add("ql-operate-drag-table"), D(e3, n3), this.dragTable = e3, this.quill.container.appendChild(e3);
            }
            createOperateLine() {
              const t3 = document.createElement("div"), e3 = document.createElement("div");
              t3.classList.add("ql-operate-line-container");
              const { containerProps: n3, lineProps: r2 } = this.getProperty(this.options);
              D(t3, n3), D(e3, r2), t3.appendChild(e3), this.quill.container.appendChild(t3), this.line = t3, this.updateCell(t3);
            }
            getCorrectCol(t3, e3) {
              let n3 = t3.children.head;
              for (; n3 && --e3; ) n3 = n3.next;
              return n3;
            }
            getDragTableProperty(t3) {
              const { left: e3, top: n3, width: r2, height: i2 } = t3.getBoundingClientRect(), s2 = this.quill.container.getBoundingClientRect();
              return { left: e3 - s2.left + "px", top: n3 - s2.top + "px", width: `${r2}px`, height: `${i2}px`, display: "block" };
            }
            getLevelColSum(t3) {
              let e3 = t3, n3 = 0;
              for (; e3; ) n3 += ~~e3.getAttribute("colspan") || 1, e3 = e3.previousSibling;
              return n3;
            }
            getMaxColNum(t3) {
              const e3 = t3.parentElement.children;
              let n3 = 0;
              for (const t4 of e3) n3 += ~~t4.getAttribute("colspan") || 1;
              return n3;
            }
            getProperty(t3) {
              const e3 = this.quill.container.getBoundingClientRect(), { tableNode: n3, cellNode: r2, mousePosition: i2 } = t3, { clientX: s2, clientY: o2 } = i2, l2 = n3.getBoundingClientRect(), a2 = r2.getBoundingClientRect(), c2 = a2.left + a2.width, u2 = a2.top + a2.height, h2 = { width: "8px", height: "8px", top: l2.bottom - e3.top + "px", left: l2.right - e3.left + "px", display: l2.bottom > e3.bottom ? "none" : "block" };
              return Math.abs(c2 - s2) <= 5 ? (this.direction = "level", { dragBlockProps: h2, containerProps: { width: "5px", height: `${e3.height}px`, top: "0", left: c2 - e3.left - 2.5 + "px", display: "flex", cursor: "col-resize" }, lineProps: { width: "1px", height: "100%" } }) : Math.abs(u2 - o2) <= 5 ? (this.direction = "vertical", { dragBlockProps: h2, containerProps: { width: `${e3.width}px`, height: "5px", top: u2 - e3.top - 2.5 + "px", left: "0", display: "flex", cursor: "row-resize" }, lineProps: { width: "100%", height: "1px" } }) : (this.hideLine(), { dragBlockProps: h2 });
            }
            getVerticalCells(t3, e3) {
              let n3 = t3.parentElement;
              for (; e3 > 1 && n3; ) n3 = n3.nextSibling, e3--;
              return n3.children;
            }
            handleMouseMove(t3) {
              const e3 = t3.target.closest("table"), n3 = t3.target.closest("td"), r2 = { clientX: t3.clientX, clientY: t3.clientY };
              if (!e3 || !n3) return void (this.line && !this.drag && (this.hideLine(), this.hideDragBlock()));
              const i2 = { tableNode: e3, cellNode: n3, mousePosition: r2 };
              if (this.line) {
                if (this.drag || !n3) return;
                this.updateProperty(i2);
              } else this.options = i2, this.createOperateLine(), this.createDragBlock();
            }
            hideDragBlock() {
              this.dragBlock && D(this.dragBlock, { display: "none" });
            }
            hideDragTable() {
              this.dragTable && D(this.dragTable, { display: "none" });
            }
            hideLine() {
              this.line && D(this.line, { display: "none" });
            }
            isLine(t3) {
              return t3.classList.contains("ql-operate-line-container");
            }
            setCellLevelRect(t3, n3) {
              const { right: r2 } = t3.getBoundingClientRect(), i2 = ~~(n3 - r2), s2 = this.getLevelColSum(t3), o2 = e2().find(t3).table(), l2 = o2.colgroup(), a2 = o2.domNode.getBoundingClientRect();
              if (l2) {
                const t4 = this.getCorrectCol(l2, s2), e3 = t4.next, n4 = t4.formats()[t4.statics.blotName];
                if (t4.domNode.setAttribute("width", `${parseFloat(n4.width) + i2}`), e3) {
                  const t5 = e3.formats()[e3.statics.blotName];
                  e3.domNode.setAttribute("width", "" + (parseFloat(t5.width) - i2));
                }
              } else {
                const e3 = null == t3.nextElementSibling, n4 = t3.parentElement.parentElement.children, r3 = [];
                for (const t4 of n4) {
                  const n5 = t4.children;
                  if (e3) {
                    const t5 = n5[n5.length - 1], { width: e4 } = t5.getBoundingClientRect();
                    r3.push([t5, "" + ~~(e4 + i2)]);
                    continue;
                  }
                  let o3 = 0;
                  for (const t5 of n5) {
                    if (o3 += ~~t5.getAttribute("colspan") || 1, o3 > s2) break;
                    if (o3 === s2) {
                      const { width: e4 } = t5.getBoundingClientRect(), n6 = t5.nextElementSibling;
                      if (!n6) continue;
                      const { width: s3 } = n6.getBoundingClientRect();
                      r3.push([t5, "" + ~~(e4 + i2)], [n6, "" + ~~(s3 - i2)]);
                    }
                  }
                }
                for (const [t4, e4] of r3) I(t4, { width: e4 }), D(t4, { width: `${e4}px` });
              }
              null == t3.nextElementSibling && z(o2.domNode, a2, i2);
            }
            setCellRect(t3, e3, n3) {
              "level" === this.direction ? this.setCellLevelRect(t3, e3) : "vertical" === this.direction && this.setCellVerticalRect(t3, n3);
            }
            setCellsRect(t3, n3, r2) {
              const i2 = t3.parentElement.parentElement.children, s2 = n3 / this.getMaxColNum(t3), o2 = r2 / i2.length, l2 = [], a2 = e2().find(t3).table(), c2 = a2.colgroup(), u2 = a2.domNode.getBoundingClientRect();
              for (const t4 of i2) {
                const e3 = t4.children;
                for (const t5 of e3) {
                  const e4 = ~~t5.getAttribute("colspan") || 1, { width: n4, height: r3 } = t5.getBoundingClientRect();
                  l2.push([t5, `${Math.ceil(n4 + s2 * e4)}`, `${Math.ceil(r3 + o2)}`]);
                }
              }
              if (c2) {
                let t4 = c2.children.head;
                for (const [t5, , e3] of l2) I(t5, { height: e3 }), D(t5, { height: `${e3}px` });
                for (; t4; ) {
                  const { width: e3 } = t4.domNode.getBoundingClientRect();
                  I(t4.domNode, { width: `${Math.ceil(e3 + s2)}` }), t4 = t4.next;
                }
              } else for (const [t4, e3, n4] of l2) I(t4, { width: e3, height: n4 }), D(t4, { width: `${e3}px`, height: `${n4}px` });
              z(a2.domNode, u2, n3);
            }
            setCellVerticalRect(t3, e3) {
              const n3 = ~~t3.getAttribute("rowspan") || 1, r2 = n3 > 1 ? this.getVerticalCells(t3, n3) : t3.parentElement.children;
              for (const t4 of r2) {
                const { top: n4 } = t4.getBoundingClientRect(), r3 = "" + ~~(e3 - n4);
                I(t4, { height: r3 }), D(t4, { height: `${r3}px` });
              }
            }
            toggleLineChildClass(t3) {
              const e3 = this.line.firstElementChild;
              t3 ? e3.classList.add("ql-operate-line") : e3.classList.remove("ql-operate-line");
            }
            updateCell(t3) {
              if (!t3) return;
              const e3 = this.isLine(t3), n3 = (t4) => {
                t4.preventDefault(), this.drag && (e3 ? (this.updateDragLine(t4.clientX, t4.clientY), this.hideDragBlock()) : (this.updateDragBlock(t4.clientX, t4.clientY), this.hideLine()));
              }, r2 = (t4) => {
                t4.preventDefault();
                const { cellNode: i2, tableNode: s2 } = this.options;
                if (e3) this.setCellRect(i2, t4.clientX, t4.clientY), this.toggleLineChildClass(false);
                else {
                  const { right: e4, bottom: n4 } = s2.getBoundingClientRect(), r3 = t4.clientX - e4, o2 = t4.clientY - n4;
                  this.setCellsRect(i2, r3, o2), this.dragBlock.classList.remove("ql-operate-block-move"), this.hideDragBlock(), this.hideDragTable();
                }
                this.drag = false, document.removeEventListener("mousemove", n3, false), document.removeEventListener("mouseup", r2, false), this.tableBetter.tableMenus.updateMenus(s2);
              };
              t3.addEventListener("mousedown", (t4) => {
                t4.preventDefault();
                const { tableNode: i2 } = this.options;
                if (e3) this.toggleLineChildClass(true);
                else if (this.dragTable) {
                  const t5 = this.getDragTableProperty(i2);
                  D(this.dragTable, t5);
                } else this.createDragTable(i2);
                this.drag = true, document.addEventListener("mousemove", n3), document.addEventListener("mouseup", r2);
              });
            }
            updateDragBlock(t3, e3) {
              const n3 = this.quill.container.getBoundingClientRect();
              this.dragBlock.classList.add("ql-operate-block-move"), D(this.dragBlock, { top: ~~(e3 - n3.top - 4) + "px", left: ~~(t3 - n3.left - 4) + "px" }), this.updateDragTable(t3, e3);
            }
            updateDragLine(t3, e3) {
              const n3 = this.quill.container.getBoundingClientRect();
              "level" === this.direction ? D(this.line, { left: ~~(t3 - n3.left - 2.5) + "px" }) : "vertical" === this.direction && D(this.line, { top: ~~e3 - n3.top - 2.5 + "px" });
            }
            updateDragTable(t3, e3) {
              const { top: n3, left: r2 } = this.dragTable.getBoundingClientRect(), i2 = t3 - r2, s2 = e3 - n3;
              D(this.dragTable, { width: `${i2}px`, height: `${s2}px`, display: "block" });
            }
            updateProperty(t3) {
              const { containerProps: e3, lineProps: n3, dragBlockProps: r2 } = this.getProperty(t3);
              e3 && n3 && (this.options = t3, D(this.line, e3), D(this.line.firstChild, n3), D(this.dragBlock, r2));
            }
          }, te = '<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg t="1692084293475" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="2632" xmlns:xlink="http://www.w3.org/1999/xlink" width="16" height="16"><path d="M1012.62222223 944.76190506a78.01904747 78.01904747 0 0 1-78.01904747 78.01904747H76.3936505a78.01904747 78.01904747 0 0 1-78.01904747-78.01904747V86.55238079a78.01904747 78.01904747 0 0 1 78.01904747-78.01904746h858.20952426a78.01904747 78.01904747 0 0 1 78.01904747 78.01904746v858.20952427zM466.4888889 554.66666666H76.3936505v390.0952384h390.0952384V554.66666666z m468.11428586 0H544.50793636v390.0952384h390.0952384V554.66666666zM466.4888889 86.55238079H76.3936505v390.0952384h390.0952384V86.55238079z m468.11428586 0H544.50793636v390.0952384h390.0952384V86.55238079z" fill="#515151" p-id="2633"></path></svg>', ee = '<?xml version="1.0" encoding="UTF-8"?><svg width="18" height="18" viewBox="0 0 48 48" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M36 18L24 30L12 18" stroke="#333" stroke-width="4" stroke-linecap="round" stroke-linejoin="round"/></svg>', ne = {}, re = [], ie = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|^--/i;
          function se(t3, e3) {
            for (var n3 in e3) t3[n3] = e3[n3];
            return t3;
          }
          function oe(t3) {
            var e3 = t3.parentNode;
            e3 && e3.removeChild(t3);
          }
          function le(t3, e3, n3) {
            var r2, i2, s2, o2, l2 = arguments;
            if (e3 = se({}, e3), arguments.length > 3) for (n3 = [n3], r2 = 3; r2 < arguments.length; r2++) n3.push(l2[r2]);
            if (null != n3 && (e3.children = n3), null != t3 && null != t3.defaultProps) for (i2 in t3.defaultProps) void 0 === e3[i2] && (e3[i2] = t3.defaultProps[i2]);
            return o2 = e3.key, null != (s2 = e3.ref) && delete e3.ref, null != o2 && delete e3.key, ae(t3, e3, o2, s2);
          }
          function ae(t3, e3, n3, r2) {
            var i2 = { type: t3, props: e3, key: n3, ref: r2, __k: null, __p: null, __b: 0, __e: null, l: null, __c: null, constructor: void 0 };
            return Gt.vnode && Gt.vnode(i2), i2;
          }
          function ce(t3) {
            return t3.children;
          }
          function ue(t3, e3) {
            this.props = t3, this.context = e3;
          }
          function he(t3, e3) {
            if (null == e3) return t3.__p ? he(t3.__p, t3.__p.__k.indexOf(t3) + 1) : null;
            for (var n3; e3 < t3.__k.length; e3++) if (null != (n3 = t3.__k[e3]) && null != n3.__e) return n3.__e;
            return "function" == typeof t3.type ? he(t3) : null;
          }
          function de(t3) {
            var e3, n3;
            if (null != (t3 = t3.__p) && null != t3.__c) {
              for (t3.__e = t3.__c.base = null, e3 = 0; e3 < t3.__k.length; e3++) if (null != (n3 = t3.__k[e3]) && null != n3.__e) {
                t3.__e = t3.__c.base = n3.__e;
                break;
              }
              return de(t3);
            }
          }
          function pe(t3) {
            (!t3.__d && (t3.__d = true) && 1 === Kt.push(t3) || Zt !== Gt.debounceRendering) && (Zt = Gt.debounceRendering, (Gt.debounceRendering || Yt)(fe));
          }
          function fe() {
            var t3, e3, n3, r2, i2, s2, o2, l2;
            for (Kt.sort(function(t4, e4) {
              return e4.__v.__b - t4.__v.__b;
            }); t3 = Kt.pop(); ) t3.__d && (n3 = void 0, r2 = void 0, s2 = (i2 = (e3 = t3).__v).__e, o2 = e3.__P, l2 = e3.u, e3.u = false, o2 && (n3 = [], r2 = we(o2, i2, se({}, i2), e3.__n, void 0 !== o2.ownerSVGElement, null, n3, l2, null == s2 ? he(i2) : s2), xe(n3, i2), r2 != s2 && de(i2)));
          }
          function ge(t3, e3, n3, r2, i2, s2, o2, l2, a2) {
            var c2, u2, h2, d2, p2, f2, g2, b2 = n3 && n3.__k || re, m2 = b2.length;
            if (l2 == ne && (l2 = null != s2 ? s2[0] : m2 ? he(n3, 0) : null), c2 = 0, e3.__k = be(e3.__k, function(n4) {
              if (null != n4) {
                if (n4.__p = e3, n4.__b = e3.__b + 1, null === (h2 = b2[c2]) || h2 && n4.key == h2.key && n4.type === h2.type) b2[c2] = void 0;
                else for (u2 = 0; u2 < m2; u2++) {
                  if ((h2 = b2[u2]) && n4.key == h2.key && n4.type === h2.type) {
                    b2[u2] = void 0;
                    break;
                  }
                  h2 = null;
                }
                if (d2 = we(t3, n4, h2 = h2 || ne, r2, i2, s2, o2, null, l2, a2), (u2 = n4.ref) && h2.ref != u2 && (g2 || (g2 = [])).push(u2, n4.__c || d2, n4), null != d2) {
                  if (null == f2 && (f2 = d2), null != n4.l) d2 = n4.l, n4.l = null;
                  else if (s2 == h2 || d2 != l2 || null == d2.parentNode) {
                    t: if (null == l2 || l2.parentNode !== t3) t3.appendChild(d2);
                    else {
                      for (p2 = l2, u2 = 0; (p2 = p2.nextSibling) && u2 < m2; u2 += 2) if (p2 == d2) break t;
                      t3.insertBefore(d2, l2);
                    }
                    "option" == e3.type && (t3.value = "");
                  }
                  l2 = d2.nextSibling, "function" == typeof e3.type && (e3.l = d2);
                }
              }
              return c2++, n4;
            }), e3.__e = f2, null != s2 && "function" != typeof e3.type) for (c2 = s2.length; c2--; ) null != s2[c2] && oe(s2[c2]);
            for (c2 = m2; c2--; ) null != b2[c2] && _e(b2[c2], b2[c2]);
            if (g2) for (c2 = 0; c2 < g2.length; c2++) Ce(g2[c2], g2[++c2], g2[++c2]);
          }
          function be(t3, e3, n3) {
            if (null == n3 && (n3 = []), null == t3 || "boolean" == typeof t3) e3 && n3.push(e3(null));
            else if (Array.isArray(t3)) for (var r2 = 0; r2 < t3.length; r2++) be(t3[r2], e3, n3);
            else n3.push(e3 ? e3(function(t4) {
              if (null == t4 || "boolean" == typeof t4) return null;
              if ("string" == typeof t4 || "number" == typeof t4) return ae(null, t4, null, null);
              if (null != t4.__e || null != t4.__c) {
                var e4 = ae(t4.type, t4.props, t4.key, null);
                return e4.__e = t4.__e, e4;
              }
              return t4;
            }(t3)) : t3);
            return n3;
          }
          function me(t3, e3, n3) {
            "-" === e3[0] ? t3.setProperty(e3, n3) : t3[e3] = "number" == typeof n3 && false === ie.test(e3) ? n3 + "px" : null == n3 ? "" : n3;
          }
          function ve(t3, e3, n3, r2, i2) {
            var s2, o2, l2, a2, c2;
            if ("key" === (e3 = i2 ? "className" === e3 ? "class" : e3 : "class" === e3 ? "className" : e3) || "children" === e3) ;
            else if ("style" === e3) if (s2 = t3.style, "string" == typeof n3) s2.cssText = n3;
            else {
              if ("string" == typeof r2 && (s2.cssText = "", r2 = null), r2) for (o2 in r2) n3 && o2 in n3 || me(s2, o2, "");
              if (n3) for (l2 in n3) r2 && n3[l2] === r2[l2] || me(s2, l2, n3[l2]);
            }
            else "o" === e3[0] && "n" === e3[1] ? (a2 = e3 !== (e3 = e3.replace(/Capture$/, "")), c2 = e3.toLowerCase(), e3 = (c2 in t3 ? c2 : e3).slice(2), n3 ? (r2 || t3.addEventListener(e3, ye, a2), (t3.t || (t3.t = {}))[e3] = n3) : t3.removeEventListener(e3, ye, a2)) : "list" !== e3 && "tagName" !== e3 && "form" !== e3 && !i2 && e3 in t3 ? t3[e3] = null == n3 ? "" : n3 : "function" != typeof n3 && "dangerouslySetInnerHTML" !== e3 && (e3 !== (e3 = e3.replace(/^xlink:?/, "")) ? null == n3 || false === n3 ? t3.removeAttributeNS("http://www.w3.org/1999/xlink", e3.toLowerCase()) : t3.setAttributeNS("http://www.w3.org/1999/xlink", e3.toLowerCase(), n3) : null == n3 || false === n3 ? t3.removeAttribute(e3) : t3.setAttribute(e3, n3));
          }
          function ye(t3) {
            return this.t[t3.type](Gt.event ? Gt.event(t3) : t3);
          }
          function we(t3, e3, n3, r2, i2, s2, o2, l2, a2, c2) {
            var u2, h2, d2, p2, f2, g2, b2, m2, v2, y2, w2 = e3.type;
            if (void 0 !== e3.constructor) return null;
            (u2 = Gt.__b) && u2(e3);
            try {
              t: if ("function" == typeof w2) {
                if (m2 = e3.props, v2 = (u2 = w2.contextType) && r2[u2.__c], y2 = u2 ? v2 ? v2.props.value : u2.__p : r2, n3.__c ? b2 = (h2 = e3.__c = n3.__c).__p = h2.__E : ("prototype" in w2 && w2.prototype.render ? e3.__c = h2 = new w2(m2, y2) : (e3.__c = h2 = new ue(m2, y2), h2.constructor = w2, h2.render = Te), v2 && v2.sub(h2), h2.props = m2, h2.state || (h2.state = {}), h2.context = y2, h2.__n = r2, d2 = h2.__d = true, h2.__h = []), null == h2.__s && (h2.__s = h2.state), null != w2.getDerivedStateFromProps && se(h2.__s == h2.state ? h2.__s = se({}, h2.__s) : h2.__s, w2.getDerivedStateFromProps(m2, h2.__s)), d2) null == w2.getDerivedStateFromProps && null != h2.componentWillMount && h2.componentWillMount(), null != h2.componentDidMount && o2.push(h2);
                else {
                  if (null == w2.getDerivedStateFromProps && null == l2 && null != h2.componentWillReceiveProps && h2.componentWillReceiveProps(m2, y2), !l2 && null != h2.shouldComponentUpdate && false === h2.shouldComponentUpdate(m2, h2.__s, y2)) {
                    for (h2.props = m2, h2.state = h2.__s, h2.__d = false, h2.__v = e3, e3.__e = null != a2 ? a2 !== n3.__e ? a2 : n3.__e : null, e3.__k = n3.__k, u2 = 0; u2 < e3.__k.length; u2++) e3.__k[u2] && (e3.__k[u2].__p = e3);
                    break t;
                  }
                  null != h2.componentWillUpdate && h2.componentWillUpdate(m2, h2.__s, y2);
                }
                for (p2 = h2.props, f2 = h2.state, h2.context = y2, h2.props = m2, h2.state = h2.__s, (u2 = Gt.__r) && u2(e3), h2.__d = false, h2.__v = e3, h2.__P = t3, u2 = h2.render(h2.props, h2.state, h2.context), e3.__k = be(null != u2 && u2.type == ce && null == u2.key ? u2.props.children : u2), null != h2.getChildContext && (r2 = se(se({}, r2), h2.getChildContext())), d2 || null == h2.getSnapshotBeforeUpdate || (g2 = h2.getSnapshotBeforeUpdate(p2, f2)), ge(t3, e3, n3, r2, i2, s2, o2, a2, c2), h2.base = e3.__e; u2 = h2.__h.pop(); ) h2.__s && (h2.state = h2.__s), u2.call(h2);
                d2 || null == p2 || null == h2.componentDidUpdate || h2.componentDidUpdate(p2, f2, g2), b2 && (h2.__E = h2.__p = null);
              } else e3.__e = ke(n3.__e, e3, n3, r2, i2, s2, o2, c2);
              (u2 = Gt.diffed) && u2(e3);
            } catch (t4) {
              Gt.__e(t4, e3, n3);
            }
            return e3.__e;
          }
          function xe(t3, e3) {
            for (var n3; n3 = t3.pop(); ) try {
              n3.componentDidMount();
            } catch (t4) {
              Gt.__e(t4, n3.__v);
            }
            Gt.__c && Gt.__c(e3);
          }
          function ke(t3, e3, n3, r2, i2, s2, o2, l2) {
            var a2, c2, u2, h2, d2 = n3.props, p2 = e3.props;
            if (i2 = "svg" === e3.type || i2, null == t3 && null != s2) {
              for (a2 = 0; a2 < s2.length; a2++) if (null != (c2 = s2[a2]) && (null === e3.type ? 3 === c2.nodeType : c2.localName === e3.type)) {
                t3 = c2, s2[a2] = null;
                break;
              }
            }
            if (null == t3) {
              if (null === e3.type) return document.createTextNode(p2);
              t3 = i2 ? document.createElementNS("http://www.w3.org/2000/svg", e3.type) : document.createElement(e3.type), s2 = null;
            }
            return null === e3.type ? d2 !== p2 && (null != s2 && (s2[s2.indexOf(t3)] = null), t3.data = p2) : e3 !== n3 && (null != s2 && (s2 = re.slice.call(t3.childNodes)), u2 = (d2 = n3.props || ne).dangerouslySetInnerHTML, h2 = p2.dangerouslySetInnerHTML, l2 || (h2 || u2) && (h2 && u2 && h2.__html == u2.__html || (t3.innerHTML = h2 && h2.__html || "")), function(t4, e4, n4, r3, i3) {
              var s3;
              for (s3 in n4) s3 in e4 || ve(t4, s3, null, n4[s3], r3);
              for (s3 in e4) i3 && "function" != typeof e4[s3] || "value" === s3 || "checked" === s3 || n4[s3] === e4[s3] || ve(t4, s3, e4[s3], n4[s3], r3);
            }(t3, p2, d2, i2, l2), e3.__k = e3.props.children, h2 || ge(t3, e3, n3, r2, "foreignObject" !== e3.type && i2, s2, o2, ne, l2), l2 || ("value" in p2 && void 0 !== p2.value && p2.value !== t3.value && (t3.value = null == p2.value ? "" : p2.value), "checked" in p2 && void 0 !== p2.checked && p2.checked !== t3.checked && (t3.checked = p2.checked))), t3;
          }
          function Ce(t3, e3, n3) {
            try {
              "function" == typeof t3 ? t3(e3) : t3.current = e3;
            } catch (t4) {
              Gt.__e(t4, n3);
            }
          }
          function _e(t3, e3, n3) {
            var r2, i2, s2;
            if (Gt.unmount && Gt.unmount(t3), (r2 = t3.ref) && Ce(r2, null, e3), n3 || "function" == typeof t3.type || (n3 = null != (i2 = t3.__e)), t3.__e = t3.l = null, null != (r2 = t3.__c)) {
              if (r2.componentWillUnmount) try {
                r2.componentWillUnmount();
              } catch (t4) {
                Gt.__e(t4, e3);
              }
              r2.base = r2.__P = null;
            }
            if (r2 = t3.__k) for (s2 = 0; s2 < r2.length; s2++) r2[s2] && _e(r2[s2], e3, n3);
            null != i2 && oe(i2);
          }
          function Te(t3, e3, n3) {
            return this.constructor(t3, n3);
          }
          function Ne(t3, e3) {
            for (var n3 = 0; n3 < e3.length; n3++) {
              var r2 = e3[n3];
              r2.enumerable = r2.enumerable || false, r2.configurable = true, "value" in r2 && (r2.writable = true), Object.defineProperty(t3, r2.key, r2);
            }
          }
          function Ae() {
            return Ae = Object.assign || function(t3) {
              for (var e3 = arguments, n3 = 1; n3 < arguments.length; n3++) {
                var r2 = e3[n3];
                for (var i2 in r2) Object.prototype.hasOwnProperty.call(r2, i2) && (t3[i2] = r2[i2]);
              }
              return t3;
            }, Ae.apply(this, arguments);
          }
          Gt = {}, ue.prototype.setState = function(t3, e3) {
            var n3 = this.__s !== this.state && this.__s || (this.__s = se({}, this.state));
            ("function" != typeof t3 || (t3 = t3(n3, this.props))) && se(n3, t3), null != t3 && this.__v && (this.u = false, e3 && this.__h.push(e3), pe(this));
          }, ue.prototype.forceUpdate = function(t3) {
            this.__v && (t3 && this.__h.push(t3), this.u = true, pe(this));
          }, ue.prototype.render = ce, Kt = [], Yt = "function" == typeof Promise ? Promise.prototype.then.bind(Promise.resolve()) : setTimeout, Zt = Gt.debounceRendering, Gt.__e = function(t3, e3, n3) {
            for (var r2; e3 = e3.__p; ) if ((r2 = e3.__c) && !r2.__p) try {
              if (r2.constructor && null != r2.constructor.getDerivedStateFromError) r2.setState(r2.constructor.getDerivedStateFromError(t3));
              else {
                if (null == r2.componentDidCatch) continue;
                r2.componentDidCatch(t3);
              }
              return pe(r2.__E = r2);
            } catch (e4) {
              t3 = e4;
            }
            throw t3;
          }, Xt = ne;
          var Le = "(?:[-\\+]?\\d*\\.\\d+%?)|(?:[-\\+]?\\d+%?)", Se = "[\\s|\\(]+(" + Le + ")[,|\\s]+(" + Le + ")[,|\\s]+(" + Le + ")\\s*\\)?", Ee = "[\\s|\\(]+(" + Le + ")[,|\\s]+(" + Le + ")[,|\\s]+(" + Le + ")[,|\\s]+(" + Le + ")\\s*\\)?", je = new RegExp("rgb" + Se), qe = new RegExp("rgba" + Ee), Me = new RegExp("hsl" + Se), Be = new RegExp("hsla" + Ee), Oe = "^(?:#?|0x?)", Re = "([0-9a-fA-F]{1})", Pe = "([0-9a-fA-F]{2})", Ie = new RegExp(Oe + Re + Re + Re + "$"), De = new RegExp(Oe + Re + Re + Re + Re + "$"), ze = new RegExp(Oe + Pe + Pe + Pe + "$"), He = new RegExp(Oe + Pe + Pe + Pe + Pe + "$"), Fe = Math.log, Ue = Math.round, Ve = Math.floor;
          function We(t3, e3, n3) {
            return Math.min(Math.max(t3, e3), n3);
          }
          function $e(t3, e3) {
            var n3 = t3.indexOf("%") > -1, r2 = parseFloat(t3);
            return n3 ? e3 / 100 * r2 : r2;
          }
          function Ge(t3) {
            return parseInt(t3, 16);
          }
          function Ke(t3) {
            return t3.toString(16).padStart(2, "0");
          }
          var Ye = function() {
            function t3(t4, e4) {
              this.$ = { h: 0, s: 0, v: 0, a: 1 }, t4 && this.set(t4), this.onChange = e4, this.initialValue = Ae({}, this.$);
            }
            var e3, n3, r2 = t3.prototype;
            return r2.set = function(e4) {
              if ("string" == typeof e4) /^(?:#?|0x?)[0-9a-fA-F]{3,8}$/.test(e4) ? this.hexString = e4 : /^rgba?/.test(e4) ? this.rgbString = e4 : /^hsla?/.test(e4) && (this.hslString = e4);
              else {
                if ("object" != typeof e4) throw new Error("Invalid color value");
                e4 instanceof t3 ? this.hsva = e4.hsva : "r" in e4 && "g" in e4 && "b" in e4 ? this.rgb = e4 : "h" in e4 && "s" in e4 && "v" in e4 ? this.hsv = e4 : "h" in e4 && "s" in e4 && "l" in e4 ? this.hsl = e4 : "kelvin" in e4 && (this.kelvin = e4.kelvin);
              }
            }, r2.setChannel = function(t4, e4, n4) {
              var r3;
              this[t4] = Ae({}, this[t4], ((r3 = {})[e4] = n4, r3));
            }, r2.reset = function() {
              this.hsva = this.initialValue;
            }, r2.clone = function() {
              return new t3(this);
            }, r2.unbind = function() {
              this.onChange = void 0;
            }, t3.hsvToRgb = function(t4) {
              var e4 = t4.h / 60, n4 = t4.s / 100, r3 = t4.v / 100, i2 = Ve(e4), s2 = e4 - i2, o2 = r3 * (1 - n4), l2 = r3 * (1 - s2 * n4), a2 = r3 * (1 - (1 - s2) * n4), c2 = i2 % 6, u2 = [a2, r3, r3, l2, o2, o2][c2], h2 = [o2, o2, a2, r3, r3, l2][c2];
              return { r: We(255 * [r3, l2, o2, o2, a2, r3][c2], 0, 255), g: We(255 * u2, 0, 255), b: We(255 * h2, 0, 255) };
            }, t3.rgbToHsv = function(t4) {
              var e4 = t4.r / 255, n4 = t4.g / 255, r3 = t4.b / 255, i2 = Math.max(e4, n4, r3), s2 = Math.min(e4, n4, r3), o2 = i2 - s2, l2 = 0, a2 = i2, c2 = 0 === i2 ? 0 : o2 / i2;
              switch (i2) {
                case s2:
                  l2 = 0;
                  break;
                case e4:
                  l2 = (n4 - r3) / o2 + (n4 < r3 ? 6 : 0);
                  break;
                case n4:
                  l2 = (r3 - e4) / o2 + 2;
                  break;
                case r3:
                  l2 = (e4 - n4) / o2 + 4;
              }
              return { h: 60 * l2 % 360, s: We(100 * c2, 0, 100), v: We(100 * a2, 0, 100) };
            }, t3.hsvToHsl = function(t4) {
              var e4 = t4.s / 100, n4 = t4.v / 100, r3 = (2 - e4) * n4, i2 = r3 <= 1 ? r3 : 2 - r3, s2 = i2 < 1e-9 ? 0 : e4 * n4 / i2;
              return { h: t4.h, s: We(100 * s2, 0, 100), l: We(50 * r3, 0, 100) };
            }, t3.hslToHsv = function(t4) {
              var e4 = 2 * t4.l, n4 = t4.s * (e4 <= 100 ? e4 : 200 - e4) / 100, r3 = e4 + n4 < 1e-9 ? 0 : 2 * n4 / (e4 + n4);
              return { h: t4.h, s: We(100 * r3, 0, 100), v: We((e4 + n4) / 2, 0, 100) };
            }, t3.kelvinToRgb = function(t4) {
              var e4, n4, r3, i2 = t4 / 100;
              return i2 < 66 ? (e4 = 255, n4 = -155.25485562709179 - 0.44596950469579133 * (n4 = i2 - 2) + 104.49216199393888 * Fe(n4), r3 = i2 < 20 ? 0 : 0.8274096064007395 * (r3 = i2 - 10) - 254.76935184120902 + 115.67994401066147 * Fe(r3)) : (e4 = 351.97690566805693 + 0.114206453784165 * (e4 = i2 - 55) - 40.25366309332127 * Fe(e4), n4 = 325.4494125711974 + 0.07943456536662342 * (n4 = i2 - 50) - 28.0852963507957 * Fe(n4), r3 = 255), { r: We(Ve(e4), 0, 255), g: We(Ve(n4), 0, 255), b: We(Ve(r3), 0, 255) };
            }, t3.rgbToKelvin = function(e4) {
              for (var n4, r3 = e4.r, i2 = e4.b, s2 = 2e3, o2 = 4e4; o2 - s2 > 0.4; ) {
                n4 = 0.5 * (o2 + s2);
                var l2 = t3.kelvinToRgb(n4);
                l2.b / l2.r >= i2 / r3 ? o2 = n4 : s2 = n4;
              }
              return n4;
            }, e3 = t3, n3 = [{ key: "hsv", get: function() {
              var t4 = this.$;
              return { h: t4.h, s: t4.s, v: t4.v };
            }, set: function(t4) {
              var e4 = this.$;
              if (t4 = Ae({}, e4, t4), this.onChange) {
                var n4 = { h: false, v: false, s: false, a: false };
                for (var r3 in e4) n4[r3] = t4[r3] != e4[r3];
                this.$ = t4, (n4.h || n4.s || n4.v || n4.a) && this.onChange(this, n4);
              } else this.$ = t4;
            } }, { key: "hsva", get: function() {
              return Ae({}, this.$);
            }, set: function(t4) {
              this.hsv = t4;
            } }, { key: "hue", get: function() {
              return this.$.h;
            }, set: function(t4) {
              this.hsv = { h: t4 };
            } }, { key: "saturation", get: function() {
              return this.$.s;
            }, set: function(t4) {
              this.hsv = { s: t4 };
            } }, { key: "value", get: function() {
              return this.$.v;
            }, set: function(t4) {
              this.hsv = { v: t4 };
            } }, { key: "alpha", get: function() {
              return this.$.a;
            }, set: function(t4) {
              this.hsv = Ae({}, this.hsv, { a: t4 });
            } }, { key: "kelvin", get: function() {
              return t3.rgbToKelvin(this.rgb);
            }, set: function(e4) {
              this.rgb = t3.kelvinToRgb(e4);
            } }, { key: "red", get: function() {
              return this.rgb.r;
            }, set: function(t4) {
              this.rgb = Ae({}, this.rgb, { r: t4 });
            } }, { key: "green", get: function() {
              return this.rgb.g;
            }, set: function(t4) {
              this.rgb = Ae({}, this.rgb, { g: t4 });
            } }, { key: "blue", get: function() {
              return this.rgb.b;
            }, set: function(t4) {
              this.rgb = Ae({}, this.rgb, { b: t4 });
            } }, { key: "rgb", get: function() {
              var e4 = t3.hsvToRgb(this.$), n4 = e4.r, r3 = e4.g, i2 = e4.b;
              return { r: Ue(n4), g: Ue(r3), b: Ue(i2) };
            }, set: function(e4) {
              this.hsv = Ae({}, t3.rgbToHsv(e4), { a: void 0 === e4.a ? 1 : e4.a });
            } }, { key: "rgba", get: function() {
              return Ae({}, this.rgb, { a: this.alpha });
            }, set: function(t4) {
              this.rgb = t4;
            } }, { key: "hsl", get: function() {
              var e4 = t3.hsvToHsl(this.$), n4 = e4.h, r3 = e4.s, i2 = e4.l;
              return { h: Ue(n4), s: Ue(r3), l: Ue(i2) };
            }, set: function(e4) {
              this.hsv = Ae({}, t3.hslToHsv(e4), { a: void 0 === e4.a ? 1 : e4.a });
            } }, { key: "hsla", get: function() {
              return Ae({}, this.hsl, { a: this.alpha });
            }, set: function(t4) {
              this.hsl = t4;
            } }, { key: "rgbString", get: function() {
              var t4 = this.rgb;
              return "rgb(" + t4.r + ", " + t4.g + ", " + t4.b + ")";
            }, set: function(t4) {
              var e4, n4, r3, i2, s2 = 1;
              if ((e4 = je.exec(t4)) ? (n4 = $e(e4[1], 255), r3 = $e(e4[2], 255), i2 = $e(e4[3], 255)) : (e4 = qe.exec(t4)) && (n4 = $e(e4[1], 255), r3 = $e(e4[2], 255), i2 = $e(e4[3], 255), s2 = $e(e4[4], 1)), !e4) throw new Error("Invalid rgb string");
              this.rgb = { r: n4, g: r3, b: i2, a: s2 };
            } }, { key: "rgbaString", get: function() {
              var t4 = this.rgba;
              return "rgba(" + t4.r + ", " + t4.g + ", " + t4.b + ", " + t4.a + ")";
            }, set: function(t4) {
              this.rgbString = t4;
            } }, { key: "hexString", get: function() {
              var t4 = this.rgb;
              return "#" + Ke(t4.r) + Ke(t4.g) + Ke(t4.b);
            }, set: function(t4) {
              var e4, n4, r3, i2, s2 = 255;
              if ((e4 = Ie.exec(t4)) ? (n4 = 17 * Ge(e4[1]), r3 = 17 * Ge(e4[2]), i2 = 17 * Ge(e4[3])) : (e4 = De.exec(t4)) ? (n4 = 17 * Ge(e4[1]), r3 = 17 * Ge(e4[2]), i2 = 17 * Ge(e4[3]), s2 = 17 * Ge(e4[4])) : (e4 = ze.exec(t4)) ? (n4 = Ge(e4[1]), r3 = Ge(e4[2]), i2 = Ge(e4[3])) : (e4 = He.exec(t4)) && (n4 = Ge(e4[1]), r3 = Ge(e4[2]), i2 = Ge(e4[3]), s2 = Ge(e4[4])), !e4) throw new Error("Invalid hex string");
              this.rgb = { r: n4, g: r3, b: i2, a: s2 / 255 };
            } }, { key: "hex8String", get: function() {
              var t4 = this.rgba;
              return "#" + Ke(t4.r) + Ke(t4.g) + Ke(t4.b) + Ke(Ve(255 * t4.a));
            }, set: function(t4) {
              this.hexString = t4;
            } }, { key: "hslString", get: function() {
              var t4 = this.hsl;
              return "hsl(" + t4.h + ", " + t4.s + "%, " + t4.l + "%)";
            }, set: function(t4) {
              var e4, n4, r3, i2, s2 = 1;
              if ((e4 = Me.exec(t4)) ? (n4 = $e(e4[1], 360), r3 = $e(e4[2], 100), i2 = $e(e4[3], 100)) : (e4 = Be.exec(t4)) && (n4 = $e(e4[1], 360), r3 = $e(e4[2], 100), i2 = $e(e4[3], 100), s2 = $e(e4[4], 1)), !e4) throw new Error("Invalid hsl string");
              this.hsl = { h: n4, s: r3, l: i2, a: s2 };
            } }, { key: "hslaString", get: function() {
              var t4 = this.hsla;
              return "hsla(" + t4.h + ", " + t4.s + "%, " + t4.l + "%, " + t4.a + ")";
            }, set: function(t4) {
              this.hslString = t4;
            } }], n3 && Ne(e3.prototype, n3), t3;
          }();
          function Ze(t3) {
            var e3, n3 = t3.width, r2 = t3.sliderSize, i2 = t3.borderWidth, s2 = t3.handleRadius, o2 = t3.padding, l2 = t3.sliderShape, a2 = "horizontal" === t3.layoutDirection;
            return r2 = null != (e3 = r2) ? e3 : 2 * o2 + 2 * s2, "circle" === l2 ? { handleStart: t3.padding + t3.handleRadius, handleRange: n3 - 2 * o2 - 2 * s2, width: n3, height: n3, cx: n3 / 2, cy: n3 / 2, radius: n3 / 2 - i2 / 2 } : { handleStart: r2 / 2, handleRange: n3 - r2, radius: r2 / 2, x: 0, y: 0, width: a2 ? r2 : n3, height: a2 ? n3 : r2 };
          }
          var Xe, Je = 2 * Math.PI, Qe = function(t3, e3) {
            return (t3 % e3 + e3) % e3;
          }, tn = function(t3, e3) {
            return Math.sqrt(t3 * t3 + e3 * e3);
          };
          function en(t3) {
            return t3.width / 2 - t3.padding - t3.handleRadius - t3.borderWidth;
          }
          function nn(t3) {
            var e3 = t3.width / 2;
            return { width: t3.width, radius: e3 - t3.borderWidth, cx: e3, cy: e3 };
          }
          function rn(t3, e3, n3) {
            var r2 = t3.wheelAngle, i2 = t3.wheelDirection;
            return n3 && "clockwise" === i2 ? e3 = r2 + e3 : "clockwise" === i2 ? e3 = 360 - r2 + e3 : n3 && "anticlockwise" === i2 ? e3 = r2 + 180 - e3 : "anticlockwise" === i2 && (e3 = r2 - e3), Qe(e3, 360);
          }
          function sn(t3, e3, n3) {
            var r2 = nn(t3), i2 = r2.cx, s2 = r2.cy, o2 = en(t3);
            e3 = i2 - e3, n3 = s2 - n3;
            var l2 = rn(t3, Math.atan2(-n3, -e3) * (360 / Je)), a2 = Math.min(tn(e3, n3), o2);
            return { h: Math.round(l2), s: Math.round(100 / o2 * a2) };
          }
          function on(t3) {
            var e3 = t3.width, n3 = t3.boxHeight;
            return { width: e3, height: null != n3 ? n3 : e3, radius: t3.padding + t3.handleRadius };
          }
          function ln(t3, e3, n3) {
            var r2 = on(t3), i2 = r2.width, s2 = r2.height, o2 = r2.radius, l2 = (e3 - o2) / (i2 - 2 * o2) * 100, a2 = (n3 - o2) / (s2 - 2 * o2) * 100;
            return { s: Math.max(0, Math.min(l2, 100)), v: Math.max(0, Math.min(100 - a2, 100)) };
          }
          function an(t3) {
            Xe || (Xe = document.getElementsByTagName("base"));
            var e3 = window.navigator.userAgent, n3 = /^((?!chrome|android).)*safari/i.test(e3), r2 = /iPhone|iPod|iPad/i.test(e3), i2 = window.location;
            return (n3 || r2) && Xe.length > 0 ? i2.protocol + "//" + i2.host + i2.pathname + i2.search + t3 : t3;
          }
          function cn(t3, e3, n3, r2) {
            for (var i2 = 0; i2 < r2.length; i2++) {
              var s2 = r2[i2].x - e3, o2 = r2[i2].y - n3;
              if (Math.sqrt(s2 * s2 + o2 * o2) < t3.handleRadius) return i2;
            }
            return null;
          }
          function un(t3) {
            return { boxSizing: "border-box", border: t3.borderWidth + "px solid " + t3.borderColor };
          }
          function hn(t3, e3, n3) {
            return t3 + "-gradient(" + e3 + ", " + n3.map(function(t4) {
              var e4 = t4[0];
              return t4[1] + " " + e4 + "%";
            }).join(",") + ")";
          }
          function dn(t3) {
            return "string" == typeof t3 ? t3 : t3 + "px";
          }
          var pn = ["mousemove", "touchmove", "mouseup", "touchend"], fn = function(t3) {
            function e3(e4) {
              t3.call(this, e4), this.uid = (Math.random() + 1).toString(36).substring(5);
            }
            return t3 && (e3.__proto__ = t3), e3.prototype = Object.create(t3 && t3.prototype), e3.prototype.constructor = e3, e3.prototype.render = function(t4) {
              var e4 = this.handleEvent.bind(this), n3 = { onMouseDown: e4, ontouchstart: e4 }, r2 = "horizontal" === t4.layoutDirection, i2 = null === t4.margin ? t4.sliderMargin : t4.margin, s2 = { overflow: "visible", display: r2 ? "inline-block" : "block" };
              return t4.index > 0 && (s2[r2 ? "marginLeft" : "marginTop"] = i2), le(ce, null, t4.children(this.uid, n3, s2));
            }, e3.prototype.handleEvent = function(t4) {
              var e4 = this, n3 = this.props.onInput, r2 = this.base.getBoundingClientRect();
              t4.preventDefault();
              var i2 = t4.touches ? t4.changedTouches[0] : t4, s2 = i2.clientX - r2.left, o2 = i2.clientY - r2.top;
              switch (t4.type) {
                case "mousedown":
                case "touchstart":
                  false !== n3(s2, o2, 0) && pn.forEach(function(t5) {
                    document.addEventListener(t5, e4, { passive: false });
                  });
                  break;
                case "mousemove":
                case "touchmove":
                  n3(s2, o2, 1);
                  break;
                case "mouseup":
                case "touchend":
                  n3(s2, o2, 2), pn.forEach(function(t5) {
                    document.removeEventListener(t5, e4, { passive: false });
                  });
              }
            }, e3;
          }(ue);
          function gn(t3) {
            var e3 = t3.r, n3 = t3.url, r2 = e3, i2 = e3;
            return le("svg", { className: "IroHandle IroHandle--" + t3.index + " " + (t3.isActive ? "IroHandle--isActive" : ""), style: { "-webkit-tap-highlight-color": "rgba(0, 0, 0, 0);", transform: "translate(" + dn(t3.x) + ", " + dn(t3.y) + ")", willChange: "transform", top: dn(-e3), left: dn(-e3), width: dn(2 * e3), height: dn(2 * e3), position: "absolute", overflow: "visible" } }, n3 && le("use", Object.assign({ xlinkHref: an(n3) }, t3.props)), !n3 && le("circle", { cx: r2, cy: i2, r: e3, fill: "none", "stroke-width": 2, stroke: "#000" }), !n3 && le("circle", { cx: r2, cy: i2, r: e3 - 2, fill: t3.fill, "stroke-width": 2, stroke: "#fff" }));
          }
          function bn(t3) {
            var e3 = t3.activeIndex, n3 = void 0 !== e3 && e3 < t3.colors.length ? t3.colors[e3] : t3.color, r2 = Ze(t3), i2 = r2.width, s2 = r2.height, o2 = r2.radius, l2 = function(t4, e4) {
              var n4 = Ze(t4), r3 = n4.width, i3 = n4.height, s3 = n4.handleRange, o3 = n4.handleStart, l3 = "horizontal" === t4.layoutDirection, a3 = function(t5, e5) {
                var n5 = e5.hsva, r4 = e5.rgb;
                switch (t5.sliderType) {
                  case "red":
                    return r4.r / 2.55;
                  case "green":
                    return r4.g / 2.55;
                  case "blue":
                    return r4.b / 2.55;
                  case "alpha":
                    return 100 * n5.a;
                  case "kelvin":
                    var i4 = t5.minTemperature, s4 = t5.maxTemperature - i4, o4 = (e5.kelvin - i4) / s4 * 100;
                    return Math.max(0, Math.min(o4, 100));
                  case "hue":
                    return n5.h /= 3.6;
                  case "saturation":
                    return n5.s;
                  default:
                    return n5.v;
                }
              }(t4, e4), c2 = l3 ? r3 / 2 : i3 / 2, u2 = o3 + a3 / 100 * s3;
              return l3 && (u2 = -1 * u2 + s3 + 2 * o3), { x: l3 ? c2 : u2, y: l3 ? u2 : c2 };
            }(t3, n3), a2 = function(t4, e4) {
              var n4 = e4.hsv, r3 = e4.rgb;
              switch (t4.sliderType) {
                case "red":
                  return [[0, "rgb(0," + r3.g + "," + r3.b + ")"], [100, "rgb(255," + r3.g + "," + r3.b + ")"]];
                case "green":
                  return [[0, "rgb(" + r3.r + ",0," + r3.b + ")"], [100, "rgb(" + r3.r + ",255," + r3.b + ")"]];
                case "blue":
                  return [[0, "rgb(" + r3.r + "," + r3.g + ",0)"], [100, "rgb(" + r3.r + "," + r3.g + ",255)"]];
                case "alpha":
                  return [[0, "rgba(" + r3.r + "," + r3.g + "," + r3.b + ",0)"], [100, "rgb(" + r3.r + "," + r3.g + "," + r3.b + ")"]];
                case "kelvin":
                  for (var i3 = [], s3 = t4.minTemperature, o3 = t4.maxTemperature, l3 = o3 - s3, a3 = s3, c2 = 0; a3 < o3; a3 += l3 / 8, c2 += 1) {
                    var u2 = Ye.kelvinToRgb(a3), h2 = u2.r, d2 = u2.g, p2 = u2.b;
                    i3.push([12.5 * c2, "rgb(" + h2 + "," + d2 + "," + p2 + ")"]);
                  }
                  return i3;
                case "hue":
                  return [[0, "#f00"], [16.666, "#ff0"], [33.333, "#0f0"], [50, "#0ff"], [66.666, "#00f"], [83.333, "#f0f"], [100, "#f00"]];
                case "saturation":
                  var f2 = Ye.hsvToHsl({ h: n4.h, s: 0, v: n4.v }), g2 = Ye.hsvToHsl({ h: n4.h, s: 100, v: n4.v });
                  return [[0, "hsl(" + f2.h + "," + f2.s + "%," + f2.l + "%)"], [100, "hsl(" + g2.h + "," + g2.s + "%," + g2.l + "%)"]];
                default:
                  var b2 = Ye.hsvToHsl({ h: n4.h, s: n4.s, v: 100 });
                  return [[0, "#000"], [100, "hsl(" + b2.h + "," + b2.s + "%," + b2.l + "%)"]];
              }
            }(t3, n3);
            return le(fn, Object.assign({}, t3, { onInput: function(e4, r3, i3) {
              var s3 = function(t4, e5, n4) {
                var r4, i4 = Ze(t4), s4 = i4.handleRange, o3 = i4.handleStart;
                r4 = "horizontal" === t4.layoutDirection ? -1 * n4 + s4 + o3 : e5 - o3, r4 = Math.max(Math.min(r4, s4), 0);
                var l3 = Math.round(100 / s4 * r4);
                switch (t4.sliderType) {
                  case "kelvin":
                    var a3 = t4.minTemperature;
                    return a3 + (t4.maxTemperature - a3) * (l3 / 100);
                  case "alpha":
                    return l3 / 100;
                  case "hue":
                    return 3.6 * l3;
                  case "red":
                  case "blue":
                  case "green":
                    return 2.55 * l3;
                  default:
                    return l3;
                }
              }(t3, e4, r3);
              t3.parent.inputActive = true, n3[t3.sliderType] = s3, t3.onInput(i3, t3.id);
            } }), function(e4, r3, c2) {
              return le("div", Object.assign({}, r3, { className: "IroSlider", style: Object.assign({}, { position: "relative", width: dn(i2), height: dn(s2), borderRadius: dn(o2), background: "conic-gradient(#ccc 25%, #fff 0 50%, #ccc 0 75%, #fff 0)", backgroundSize: "8px 8px" }, c2) }), le("div", { className: "IroSliderGradient", style: Object.assign({}, { position: "absolute", top: 0, left: 0, width: "100%", height: "100%", borderRadius: dn(o2), background: hn("linear", "horizontal" === t3.layoutDirection ? "to top" : "to right", a2) }, un(t3)) }), le(gn, { isActive: true, index: n3.index, r: t3.handleRadius, url: t3.handleSvg, props: t3.handleProps, x: l2.x, y: l2.y }));
            });
          }
          function mn(t3) {
            var e3 = on(t3), n3 = e3.width, r2 = e3.height, i2 = e3.radius, s2 = t3.colors, o2 = t3.parent, l2 = t3.activeIndex, a2 = void 0 !== l2 && l2 < t3.colors.length ? t3.colors[l2] : t3.color, c2 = [[[0, "#fff"], [100, "hsl(" + a2.hue + ",100%,50%)"]], [[0, "rgba(0,0,0,0)"], [100, "#000"]]], u2 = s2.map(function(e4) {
              return function(t4, e5) {
                var n4 = on(t4), r3 = n4.width, i3 = n4.height, s3 = n4.radius, o3 = e5.hsv, l3 = s3, a3 = r3 - 2 * s3, c3 = i3 - 2 * s3;
                return { x: l3 + o3.s / 100 * a3, y: l3 + (c3 - o3.v / 100 * c3) };
              }(t3, e4);
            });
            return le(fn, Object.assign({}, t3, { onInput: function(e4, n4, r3) {
              if (0 === r3) {
                var i3 = cn(t3, e4, n4, u2);
                null !== i3 ? o2.setActiveColor(i3) : (o2.inputActive = true, a2.hsv = ln(t3, e4, n4), t3.onInput(r3, t3.id));
              } else 1 === r3 && (o2.inputActive = true, a2.hsv = ln(t3, e4, n4));
              t3.onInput(r3, t3.id);
            } }), function(e4, o3, l3) {
              return le("div", Object.assign({}, o3, { className: "IroBox", style: Object.assign({}, { width: dn(n3), height: dn(r2), position: "relative" }, l3) }), le("div", { className: "IroBox", style: Object.assign({}, { width: "100%", height: "100%", borderRadius: dn(i2) }, un(t3), { background: hn("linear", "to bottom", c2[1]) + "," + hn("linear", "to right", c2[0]) }) }), s2.filter(function(t4) {
                return t4 !== a2;
              }).map(function(e5) {
                return le(gn, { isActive: false, index: e5.index, fill: e5.hslString, r: t3.handleRadius, url: t3.handleSvg, props: t3.handleProps, x: u2[e5.index].x, y: u2[e5.index].y });
              }), le(gn, { isActive: true, index: a2.index, fill: a2.hslString, r: t3.activeHandleRadius || t3.handleRadius, url: t3.handleSvg, props: t3.handleProps, x: u2[a2.index].x, y: u2[a2.index].y }));
            });
          }
          function vn(t3) {
            var e3 = nn(t3).width, n3 = t3.colors, r2 = (t3.borderWidth, t3.parent), i2 = t3.color, s2 = i2.hsv, o2 = n3.map(function(e4) {
              return function(t4, e5) {
                var n4 = e5.hsv, r3 = nn(t4), i3 = r3.cx, s3 = r3.cy, o3 = en(t4), l3 = (180 + rn(t4, n4.h, true)) * (Je / 360), a2 = n4.s / 100 * o3, c2 = "clockwise" === t4.wheelDirection ? -1 : 1;
                return { x: i3 + a2 * Math.cos(l3) * c2, y: s3 + a2 * Math.sin(l3) * c2 };
              }(t3, e4);
            }), l2 = { position: "absolute", top: 0, left: 0, width: "100%", height: "100%", borderRadius: "50%", boxSizing: "border-box" };
            return le(fn, Object.assign({}, t3, { onInput: function(e4, n4, s3) {
              if (0 === s3) {
                if (!function(t4, e5, n5) {
                  var r3 = nn(t4), i3 = r3.cx, s4 = r3.cy, o3 = t4.width / 2;
                  return tn(i3 - e5, s4 - n5) < o3;
                }(t3, e4, n4)) return false;
                var l3 = cn(t3, e4, n4, o2);
                null !== l3 ? r2.setActiveColor(l3) : (r2.inputActive = true, i2.hsv = sn(t3, e4, n4), t3.onInput(s3, t3.id));
              } else 1 === s3 && (r2.inputActive = true, i2.hsv = sn(t3, e4, n4));
              t3.onInput(s3, t3.id);
            } }), function(r3, a2, c2) {
              return le("div", Object.assign({}, a2, { className: "IroWheel", style: Object.assign({}, { width: dn(e3), height: dn(e3), position: "relative" }, c2) }), le("div", { className: "IroWheelHue", style: Object.assign({}, l2, { transform: "rotateZ(" + (t3.wheelAngle + 90) + "deg)", background: "clockwise" === t3.wheelDirection ? "conic-gradient(red, yellow, lime, aqua, blue, magenta, red)" : "conic-gradient(red, magenta, blue, aqua, lime, yellow, red)" }) }), le("div", { className: "IroWheelSaturation", style: Object.assign({}, l2, { background: "radial-gradient(circle closest-side, #fff, transparent)" }) }), t3.wheelLightness && le("div", { className: "IroWheelLightness", style: Object.assign({}, l2, { background: "#000", opacity: 1 - s2.v / 100 }) }), le("div", { className: "IroWheelBorder", style: Object.assign({}, l2, un(t3)) }), n3.filter(function(t4) {
                return t4 !== i2;
              }).map(function(e4) {
                return le(gn, { isActive: false, index: e4.index, fill: e4.hslString, r: t3.handleRadius, url: t3.handleSvg, props: t3.handleProps, x: o2[e4.index].x, y: o2[e4.index].y });
              }), le(gn, { isActive: true, index: i2.index, fill: i2.hslString, r: t3.activeHandleRadius || t3.handleRadius, url: t3.handleSvg, props: t3.handleProps, x: o2[i2.index].x, y: o2[i2.index].y }));
            });
          }
          gn.defaultProps = { fill: "none", x: 0, y: 0, r: 8, url: null, props: { x: 0, y: 0 } }, bn.defaultProps = Object.assign({}, { sliderShape: "bar", sliderType: "value", minTemperature: 2200, maxTemperature: 11e3 });
          var yn = function(t3) {
            function e3(e4) {
              var n3 = this;
              t3.call(this, e4), this.colors = [], this.inputActive = false, this.events = {}, this.activeEvents = {}, this.deferredEvents = {}, this.id = e4.id, (e4.colors.length > 0 ? e4.colors : [e4.color]).forEach(function(t4) {
                return n3.addColor(t4);
              }), this.setActiveColor(0), this.state = Object.assign({}, e4, { color: this.color, colors: this.colors, layout: e4.layout });
            }
            return t3 && (e3.__proto__ = t3), e3.prototype = Object.create(t3 && t3.prototype), e3.prototype.constructor = e3, e3.prototype.addColor = function(t4, e4) {
              void 0 === e4 && (e4 = this.colors.length);
              var n3 = new Ye(t4, this.onColorChange.bind(this));
              this.colors.splice(e4, 0, n3), this.colors.forEach(function(t5, e5) {
                return t5.index = e5;
              }), this.state && this.setState({ colors: this.colors }), this.deferredEmit("color:init", n3);
            }, e3.prototype.removeColor = function(t4) {
              var e4 = this.colors.splice(t4, 1)[0];
              e4.unbind(), this.colors.forEach(function(t5, e5) {
                return t5.index = e5;
              }), this.state && this.setState({ colors: this.colors }), e4.index === this.color.index && this.setActiveColor(0), this.emit("color:remove", e4);
            }, e3.prototype.setActiveColor = function(t4) {
              this.color = this.colors[t4], this.state && this.setState({ color: this.color }), this.emit("color:setActive", this.color);
            }, e3.prototype.setColors = function(t4, e4) {
              var n3 = this;
              void 0 === e4 && (e4 = 0), this.colors.forEach(function(t5) {
                return t5.unbind();
              }), this.colors = [], t4.forEach(function(t5) {
                return n3.addColor(t5);
              }), this.setActiveColor(e4), this.emit("color:setAll", this.colors);
            }, e3.prototype.on = function(t4, e4) {
              var n3 = this, r2 = this.events;
              (Array.isArray(t4) ? t4 : [t4]).forEach(function(t5) {
                (r2[t5] || (r2[t5] = [])).push(e4), n3.deferredEvents[t5] && (n3.deferredEvents[t5].forEach(function(t6) {
                  e4.apply(null, t6);
                }), n3.deferredEvents[t5] = []);
              });
            }, e3.prototype.off = function(t4, e4) {
              var n3 = this;
              (Array.isArray(t4) ? t4 : [t4]).forEach(function(t5) {
                var r2 = n3.events[t5];
                r2 && r2.splice(r2.indexOf(e4), 1);
              });
            }, e3.prototype.emit = function(t4) {
              for (var e4 = this, n3 = [], r2 = arguments.length - 1; r2-- > 0; ) n3[r2] = arguments[r2 + 1];
              var i2 = this.activeEvents;
              i2.hasOwnProperty(t4) && i2[t4] || (i2[t4] = true, (this.events[t4] || []).forEach(function(t5) {
                return t5.apply(e4, n3);
              }), i2[t4] = false);
            }, e3.prototype.deferredEmit = function(t4) {
              for (var e4, n3 = [], r2 = arguments.length - 1; r2-- > 0; ) n3[r2] = arguments[r2 + 1];
              var i2 = this.deferredEvents;
              (e4 = this).emit.apply(e4, [t4].concat(n3)), (i2[t4] || (i2[t4] = [])).push(n3);
            }, e3.prototype.setOptions = function(t4) {
              this.setState(t4);
            }, e3.prototype.resize = function(t4) {
              this.setOptions({ width: t4 });
            }, e3.prototype.reset = function() {
              this.colors.forEach(function(t4) {
                return t4.reset();
              }), this.setState({ colors: this.colors });
            }, e3.prototype.onMount = function(t4) {
              this.el = t4, this.deferredEmit("mount", this);
            }, e3.prototype.onColorChange = function(t4, e4) {
              this.setState({ color: this.color }), this.inputActive && (this.inputActive = false, this.emit("input:change", t4, e4)), this.emit("color:change", t4, e4);
            }, e3.prototype.emitInputEvent = function(t4, e4) {
              0 === t4 ? this.emit("input:start", this.color, e4) : 1 === t4 ? this.emit("input:move", this.color, e4) : 2 === t4 && this.emit("input:end", this.color, e4);
            }, e3.prototype.render = function(t4, e4) {
              var n3 = this, r2 = e4.layout;
              return Array.isArray(r2) || (r2 = [{ component: vn }, { component: bn }], e4.transparency && r2.push({ component: bn, options: { sliderType: "alpha" } })), le("div", { class: "IroColorPicker", id: e4.id, style: { display: e4.display } }, r2.map(function(t5, r3) {
                var i2 = t5.component, s2 = t5.options;
                return le(i2, Object.assign({}, e4, s2, { ref: void 0, onInput: n3.emitInputEvent.bind(n3), parent: n3, index: r3 }));
              }));
            }, e3;
          }(ue);
          yn.defaultProps = Object.assign({}, { width: 300, height: 300, color: "#fff", colors: [], padding: 6, layoutDirection: "vertical", borderColor: "#fff", borderWidth: 0, handleRadius: 8, activeHandleRadius: null, handleSvg: null, handleProps: { x: 0, y: 0 }, wheelLightness: true, wheelAngle: 0, wheelDirection: "anticlockwise", sliderSize: null, sliderMargin: 12, boxHeight: null }, { colors: [], display: "block", id: null, layout: "default", margin: null });
          var wn, xn, kn, Cn = (xn = function(t3, e3) {
            var n3, r2 = document.createElement("div");
            function i2() {
              var e4 = t3 instanceof Element ? t3 : document.querySelector(t3);
              e4.appendChild(n3.base), n3.onMount(e4);
            }
            return function(t4, e4, n4) {
              var r3, i3, s2;
              Gt.__p && Gt.__p(t4, e4), i3 = (r3 = n4 === Xt) ? null : e4.__k, t4 = le(ce, null, [t4]), s2 = [], we(e4, e4.__k = t4, i3 || ne, ne, void 0 !== e4.ownerSVGElement, i3 ? null : re.slice.call(e4.childNodes), s2, false, ne, r3), xe(s2, t4);
            }(le(wn, Object.assign({}, { ref: function(t4) {
              return n3 = t4;
            } }, e3)), r2), "loading" !== document.readyState ? i2() : document.addEventListener("DOMContentLoaded", i2), n3;
          }, xn.prototype = (wn = yn).prototype, Object.assign(xn, wn), xn.__component = wn, xn);
          !function(t3) {
            var e3;
            t3.version = "5.5.2", t3.Color = Ye, t3.ColorPicker = Cn, (e3 = t3.ui || (t3.ui = {})).h = le, e3.ComponentBase = fn, e3.Handle = gn, e3.Slider = bn, e3.Wheel = vn, e3.Box = mn;
          }(kn || (kn = {}));
          var _n = kn;
          const Tn = [{ icon: '<?xml version="1.0" encoding="UTF-8"?><svg width="16" height="16" viewBox="0 0 48 48" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M43 11L16.875 37L5 25.1818" stroke="#008a00" stroke-width="4" stroke-linecap="round" stroke-linejoin="round"/></svg>', label: "save" }, { icon: '<?xml version="1.0" encoding="UTF-8"?><svg width="16" height="16" viewBox="0 0 48 48" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M8 8L40 40" stroke="#db3700" stroke-width="4" stroke-linecap="round" stroke-linejoin="round"/><path d="M8 40L40 8" stroke="#db3700" stroke-width="4" stroke-linecap="round" stroke-linejoin="round"/></svg>', label: "cancel" }], Nn = [{ value: "#000000", describe: "black" }, { value: "#4d4d4d", describe: "dimGrey" }, { value: "#808080", describe: "grey" }, { value: "#e6e6e6", describe: "lightGrey" }, { value: "#ffffff", describe: "white" }, { value: "#ff0000", describe: "red" }, { value: "#ffa500", describe: "orange" }, { value: "#ffff00", describe: "yellow" }, { value: "#99e64d", describe: "lightGreen" }, { value: "#008000", describe: "green" }, { value: "#7fffd4", describe: "aquamarine" }, { value: "#40e0d0", describe: "turquoise" }, { value: "#4d99e6", describe: "lightBlue" }, { value: "#0000ff", describe: "blue" }, { value: "#800080", describe: "purple" }];
          var An, Ln = class {
            constructor(t3, e3) {
              this.tableMenus = t3, this.options = e3, this.attrs = Object.assign({}, e3.attribute), this.borderForm = [], this.saveButton = null, this.form = this.createPropertiesForm(e3);
            }
            checkBtnsAction(t3) {
              "save" === t3 && this.saveAction(this.options.type), this.removePropertiesForm(), this.tableMenus.showMenus(), this.tableMenus.updateMenus();
            }
            createActionBtns(t3, e3) {
              const n3 = this.getUseLanguage(), r2 = document.createElement("div"), i2 = document.createDocumentFragment();
              r2.classList.add("properties-form-action-row");
              for (const { icon: t4, label: r3 } of Tn) {
                const s2 = document.createElement("button"), o2 = document.createElement("span");
                if (o2.innerHTML = t4, s2.appendChild(o2), I(s2, { label: r3 }), e3) {
                  const t5 = document.createElement("span");
                  t5.innerText = n3(r3), s2.appendChild(t5);
                }
                i2.appendChild(s2);
              }
              return r2.addEventListener("click", (e4) => t3(e4)), r2.appendChild(i2), r2;
            }
            createCheckBtns(t3) {
              const { menus: e3, propertyName: n3 } = t3, r2 = document.createElement("div"), i2 = document.createDocumentFragment();
              for (const { icon: t4, describe: r3, align: s2 } of e3) {
                const e4 = document.createElement("span");
                e4.innerHTML = t4, e4.setAttribute("data-align", s2), e4.classList.add("ql-table-tooltip-hover"), this.options.attribute[n3] === s2 && e4.classList.add("ql-table-btns-checked");
                const o2 = C(r3);
                e4.appendChild(o2), i2.appendChild(e4);
              }
              return r2.classList.add("ql-table-check-container"), r2.appendChild(i2), r2.addEventListener("click", (t4) => {
                const e4 = t4.target.closest("span.ql-table-tooltip-hover"), i3 = e4.getAttribute("data-align");
                this.switchButton(r2, e4), this.setAttribute(n3, i3);
              }), r2;
            }
            createColorContainer(t3) {
              const e3 = document.createElement("div");
              e3.classList.add("ql-table-color-container");
              const n3 = this.createColorInput(t3), r2 = this.createColorPicker(t3);
              return e3.appendChild(n3), e3.appendChild(r2), e3;
            }
            createColorInput(t3) {
              const e3 = this.createInput(t3);
              return e3.classList.add("label-field-view-color"), e3;
            }
            createColorList(t3) {
              const e3 = this.getUseLanguage(), n3 = document.createElement("ul"), r2 = document.createDocumentFragment();
              n3.classList.add("color-list");
              for (const { value: t4, describe: n4 } of Nn) {
                const i2 = document.createElement("li"), s2 = C(e3(n4));
                i2.setAttribute("data-color", t4), i2.classList.add("ql-table-tooltip-hover"), D(i2, { "background-color": t4 }), i2.appendChild(s2), r2.appendChild(i2);
              }
              return n3.appendChild(r2), n3.addEventListener("click", (e4) => {
                const r3 = e4.target, i2 = ("DIV" === r3.tagName ? r3.parentElement : r3).getAttribute("data-color");
                this.setAttribute(t3, i2, n3), this.updateInputStatus(n3, false, true);
              }), n3;
            }
            createColorPicker(t3) {
              const { propertyName: e3, value: n3 } = t3, r2 = document.createElement("span"), i2 = document.createElement("span");
              r2.classList.add("color-picker"), i2.classList.add("color-button"), n3 ? D(i2, { "background-color": n3 }) : i2.classList.add("color-unselected");
              const s2 = this.createColorPickerSelect(e3);
              return i2.addEventListener("click", () => {
                this.toggleHidden(s2);
                const t4 = this.getColorClosest(r2), e4 = null == t4 ? void 0 : t4.querySelector(".property-input");
                this.updateSelectedStatus(s2, null == e4 ? void 0 : e4.value, "color");
              }), r2.appendChild(i2), r2.appendChild(s2), r2;
            }
            createColorPickerIcon(t3, e3, n3) {
              const r2 = document.createElement("div"), i2 = document.createElement("span"), s2 = document.createElement("button");
              return i2.innerHTML = t3, s2.innerText = e3, r2.classList.add("erase-container"), r2.appendChild(i2), r2.appendChild(s2), r2.addEventListener("click", n3), r2;
            }
            createColorPickerSelect(t3) {
              const e3 = this.getUseLanguage(), n3 = document.createElement("div"), r2 = this.createColorPickerIcon('<?xml version="1.0" encoding="UTF-8"?><svg width="16" height="16" viewBox="0 0 48 48" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M4 42H44" stroke="#333" stroke-width="4" stroke-linecap="round" stroke-linejoin="round"/><path d="M31 4L7 28L13 34H21L41 14L31 4Z" fill="none" stroke="#333" stroke-width="4" stroke-linecap="round" stroke-linejoin="round"/></svg>', e3("removeColor"), () => {
                this.setAttribute(t3, "", n3), this.updateInputStatus(n3, false, true);
              }), i2 = this.createColorList(t3), s2 = this.createPalette(t3, e3, n3);
              return n3.classList.add("color-picker-select", "ql-hidden"), n3.appendChild(r2), n3.appendChild(i2), n3.appendChild(s2), n3;
            }
            createDropdown(t3, e3) {
              const n3 = document.createElement("div"), r2 = document.createElement("span"), i2 = document.createElement("span");
              return "dropdown" === e3 && (i2.innerHTML = ee, i2.classList.add("ql-table-dropdown-icon")), t3 && (r2.innerText = t3), n3.classList.add("ql-table-dropdown-properties"), r2.classList.add("ql-table-dropdown-text"), n3.appendChild(r2), "dropdown" === e3 && n3.appendChild(i2), { dropdown: n3, dropText: r2 };
            }
            createInput(t3) {
              const { attribute: e3, message: n3, propertyName: r2, value: i2, valid: s2 } = t3, { placeholder: o2 = "" } = e3, l2 = document.createElement("div"), a2 = document.createElement("div"), c2 = document.createElement("label"), u2 = document.createElement("input"), h2 = document.createElement("div");
              return l2.classList.add("label-field-view"), a2.classList.add("label-field-view-input-wrapper"), c2.innerText = o2, I(u2, e3), u2.classList.add("property-input"), u2.value = i2, u2.addEventListener("input", (t4) => {
                const e4 = t4.target.value;
                s2 && this.switchHidden(h2, s2(e4)), this.updateInputStatus(a2, s2 && !s2(e4)), this.setAttribute(r2, e4, l2);
              }), h2.classList.add("label-field-view-status", "ql-hidden"), n3 && (h2.innerText = n3), a2.appendChild(u2), a2.appendChild(c2), l2.appendChild(a2), s2 && l2.appendChild(h2), l2;
            }
            createList(t3, e3) {
              const { options: n3, propertyName: r2 } = t3;
              if (!n3.length) return null;
              const i2 = document.createElement("ul");
              for (const t4 of n3) {
                const e4 = document.createElement("li");
                e4.innerText = t4, i2.appendChild(e4);
              }
              return i2.classList.add("ql-table-dropdown-list", "ql-hidden"), i2.addEventListener("click", (t4) => {
                const n4 = t4.target.innerText;
                e3.innerText = n4, this.toggleBorderDisabled(n4), this.setAttribute(r2, n4);
              }), i2;
            }
            createPalette(t3, e3, n3) {
              const r2 = document.createElement("div"), i2 = document.createElement("div"), s2 = document.createElement("div"), o2 = document.createElement("div"), l2 = new _n.ColorPicker(o2, { width: 110, layout: [{ component: _n.ui.Wheel, options: {} }] }), a2 = this.createColorPickerIcon('<?xml version="1.0" encoding="UTF-8"?><svg width="16" height="16" viewBox="0 0 48 48" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M24 44C29.9601 44 26.3359 35.136 30 31C33.1264 27.4709 44 29.0856 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z" fill="none" stroke="#333" stroke-width="4" stroke-linejoin="round"/><path d="M28 17C29.6569 17 31 15.6569 31 14C31 12.3431 29.6569 11 28 11C26.3431 11 25 12.3431 25 14C25 15.6569 26.3431 17 28 17Z" fill="none" stroke="#333" stroke-width="4" stroke-linejoin="round"/><path d="M16 21C17.6569 21 19 19.6569 19 18C19 16.3431 17.6569 15 16 15C14.3431 15 13 16.3431 13 18C13 19.6569 14.3431 21 16 21Z" fill="none" stroke="#333" stroke-width="4" stroke-linejoin="round"/><path d="M17 34C18.6569 34 20 32.6569 20 31C20 29.3431 18.6569 28 17 28C15.3431 28 14 29.3431 14 31C14 32.6569 15.3431 34 17 34Z" fill="none" stroke="#333" stroke-width="4" stroke-linejoin="round"/></svg>', e3("colorPicker"), () => this.toggleHidden(i2)), c2 = this.createActionBtns((e4) => {
                const s3 = e4.target.closest("button");
                s3 && ("save" === s3.getAttribute("label") && (this.setAttribute(t3, l2.color.hexString, n3), this.updateInputStatus(r2, false, true)), i2.classList.add("ql-hidden"), n3.classList.add("ql-hidden"));
              }, false);
              return i2.classList.add("color-picker-palette", "ql-hidden"), s2.classList.add("color-picker-wrap"), o2.classList.add("iro-container"), s2.appendChild(o2), s2.appendChild(c2), i2.appendChild(s2), r2.appendChild(a2), r2.appendChild(i2), r2;
            }
            createProperty(t3) {
              const { content: e3, children: n3 } = t3, r2 = this.getUseLanguage(), i2 = document.createElement("div"), s2 = document.createElement("label");
              s2.innerText = e3, s2.classList.add("ql-table-dropdown-label"), i2.classList.add("properties-form-row"), 1 === n3.length && i2.classList.add("properties-form-row-full"), i2.appendChild(s2);
              for (const t4 of n3) {
                const n4 = this.createPropertyChild(t4);
                n4 && i2.appendChild(n4), n4 && e3 === r2("border") && this.borderForm.push(n4);
              }
              return i2;
            }
            createPropertyChild(t3) {
              const { category: e3, value: n3 } = t3;
              switch (e3) {
                case "dropdown":
                  const { dropdown: r2, dropText: i2 } = this.createDropdown(n3, e3), s2 = this.createList(t3, i2);
                  return r2.appendChild(s2), r2.addEventListener("click", () => {
                    this.toggleHidden(s2), this.updateSelectedStatus(r2, i2.innerText, "dropdown");
                  }), r2;
                case "color":
                  return this.createColorContainer(t3);
                case "menus":
                  return this.createCheckBtns(t3);
                case "input":
                  return this.createInput(t3);
              }
            }
            createPropertiesForm(t3) {
              const e3 = this.getUseLanguage(), { title: n3, properties: r2 } = function({ type: t4, attribute: e4 }, n4) {
                return "table" === t4 ? function(t5, e5) {
                  return { title: e5("tblProps"), properties: [{ content: e5("border"), children: [{ category: "dropdown", propertyName: "border-style", value: t5["border-style"], options: ["dashed", "dotted", "double", "groove", "inset", "none", "outset", "ridge", "solid"] }, { category: "color", propertyName: "border-color", value: t5["border-color"], attribute: { type: "text", placeholder: e5("color") }, valid: R, message: e5("colorMsg") }, { category: "input", propertyName: "border-width", value: k(t5["border-width"]), attribute: { type: "text", placeholder: e5("width") }, valid: P, message: e5("dimsMsg") }] }, { content: e5("background"), children: [{ category: "color", propertyName: "background-color", value: t5["background-color"], attribute: { type: "text", placeholder: e5("color") }, valid: R, message: e5("colorMsg") }] }, { content: e5("dimsAlm"), children: [{ category: "input", propertyName: "width", value: k(t5.width), attribute: { type: "text", placeholder: e5("width") }, valid: P, message: e5("dimsMsg") }, { category: "input", propertyName: "height", value: k(t5.height), attribute: { type: "text", placeholder: e5("height") }, valid: P, message: e5("dimsMsg") }, { category: "menus", propertyName: "align", value: t5.align, menus: [{ icon: l, describe: e5("alTblL"), align: "left" }, { icon: o, describe: e5("tblC"), align: "center" }, { icon: a, describe: e5("alTblR"), align: "right" }] }] }] };
                }(e4, n4) : function(t5, e5) {
                  return { title: e5("cellProps"), properties: [{ content: e5("border"), children: [{ category: "dropdown", propertyName: "border-style", value: t5["border-style"], options: ["dashed", "dotted", "double", "groove", "inset", "none", "outset", "ridge", "solid"] }, { category: "color", propertyName: "border-color", value: t5["border-color"], attribute: { type: "text", placeholder: e5("color") }, valid: R, message: e5("colorMsg") }, { category: "input", propertyName: "border-width", value: k(t5["border-width"]), attribute: { type: "text", placeholder: e5("width") }, valid: P, message: e5("dimsMsg") }] }, { content: e5("background"), children: [{ category: "color", propertyName: "background-color", value: t5["background-color"], attribute: { type: "text", placeholder: e5("color") }, valid: R, message: e5("colorMsg") }] }, { content: e5("dims"), children: [{ category: "input", propertyName: "width", value: k(t5.width), attribute: { type: "text", placeholder: e5("width") }, valid: P, message: e5("dimsMsg") }, { category: "input", propertyName: "height", value: k(t5.height), attribute: { type: "text", placeholder: e5("height") }, valid: P, message: e5("dimsMsg") }, { category: "input", propertyName: "padding", value: k(t5.padding), attribute: { type: "text", placeholder: e5("padding") }, valid: P, message: e5("dimsMsg") }] }, { content: e5("tblCellTxtAlm"), children: [{ category: "menus", propertyName: "text-align", value: t5["text-align"], menus: [{ icon: l, describe: e5("alCellTxtL"), align: "left" }, { icon: o, describe: e5("alCellTxtC"), align: "center" }, { icon: a, describe: e5("alCellTxtR"), align: "right" }, { icon: '<?xml version="1.0" encoding="UTF-8"?><svg width="16" height="16" viewBox="0 0 48 48" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M42 19H6" stroke="#333" stroke-width="4" stroke-linecap="round" stroke-linejoin="round"/><path d="M42 9H6" stroke="#333" stroke-width="4" stroke-linecap="round" stroke-linejoin="round"/><path d="M42 29H6" stroke="#333" stroke-width="4" stroke-linecap="round" stroke-linejoin="round"/><path d="M42 39H6" stroke="#333" stroke-width="4" stroke-linecap="round" stroke-linejoin="round"/></svg>', describe: e5("jusfCellTxt"), align: "justify" }] }, { category: "menus", propertyName: "vertical-align", value: t5["vertical-align"], menus: [{ icon: '<?xml version="1.0" encoding="UTF-8"?><svg width="16" height="16" viewBox="0 0 48 48" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M6 36.3056H42" stroke="#333" stroke-width="4" stroke-linecap="round" stroke-linejoin="round"/><path d="M6 42H42" stroke="#333" stroke-width="4" stroke-linecap="round" stroke-linejoin="round"/><path d="M30 12L24 6L18 12V12" stroke="#333" stroke-width="4" stroke-linecap="round" stroke-linejoin="round"/><path d="M24 6V29" stroke="#333" stroke-width="4" stroke-linecap="round" stroke-linejoin="round"/></svg>', describe: e5("alCellTxtT"), align: "top" }, { icon: '<?xml version="1.0" encoding="UTF-8"?><svg width="16" height="16" viewBox="0 0 48 48" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M18 36L24 30L30 36" stroke="#333" stroke-width="4" stroke-linecap="round" stroke-linejoin="round"/><path d="M23.9999 30.9998V43.9998" stroke="#333" stroke-width="4" stroke-linecap="round" stroke-linejoin="round"/><path d="M18 12L24 18L30 12" stroke="#333" stroke-width="4" stroke-linecap="round" stroke-linejoin="round"/><path d="M23.9999 17.0002V4.00022" stroke="#333" stroke-width="4" stroke-linecap="round" stroke-linejoin="round"/><path d="M6 24.0004H42" stroke="#333" stroke-width="4" stroke-linecap="round" stroke-linejoin="round"/></svg>', describe: e5("alCellTxtM"), align: "middle" }, { icon: '<?xml version="1.0" encoding="UTF-8"?><svg width="16" height="16" viewBox="0 0 48 48" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M6 36.3056H42" stroke="#333" stroke-width="4" stroke-linecap="round" stroke-linejoin="round"/><path d="M6 42H42" stroke="#333" stroke-width="4" stroke-linecap="round" stroke-linejoin="round"/><path d="M30 23L24 29L18 23V23" stroke="#333" stroke-width="4" stroke-linecap="round" stroke-linejoin="round"/><path d="M24 6V29" stroke="#333" stroke-width="4" stroke-linecap="round" stroke-linejoin="round"/></svg>', describe: e5("alCellTxtB"), align: "bottom" }] }] }] };
                }(e4, n4);
              }(t3, e3), i2 = document.createElement("div");
              i2.classList.add("ql-table-properties-form");
              const s2 = document.createElement("h2"), c2 = this.createActionBtns((t4) => {
                const e4 = t4.target.closest("button");
                e4 && this.checkBtnsAction(e4.getAttribute("label"));
              }, true);
              s2.innerText = n3, s2.classList.add("properties-form-header"), i2.appendChild(s2);
              for (const t4 of r2) {
                const e4 = this.createProperty(t4);
                i2.appendChild(e4);
              }
              return i2.appendChild(c2), this.setBorderDisabled(), this.tableMenus.quill.container.appendChild(i2), this.updatePropertiesForm(i2, t3.type), this.setSaveButton(c2), i2.addEventListener("click", (t4) => {
                const e4 = t4.target;
                this.hiddenSelectList(e4);
              }), i2;
            }
            getCellStyle(t3, e3) {
              const n3 = (t3.getAttribute("style") || "").split(";").filter((t4) => t4.trim()).reduce((t4, e4) => {
                const n4 = e4.split(":");
                return Object.assign(Object.assign({}, t4), { [n4[0].trim()]: n4[1].trim() });
              }, {});
              return Object.assign(n3, e3), Object.keys(n3).reduce((t4, e4) => t4 + `${e4}: ${n3[e4]}; `, "");
            }
            getColorClosest(t3) {
              return L(t3, ".ql-table-color-container");
            }
            getComputeBounds(t3) {
              if ("table" === t3) {
                const { table: t4 } = this.tableMenus, [e3, n3] = this.tableMenus.getCorrectBounds(t4);
                return e3.bottom > n3.bottom ? Object.assign(Object.assign({}, e3), { bottom: n3.height }) : e3;
              }
              {
                const { computeBounds: t4 } = this.tableMenus.getSelectedTdsInfo();
                return t4;
              }
            }
            getDiffProperties() {
              const t3 = this.attrs, e3 = this.options.attribute;
              return Object.keys(t3).reduce((n3, r2) => (t3[r2] !== e3[r2] && (n3[r2] = function(t4) {
                return !(!t4.endsWith("width") && !t4.endsWith("height"));
              }(r2) ? function(t4) {
                if (!t4) return t4;
                const e4 = t4.slice(-2);
                return "px" !== e4 && "em" !== e4 ? t4 + "px" : t4;
              }(t3[r2]) : t3[r2]), n3), {});
            }
            getUseLanguage() {
              const { language: t3 } = this.tableMenus.tableBetter;
              return t3.useLanguage.bind(t3);
            }
            getViewportSize() {
              return { viewWidth: document.documentElement.clientWidth, viewHeight: document.documentElement.clientHeight };
            }
            hiddenSelectList(t3) {
              var e3, n3;
              const r2 = ".ql-table-dropdown-properties", i2 = ".color-picker", s2 = this.form.querySelectorAll(".ql-table-dropdown-list"), o2 = this.form.querySelectorAll(".color-picker-select");
              for (const l2 of [...s2, ...o2]) (null === (e3 = l2.closest(r2)) || void 0 === e3 ? void 0 : e3.isEqualNode(t3.closest(r2))) || (null === (n3 = l2.closest(i2)) || void 0 === n3 ? void 0 : n3.isEqualNode(t3.closest(i2))) || l2.classList.add("ql-hidden");
            }
            removePropertiesForm() {
              this.form.remove(), this.borderForm = [];
            }
            saveAction(t3) {
              "table" === t3 ? this.saveTableAction() : this.saveCellAction();
            }
            saveCellAction() {
              const { selectedTds: t3 } = this.tableMenus.tableBetter.cellSelection, { quill: n3, table: r2 } = this.tableMenus, i2 = e2().find(r2).colgroup(), s2 = this.getDiffProperties(), o2 = parseFloat(s2.width), l2 = s2["text-align"];
              l2 && delete s2["text-align"];
              const a2 = [];
              if (i2 && o2) {
                delete s2.width;
                const { computeBounds: t4 } = this.tableMenus.getSelectedTdsInfo(), e3 = E(t4, r2, n3.container);
                for (const t5 of e3) t5.setAttribute("width", `${o2}`);
              }
              for (const n4 of t3) {
                const t4 = e2().find(n4), r3 = t4.statics.blotName, i3 = t4.formats()[r3], o3 = this.getCellStyle(n4, s2);
                if (l2) {
                  const e3 = "left" === l2 ? "" : l2;
                  t4.children.forEach((t5) => {
                    t5.statics.blotName === m.blotName ? t5.children.forEach((t6) => {
                      t6.format && t6.format("align", e3);
                    }) : t5.format("align", e3);
                  });
                }
                const c2 = t4.replaceWith(r3, Object.assign(Object.assign({}, i3), { style: o3 }));
                a2.push(c2.domNode);
              }
              this.tableMenus.tableBetter.cellSelection.setSelectedTds(a2);
            }
            saveTableAction() {
              var t3;
              const { table: n3, tableBetter: r2 } = this.tableMenus, i2 = null === (t3 = e2().find(n3).temporary()) || void 0 === t3 ? void 0 : t3.domNode, s2 = n3.querySelector("td"), o2 = this.getDiffProperties(), l2 = o2.align;
              switch (delete o2.align, l2) {
                case "center":
                  Object.assign(o2, { margin: "0 auto" });
                  break;
                case "left":
                  Object.assign(o2, { margin: "" });
                  break;
                case "right":
                  Object.assign(o2, { "margin-left": "auto", "margin-right": "" });
              }
              D(i2 || n3, o2), r2.cellSelection.setSelected(s2);
            }
            setAttribute(t3, e3, n3) {
              this.attrs[t3] = e3, t3.includes("-color") && this.updateSelectColor(this.getColorClosest(n3), e3);
            }
            setBorderDisabled() {
              const [t3] = this.borderForm, e3 = t3.querySelector(".ql-table-dropdown-text").innerText;
              this.toggleBorderDisabled(e3);
            }
            setSaveButton(t3) {
              const e3 = t3.querySelector('button[label="save"]');
              this.saveButton = e3;
            }
            setSaveButtonDisabled(t3) {
              this.saveButton && (t3 ? this.saveButton.setAttribute("disabled", "true") : this.saveButton.removeAttribute("disabled"));
            }
            switchButton(t3, e3) {
              const n3 = t3.querySelectorAll("span.ql-table-tooltip-hover");
              for (const t4 of n3) t4.classList.remove("ql-table-btns-checked");
              e3.classList.add("ql-table-btns-checked");
            }
            switchHidden(t3, e3) {
              e3 ? t3.classList.add("ql-hidden") : t3.classList.remove("ql-hidden");
            }
            toggleBorderDisabled(t3) {
              const [, e3, n3] = this.borderForm;
              "none" !== t3 && t3 ? (e3.classList.remove("ql-table-disabled"), n3.classList.remove("ql-table-disabled")) : (this.attrs["border-color"] = "", this.attrs["border-width"] = "", this.updateSelectColor(e3, ""), this.updateInputValue(n3, ""), e3.classList.add("ql-table-disabled"), n3.classList.add("ql-table-disabled"));
            }
            toggleHidden(t3) {
              t3.classList.toggle("ql-hidden");
            }
            updateInputValue(t3, e3) {
              t3.querySelector(".property-input").value = e3;
            }
            updateInputStatus(t3, e3, n3) {
              const r2 = (n3 ? this.getColorClosest(t3) : L(t3, ".label-field-view")).querySelector(".label-field-view-input-wrapper");
              e3 ? (r2.classList.add("label-field-view-error"), this.setSaveButtonDisabled(true)) : (r2.classList.remove("label-field-view-error"), this.form.querySelectorAll(".label-field-view-error").length || this.setSaveButtonDisabled(false));
            }
            updatePropertiesForm(t3, e3) {
              t3.classList.remove("ql-table-triangle-none");
              const { height: n3, width: r2 } = t3.getBoundingClientRect(), i2 = this.tableMenus.quill.container.getBoundingClientRect(), { top: s2, left: o2, right: l2, bottom: a2 } = this.getComputeBounds(e3), { viewHeight: c2 } = this.getViewportSize();
              let u2 = a2 + 10, h2 = o2 + l2 - r2 >> 1;
              u2 + i2.top + n3 > c2 ? (u2 = s2 - n3 - 10, u2 < 0 ? (u2 = i2.height - n3 >> 1, t3.classList.add("ql-table-triangle-none")) : (t3.classList.add("ql-table-triangle-up"), t3.classList.remove("ql-table-triangle-down"))) : (t3.classList.add("ql-table-triangle-down"), t3.classList.remove("ql-table-triangle-up")), h2 < i2.left ? (h2 = 0, t3.classList.add("ql-table-triangle-none")) : h2 + r2 > i2.right && (h2 = i2.right - r2, t3.classList.add("ql-table-triangle-none")), D(t3, { left: `${h2}px`, top: `${u2}px` });
            }
            updateSelectColor(t3, e3) {
              const n3 = t3.querySelector(".property-input"), r2 = t3.querySelector(".color-button"), i2 = t3.querySelector(".color-picker-select"), s2 = t3.querySelector(".label-field-view-status");
              e3 ? r2.classList.remove("color-unselected") : r2.classList.add("color-unselected"), n3.value = e3, D(r2, { "background-color": e3 }), i2.classList.add("ql-hidden"), this.switchHidden(s2, R(e3));
            }
            updateSelectedStatus(t3, e3, n3) {
              const r2 = "color" === n3 ? ".color-list" : ".ql-table-dropdown-list", i2 = t3.querySelector(r2);
              if (!i2) return;
              const s2 = Array.from(i2.querySelectorAll("li"));
              for (const t4 of s2) t4.classList.remove(`ql-table-${n3}-selected`);
              const o2 = s2.find((t4) => ("color" === n3 ? t4.getAttribute("data-color") : t4.innerText) === e3);
              o2 && o2.classList.add(`ql-table-${n3}-selected`);
            }
          };
          !function(t3) {
            t3.left = "margin-left", t3.right = "margin-right";
          }(An || (An = {}));
          var Sn = class {
            constructor(t3, e3) {
              this.quill = t3, this.table = null, this.prevList = null, this.prevTooltip = null, this.scroll = false, this.tableBetter = e3, this.tablePropertiesForm = null, this.quill.root.addEventListener("click", this.handleClick.bind(this)), this.root = this.createMenus();
            }
            copyTable() {
              return function(t3, e3, n3, r2) {
                return new (n3 || (n3 = Promise))(function(i2, s2) {
                  function o2(t4) {
                    try {
                      a2(r2.next(t4));
                    } catch (t5) {
                      s2(t5);
                    }
                  }
                  function l2(t4) {
                    try {
                      a2(r2.throw(t4));
                    } catch (t5) {
                      s2(t5);
                    }
                  }
                  function a2(t4) {
                    var e4;
                    t4.done ? i2(t4.value) : (e4 = t4.value, e4 instanceof n3 ? e4 : new n3(function(t5) {
                      t5(e4);
                    })).then(o2, l2);
                  }
                  a2((r2 = r2.apply(t3, e3 || [])).next());
                });
              }(this, void 0, void 0, function* () {
                if (!this.table) return;
                const t3 = e2().find(this.table);
                if (!t3) return;
                const n3 = "<p><br></p>" + t3.getCopyTable(), r2 = this.tableBetter.cellSelection.getText(n3), i2 = new ClipboardItem({ "text/html": new Blob([n3], { type: "text/html" }), "text/plain": new Blob([r2], { type: "text/plain" }) });
                try {
                  yield navigator.clipboard.write([i2]);
                  const n4 = this.quill.getIndex(t3), r3 = t3.length();
                  this.quill.setSelection(n4 + r3, e2().sources.SILENT), this.tableBetter.hideTools(), this.quill.scrollSelectionIntoView();
                } catch (t4) {
                  console.error("Failed to copy table:", t4);
                }
              });
            }
            createList(t3) {
              if (!t3) return null;
              const e3 = document.createElement("ul");
              for (const [, n3] of Object.entries(t3)) {
                const { content: t4, handler: r2 } = n3, i2 = document.createElement("li");
                i2.innerText = t4, i2.addEventListener("click", r2.bind(this)), e3.appendChild(i2);
              }
              return e3.classList.add("ql-table-dropdown-list", "ql-hidden"), e3;
            }
            createMenu(t3, e3, n3) {
              const r2 = document.createElement("div"), i2 = document.createElement("span");
              return i2.innerHTML = n3 ? t3 + e3 : t3, r2.classList.add("ql-table-dropdown"), i2.classList.add("ql-table-tooltip-hover"), r2.appendChild(i2), r2;
            }
            createMenus() {
              const { language: t3, options: e3 = {} } = this.tableBetter, { menus: n3 } = e3, r2 = t3.useLanguage.bind(t3), i2 = document.createElement("div");
              i2.classList.add("ql-table-menus-container", "ql-hidden");
              for (const [, t4] of Object.entries(function(t5, e4) {
                const n4 = { column: { content: t5("col"), icon: '<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg t="1692084271333" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="2200" xmlns:xlink="http://www.w3.org/1999/xlink" width="16" height="16"><path d="M9.14372835 1039.20071111L1020.26808889 1039.20071111l0-1048.576L9.14372835-9.37528889 9.14372835 1039.20071111z m252.77672107-711.53454649l1e-8-262.144 175.00150897 0 0 262.144L261.92044942 327.66616462zM942.48705138 702.1592576l0 262.14400001-178.89289103-1e-8 1e-8-262.144 178.89289102 0z m-256.66810311 0l0 262.144-171.11595236 0 0-262.144 171.11595236 0z m-248.89698987 0l0 262.144L261.92044943 964.3032576l-1e-8-262.144 175.00150898 0z m505.56509298-299.59563948L942.48705139 627.26180409l-178.89289104 0 0-224.69818596 178.89289103-1e-8z m-256.66810311 1e-8L685.81894827 627.26180409l-171.11595236 0 0-224.69818596 171.11595236 0z m-248.89698987 0L436.9219584 627.26180409 261.92044943 627.26180409l0-224.69818596 175.00150897 0z m505.56509298-337.04145352l0 262.14400001-178.89289102 0-1e-8-262.144 178.89289103-1e-8z m-256.66810311 1e-8l0 262.144-171.11595236 0 0-262.144 171.11595236 0z" fill="#515151" p-id="2201"></path></svg>', handler(t6, e5) {
                  this.toggleAttribute(t6, e5);
                }, children: { left: { content: t5("insColL"), handler() {
                  const { leftTd: t6 } = this.getSelectedTdsInfo(), e5 = this.table.getBoundingClientRect();
                  this.insertColumn(t6, 0), z(this.table, e5, 72), this.updateMenus();
                } }, right: { content: t5("insColR"), handler() {
                  const { rightTd: t6 } = this.getSelectedTdsInfo(), e5 = this.table.getBoundingClientRect();
                  this.insertColumn(t6, 1), z(this.table, e5, 72), this.updateMenus();
                } }, delete: { content: t5("delCol"), handler() {
                  this.deleteColumn();
                } } } }, row: { content: t5("row"), icon: '<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg t="1692084279720" class="icon" viewBox="0 0 1181 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="2344" xmlns:xlink="http://www.w3.org/1999/xlink" width="18.453125" height="16"><path d="M1142.15367111 0H39.38417778C7.99630222 0 0 8.27050667 0 39.38531555v945.2293689C0 1015.72949333 7.99516445 1024 39.38531555 1024h1102.76835556c31.39128889 0 39.38417778-8.27050667 39.38417778-39.38531555V39.38531555c0-31.11480889-7.99516445-39.38531555-39.38417778-39.38531555zM354.46328889 945.23050667l-276.992 3.26997333V749.568l276.992-1.25952v196.92202667z m0-275.69265778H78.76835555V472.61468445h275.69265778v196.92316444z m0-275.69152H78.76835555V236.30848h275.69265778v157.53671111z m393.84632889 551.38417778H433.23050667V748.30848h315.07683555v196.92202667z m0-275.69265778H433.23050667V472.61468445h315.07683555v196.92316444z m0-275.69152H433.23050667V236.30848h315.07683555v157.53671111z m354.46101333 551.38417778H827.07683555V748.30848h275.69265778v196.92202667z m0-275.69265778H827.07683555V472.61468445h275.69265778v196.92316444z m0-275.69152H827.07683555V236.30848h275.69265778v157.53671111z" fill="#515151" p-id="2345"></path></svg>', handler(t6, e5) {
                  this.toggleAttribute(t6, e5);
                }, children: { above: { content: t5("insRowAbv"), handler() {
                  const { leftTd: t6 } = this.getSelectedTdsInfo();
                  this.insertRow(t6, 0), this.updateMenus();
                } }, below: { content: t5("insRowBlw"), handler() {
                  const { rightTd: t6 } = this.getSelectedTdsInfo();
                  this.insertRow(t6, 1), this.updateMenus();
                } }, delete: { content: t5("delRow"), handler() {
                  this.deleteRow();
                } } } }, merge: { content: t5("mCells"), icon: '<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg t="1692084199654" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="1975" width="16" height="16" xmlns:xlink="http://www.w3.org/1999/xlink"><path d="M776.08580741 364.42263703c-15.53445925-7.76722963-31.06891852-7.76722963-46.60337778 0L589.6722963 512l139.81013333 147.57736297c15.53445925 7.76722963 31.06891852 7.76722963 46.60337778 0 15.53445925-15.53445925 15.53445925-31.06891852 0-46.60337779L706.18074075 543.06891852h163.11182222c15.53445925 0 31.06891852-15.53445925 31.06891851-31.06891852s-15.53445925-31.06891852-31.06891851-31.06891852H706.18074075l69.90506666-69.90506666c7.76722963-15.53445925 7.76722963-31.06891852 0-46.60337779z m-528.17161482 0c-15.53445925 15.53445925-15.53445925 31.06891852 0 46.60337779l69.90506666 69.90506666H154.70743703c-15.53445925 0-31.06891852 15.53445925-31.06891851 31.06891852s15.53445925 31.06891852 31.06891851 31.06891852H317.81925925l-69.90506666 69.90506666c-15.53445925 15.53445925-15.53445925 31.06891852 0 46.60337779 15.53445925 7.76722963 31.06891852 7.76722963 46.60337778 0L434.3277037 512 294.51757037 364.42263703c-15.53445925-7.76722963-31.06891852-7.76722963-46.60337778 0z" fill="#515151" p-id="1976"></path><path d="M317.81925925 939.19762963H84.80237037V84.80237037h233.01688888v116.50844445h77.6722963V7.13007408H7.13007408v1009.73985184h388.36148147V822.68918518h-77.6722963zM628.50844445 7.13007408v194.18074074h77.6722963v-116.50844445h233.01688888v854.39525926H706.18074075v-116.50844445h-77.6722963v194.18074074h388.36148147V7.13007408z" fill="#515151" p-id="1977"></path></svg>', handler(t6, e5) {
                  this.toggleAttribute(t6, e5);
                }, children: { merge: { content: t5("mCells"), handler() {
                  this.mergeCells(), this.updateMenus();
                } }, split: { content: t5("sCell"), handler() {
                  this.splitCell(), this.updateMenus();
                } } } }, table: { content: t5("tblProps"), icon: te, handler(t6, e5) {
                  const n5 = Object.assign(Object.assign({}, O(this.table, p)), { align: this.getTableAlignment(this.table) });
                  this.toggleAttribute(t6, e5), this.tablePropertiesForm = new Ln(this, { attribute: n5, type: "table" }), this.hideMenus();
                } }, cell: { content: t5("cellProps"), icon: '<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg t="1692084286647" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="2488" xmlns:xlink="http://www.w3.org/1999/xlink" width="16" height="16"><path d="M1058.13333333 0v1024H-34.13333333V0h1092.26666666zM460.8 563.2H68.26666667V921.6h392.53333333V563.2z m494.93333333 0H563.2V921.6h392.53333333V563.2zM460.8 102.4H68.26666667v358.4h392.53333333V102.4z" fill="#515151" p-id="2489"></path></svg>', handler(t6, e5) {
                  const { selectedTds: n5 } = this.tableBetter.cellSelection, r4 = n5.length > 1 ? this.getSelectedTdsAttrs(n5) : this.getSelectedTdAttrs(n5[0]);
                  this.toggleAttribute(t6, e5), this.tablePropertiesForm = new Ln(this, { attribute: r4, type: "cell" }), this.hideMenus();
                } }, wrap: { content: t5("insParaOTbl"), icon: '<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg t="1692084879007" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="968" xmlns:xlink="http://www.w3.org/1999/xlink" width="16" height="16"><path d="M512 332.57913685H49.39294151c-20.56031346 0-41.12062691-17.13359531-41.12062805-41.12062692V44.73474502c0-20.56031346 17.13359531-41.12062691 41.12062805-41.12062691H512c20.56031346 0 41.12062691 17.13359531 41.12062691 41.12062691v246.72376491c0 23.98703275-17.13359531 41.12062691-41.12062691 41.12062692zM90.51356843 250.33788188h380.36580466V85.85537308H90.51356843v164.4825088z m884.09349006 757.30488889h-925.21411698c-20.56031346 0-41.12062691-17.13359531-41.12062805-41.12062692v-246.72376491c0-20.56031346 17.13359531-41.12062691 41.12062805-41.12062691h921.78739883c20.56031346 0 41.12062691 17.13359531 41.12062691 41.12062691v246.72376491c0 23.98703275-17.13359531 41.12062691-37.69390876 41.12062692zM90.51356843 928.82823509h842.97286314v-164.48250994H90.51356843v164.48250994z" fill="#515151" p-id="969"></path><path d="M974.60705849 1017.92292864h-925.21411698c-27.41375203 0-47.97406549-20.56031346-47.97406549-47.97406549v-246.72376491c0-27.41375203 20.56031346-47.97406549 47.97406549-47.97406549h921.78739883c27.41375203 0 47.97406549 20.56031346 47.97406435 47.97406549v246.72376491c3.42671929 23.98703275-20.56031346 47.97406549-44.5473462 47.97406549z m-925.21411698-325.53830173c-17.13359531 0-30.84047019 13.70687602-30.84047132 30.84047133v246.72376491c0 17.13359531 13.70687602 30.84047019 30.84047132 30.84047018h921.78739883c17.13359531 0 30.84047019-13.70687602 30.84047019-30.84047018v-246.72376491c0-17.13359531-13.70687602-30.84047019-30.84047019-30.84047133H49.39294151z m890.9469275 243.29704675h-856.67973802v-181.61610523h860.10645731v181.61610523h-3.42671929zM100.79372515 921.97479765h825.83926784V774.62588188H100.79372515v147.34891577z m411.20627485-582.54222223H49.39294151c-27.41375203 0-47.97406549-20.56031346-47.97406549-47.97406549V44.73474502c0-27.41375203 20.56031346-47.97406549 47.97406549-47.97406549H512c27.41375203 0 47.97406549 20.56031346 47.97406549 47.97406549v246.72376491c0 27.41375203-20.56031346 47.97406549-47.97406549 47.97406549zM49.39294151 13.89427484c-17.13359531 0-30.84047019 13.70687602-30.84047132 30.84047018v246.72376491c0 17.13359531 13.70687602 30.84047019 30.84047132 30.84047019H512c17.13359531 0 30.84047019-13.70687602 30.84047019-30.84047019V44.73474502c0-17.13359531-13.70687602-30.84047019-30.84047019-30.84047018H49.39294151zM481.15952981 260.61803974H83.66013099V79.00193451h397.49939882V260.61803974zM100.79372515 243.48444444h363.23220936V96.13552981H100.79372515v147.34891463z" fill="#515151" p-id="970"></path><path d="M974.60705849 130.40271929H628.50844445c-6.85343744 0-10.28015673 3.42671929-10.28015674 10.28015672v58.25422223c0 6.85343744 3.42671929 10.28015673 10.28015674 10.28015673h304.97798712V466.2211766H546.26718947l27.41375204-20.56031345c3.42671929-3.42671929 6.85343744-10.28015673 6.85343744-17.13359531v-58.25422223c0-6.85343744-3.42671929-10.28015673-10.28015673-10.28015672-3.42671929 0-3.42671929 0-6.85343744 3.42671928L409.19843157 486.78149006c-10.28015673 6.85343744-10.28015673 20.56031346-3.42671928 27.41375203l3.42671928 3.42671816 157.62907136 130.21532045c3.42671929 3.42671929 10.28015673 3.42671929 13.70687602 0 0-3.42671929 3.42671929-3.42671929 3.42671929-6.85343744v-61.6809415c0-6.85343744-3.42671929-10.28015673-6.85343858-13.70687602l-20.56031345-17.13359417h421.48643157c20.56031346 0 41.12062691-17.13359531 41.12062691-41.12062805V168.09662691c-6.85343744-20.56031346-23.98703275-37.69390877-44.5473462-37.69390762z" fill="#515151" p-id="971"></path><path d="M573.68094151 661.54415673c-3.42671929 0-6.85343744 0-10.28015673-3.42671929l-157.62907249-130.21531933-3.4267193-3.42671928c-3.42671929-6.85343744-6.85343744-13.70687602-6.85343744-20.56031346 0-6.85343744 3.42671929-13.70687602 10.28015674-20.5603146l157.62907249-126.78860117c3.42671929-3.42671929 6.85343744-3.42671929 10.28015673-3.42671815 10.28015673 0 17.13359531 6.85343744 17.13359417 17.13359416v58.25422223c0 10.28015673-3.42671929 17.13359531-10.28015673 23.98703275l-10.28015673 6.85343744H923.20627485v-239.87032634h-294.6978304c-10.28015673 0-17.13359531-6.85343744-17.13359531-17.13359416V140.68287601c0-10.28015673 6.85343744-17.13359531 17.13359531-17.13359531h346.09861404c27.41375203 0 47.97406549 20.56031346 47.97406549 47.9740655v335.81845732c0 27.41375203-20.56031346 47.97406549-47.97406549 47.97406549H577.10765966l3.42671929 3.42671929c6.85343744 6.85343744 10.28015673 13.70687602 10.28015673 20.56031346v61.6809415c0 3.42671929 0 6.85343744-3.42671815 10.28015674-3.42671929 6.85343744-10.28015673 10.28015673-13.70687602 10.28015673z m0-291.27111112l-157.6290725 126.78860117c-3.42671929 3.42671929-3.42671929 3.42671929-3.42671815 6.85343859s0 6.85343744 3.42671815 10.28015672l157.6290725 130.21532047h3.42671815v-61.68094151c0-3.42671929 0-6.85343744-3.42671815-10.28015673l-41.12062805-34.26718948h442.04674503c17.13359531 0 30.84047019-13.70687602 30.84047132-30.84047132V168.09662691c0-17.13359531-13.70687602-30.84047019-30.84047132-30.84047018H628.50844445v61.68094151h311.83142456v274.1375158H522.28015673l47.97406549-37.69390763c3.42671929-3.42671929 3.42671929-6.85343744 3.42671929-10.28015787v-54.82750293z" fill="#515151" p-id="972"></path></svg>', handler(t6, e5) {
                  this.toggleAttribute(t6, e5);
                }, children: { before: { content: t5("insB4"), handler() {
                  this.insertParagraph(-1);
                } }, after: { content: t5("insAft"), handler() {
                  this.insertParagraph(1);
                } } } }, delete: { content: t5("delTable"), icon: '<?xml version="1.0" encoding="UTF-8"?><svg width="16" height="16" viewBox="0 0 48 48" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M9 10V44H39V10H9Z" fill="none" stroke="#333" stroke-width="4" stroke-linejoin="round"/><path d="M20 20V33" stroke="#333" stroke-width="4" stroke-linecap="round" stroke-linejoin="round"/><path d="M28 20V33" stroke="#333" stroke-width="4" stroke-linecap="round" stroke-linejoin="round"/><path d="M4 10H44" stroke="#333" stroke-width="4" stroke-linecap="round" stroke-linejoin="round"/><path d="M16 10L19.289 4H28.7771L32 10H16Z" fill="none" stroke="#333" stroke-width="4" stroke-linejoin="round"/></svg>', handler() {
                  this.deleteTable();
                } } }, r3 = { copy: { content: t5("copyTable"), icon: '<?xml version="1.0" encoding="UTF-8"?><svg width="16" height="16" viewBox="0 0 48 48" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M13 12.4316V7.8125C13 6.2592 14.2592 5 15.8125 5H40.1875C41.7408 5 43 6.2592 43 7.8125V32.1875C43 33.7408 41.7408 35 40.1875 35H35.5163" stroke="#333" stroke-width="4" stroke-linecap="round" stroke-linejoin="round"/><path d="M32.1875 13H7.8125C6.2592 13 5 14.2592 5 15.8125V40.1875C5 41.7408 6.2592 43 7.8125 43H32.1875C33.7408 43 35 41.7408 35 40.1875V15.8125C35 14.2592 33.7408 13 32.1875 13Z" fill="none" stroke="#333" stroke-width="4" stroke-linejoin="round"/></svg>', handler() {
                  this.copyTable();
                } } };
                return (null == e4 ? void 0 : e4.length) ? Object.values(e4).reduce((t6, e5) => (t6[e5] = Object.assign({}, n4, r3)[e5], t6), {}) : n4;
              }(r2, n3))) {
                const { content: e4, icon: n4, children: r3, handler: s2 } = t4, o2 = this.createList(r3), l2 = C(e4), a2 = this.createMenu(n4, ee, !!r3);
                a2.appendChild(l2), o2 && a2.appendChild(o2), i2.appendChild(a2), a2.addEventListener("click", s2.bind(this, o2, l2));
              }
              return this.quill.container.appendChild(i2), i2;
            }
            deleteColumn(t3 = false) {
              const { computeBounds: n3, leftTd: r2, rightTd: i2 } = this.getSelectedTdsInfo(), s2 = this.table.getBoundingClientRect(), o2 = j(n3, this.table, this.quill.container, "column"), l2 = E(n3, this.table, this.quill.container), a2 = e2().find(r2).table(), { changeTds: c2, delTds: u2 } = this.getCorrectTds(o2, n3, r2, i2);
              t3 && u2.length !== this.tableBetter.cellSelection.selectedTds.length || (this.tableBetter.cellSelection.updateSelected("column"), a2.deleteColumn(c2, u2, this.deleteTable.bind(this), l2), z(this.table, s2, n3.left - n3.right), this.updateMenus());
            }
            deleteRow(t3 = false) {
              const n3 = this.tableBetter.cellSelection.selectedTds, r2 = {};
              for (const t4 of n3) {
                let n4 = ~~t4.getAttribute("rowspan") || 1, i3 = e2().find(t4.parentElement);
                if (n4 > 1) for (; i3 && n4; ) {
                  const t5 = i3.children.head.domNode.getAttribute("data-row");
                  r2[t5] || (r2[t5] = i3), i3 = i3.next, n4--;
                }
                else {
                  const e3 = t4.getAttribute("data-row");
                  r2[e3] || (r2[e3] = i3);
                }
              }
              const i2 = Object.values(r2);
              if (t3) {
                if (i2.reduce((t4, e3) => t4 + e3.children.length, 0) !== n3.length) return;
              }
              this.tableBetter.cellSelection.updateSelected("row"), e2().find(n3[0]).table().deleteRow(i2, this.deleteTable.bind(this)), this.updateMenus();
            }
            deleteTable() {
              const t3 = e2().find(this.table);
              if (!t3) return;
              const n3 = t3.offset(this.quill.scroll);
              t3.remove(), this.tableBetter.hideTools(), this.quill.setSelection(n3 - 1, 0, e2().sources.USER);
            }
            destroyTablePropertiesForm() {
              this.tablePropertiesForm && (this.tablePropertiesForm.removePropertiesForm(), this.tablePropertiesForm = null);
            }
            getCellsOffset(t3, n3, r2, i2) {
              const s2 = e2().find(this.table).descendants($), o2 = Math.max(n3.left, t3.left), l2 = Math.min(n3.right, t3.right), a2 = /* @__PURE__ */ new Map(), c2 = /* @__PURE__ */ new Map(), u2 = /* @__PURE__ */ new Map();
              for (const e3 of s2) {
                const { left: r3, right: i3 } = M(e3.domNode, this.quill.container);
                r3 + 2 >= o2 && i3 <= l2 + 2 ? this.setCellsMap(e3, a2) : r3 + 2 >= t3.left && i3 <= n3.left + 2 ? this.setCellsMap(e3, c2) : r3 + 2 >= n3.right && i3 <= t3.right + 2 && this.setCellsMap(e3, u2);
              }
              return this.getDiffOffset(a2) || this.getDiffOffset(c2, r2) + this.getDiffOffset(u2, i2);
            }
            getColsOffset(t3, e3, n3) {
              let r2 = t3.children.head;
              const i2 = Math.max(n3.left, e3.left), s2 = Math.min(n3.right, e3.right);
              let o2 = null, l2 = null, a2 = 0;
              for (; r2; ) {
                const { width: t4 } = r2.domNode.getBoundingClientRect();
                if (o2 || l2 ? (o2 = l2, l2 += t4) : (o2 = M(r2.domNode, this.quill.container).left, l2 = o2 + t4), o2 > s2) break;
                o2 >= i2 && l2 <= s2 && a2--, r2 = r2.next;
              }
              return a2;
            }
            getCorrectBounds(t3) {
              const e3 = this.quill.container.getBoundingClientRect(), n3 = M(t3, this.quill.container);
              return n3.width >= e3.width ? [Object.assign(Object.assign({}, n3), { left: 0, right: e3.width }), e3] : [n3, e3];
            }
            getCorrectTds(t3, n3, r2, i2) {
              const s2 = [], o2 = [], l2 = e2().find(r2).table().colgroup(), a2 = ~~r2.getAttribute("colspan") || 1, c2 = ~~i2.getAttribute("colspan") || 1;
              if (l2) for (const e3 of t3) {
                const t4 = M(e3, this.quill.container);
                if (t4.left + 2 >= n3.left && t4.right <= n3.right + 2) o2.push(e3);
                else {
                  const r3 = this.getColsOffset(l2, n3, t4);
                  s2.push([e3, r3]);
                }
              }
              else for (const e3 of t3) {
                const t4 = M(e3, this.quill.container);
                if (t4.left + 2 >= n3.left && t4.right <= n3.right + 2) o2.push(e3);
                else {
                  const r3 = this.getCellsOffset(n3, t4, a2, c2);
                  s2.push([e3, r3]);
                }
              }
              return { changeTds: s2, delTds: o2 };
            }
            getDiffOffset(t3, e3) {
              let n3 = 0;
              const r2 = this.getTdsFromMap(t3);
              if (r2.length) if (e3) {
                for (const t4 of r2) n3 += ~~t4.getAttribute("colspan") || 1;
                n3 -= e3;
              } else for (const t4 of r2) n3 -= ~~t4.getAttribute("colspan") || 1;
              return n3;
            }
            getRefInfo(t3, e3) {
              let n3 = null;
              if (!t3) return { id: tt(), ref: n3 };
              let r2 = t3.children.head;
              const i2 = r2.domNode.getAttribute("data-row");
              for (; r2; ) {
                const { left: t4 } = r2.domNode.getBoundingClientRect();
                if (Math.abs(t4 - e3) <= 2) return { id: i2, ref: r2 };
                Math.abs(t4 - e3) >= 2 && !n3 && (n3 = r2), r2 = r2.next;
              }
              return { id: i2, ref: n3 };
            }
            getSelectedTdAttrs(t3) {
              const n3 = function(t4) {
                const e3 = "left";
                let n4 = null;
                const r2 = t4.descendants(W), i2 = t4.descendants(v), s2 = t4.descendants(x);
                function o2(t5) {
                  for (const e4 of t5.domNode.classList) if (/ql-align-/.test(e4)) return e4.split("ql-align-")[1];
                  return e3;
                }
                for (const t5 of [...r2, ...i2, ...s2]) {
                  const r3 = o2(t5);
                  if (null != (l2 = n4) && l2 !== r3) return e3;
                  n4 = r3;
                }
                var l2;
                return null != n4 ? n4 : e3;
              }(e2().find(t3));
              return n3 ? Object.assign(Object.assign({}, O(t3, h)), { "text-align": n3 }) : O(t3, h);
            }
            getSelectedTdsAttrs(t3) {
              const e3 = /* @__PURE__ */ new Map();
              let n3 = null;
              for (const r2 of t3) {
                const t4 = this.getSelectedTdAttrs(r2);
                if (n3) for (const r3 of Object.keys(n3)) e3.has(r3) || t4[r3] !== n3[r3] && e3.set(r3, false);
                else n3 = t4;
              }
              for (const t4 of Object.keys(n3)) e3.has(t4) && (n3[t4] = u[t4]);
              return n3;
            }
            getSelectedTdsInfo() {
              const { startTd: t3, endTd: e3 } = this.tableBetter.cellSelection, n3 = M(t3, this.quill.container), r2 = M(e3, this.quill.container), i2 = S(n3, r2);
              return n3.left <= r2.left && n3.top <= r2.top ? { computeBounds: i2, leftTd: t3, rightTd: e3 } : { computeBounds: i2, leftTd: e3, rightTd: t3 };
            }
            getTableAlignment(t3) {
              const e3 = t3.getAttribute("align");
              if (!e3) {
                const { [An.left]: e4, [An.right]: n3 } = O(t3, [An.left, An.right]);
                return "auto" === e4 ? "auto" === n3 ? "center" : "right" : "left";
              }
              return e3 || "center";
            }
            getTdsFromMap(t3) {
              return Object.values(Object.fromEntries(t3)).reduce((t4, e3) => t4.length > e3.length ? t4 : e3, []);
            }
            handleClick(t3) {
              const e3 = t3.target.closest("table");
              if (this.prevList && this.prevList.classList.add("ql-hidden"), this.prevTooltip && this.prevTooltip.classList.remove("ql-table-tooltip-hidden"), this.prevList = null, this.prevTooltip = null, !e3 && !this.tableBetter.cellSelection.selectedTds.length) return this.hideMenus(), void this.destroyTablePropertiesForm();
              this.tablePropertiesForm || (this.showMenus(), this.updateMenus(e3), (e3 && !e3.isEqualNode(this.table) || this.scroll) && this.updateScroll(false), this.table = e3);
            }
            hideMenus() {
              this.root.classList.add("ql-hidden");
            }
            insertColumn(t3, n3) {
              const { left: r2, right: i2, width: s2 } = t3.getBoundingClientRect(), o2 = e2().find(t3).table(), l2 = t3.parentElement.lastChild.isEqualNode(t3), a2 = n3 > 0 ? i2 : r2;
              o2.insertColumn(a2, l2, s2, n3), this.quill.scrollSelectionIntoView();
            }
            insertParagraph(t3) {
              const n3 = e2().find(this.table), r2 = this.quill.getIndex(n3), i2 = t3 > 0 ? n3.length() : 0, o2 = new (s())().retain(r2 + i2).insert("\n");
              this.quill.updateContents(o2, e2().sources.USER), this.quill.setSelection(r2 + i2, e2().sources.SILENT), this.tableBetter.hideTools(), this.quill.scrollSelectionIntoView();
            }
            insertRow(t3, n3) {
              const r2 = e2().find(t3), i2 = r2.rowOffset(), s2 = r2.table();
              if (n3 > 0) {
                const e3 = ~~t3.getAttribute("rowspan") || 1;
                s2.insertRow(i2 + n3 + e3 - 1, n3);
              } else s2.insertRow(i2 + n3, n3);
              this.quill.scrollSelectionIntoView();
            }
            mergeCells() {
              var t3, n3;
              const { selectedTds: r2 } = this.tableBetter.cellSelection, { computeBounds: i2, leftTd: s2 } = this.getSelectedTdsInfo(), o2 = e2().find(s2), [l2, a2] = N(o2), c2 = o2.children.head, u2 = o2.table().tbody().children, h2 = o2.row(), d2 = h2.children.reduce((t4, e3) => {
                const n4 = M(e3.domNode, this.quill.container);
                return n4.left >= i2.left && n4.right <= i2.right && (t4 += ~~e3.domNode.getAttribute("colspan") || 1), t4;
              }, 0), p2 = u2.reduce((t4, e3) => {
                const n4 = M(e3.domNode, this.quill.container);
                if (n4.top >= i2.top && n4.bottom <= i2.bottom) {
                  let n5 = Number.MAX_VALUE;
                  e3.children.forEach((t5) => {
                    const e4 = ~~t5.domNode.getAttribute("rowspan") || 1;
                    n5 = Math.min(n5, e4);
                  }), t4 += n5;
                }
                return t4;
              }, 0);
              let f2 = 0;
              for (const i3 of r2) {
                if (s2.isEqualNode(i3)) continue;
                const r3 = e2().find(i3);
                r3.moveChildren(o2), r3.remove(), (null === (n3 = null === (t3 = r3.parent) || void 0 === t3 ? void 0 : t3.children) || void 0 === n3 ? void 0 : n3.length) || f2++;
              }
              f2 && h2.children.forEach((t4) => {
                if (t4.domNode.isEqualNode(s2)) return;
                const e3 = t4.domNode.getAttribute("rowspan"), [n4] = N(t4);
                t4.replaceWith(t4.statics.blotName, Object.assign(Object.assign({}, n4), { rowspan: e3 - f2 }));
              }), o2.setChildrenId(a2), c2.format(o2.statics.blotName, Object.assign(Object.assign({}, l2), { colspan: d2, rowspan: p2 - f2 })), this.tableBetter.cellSelection.setSelected(c2.parent.domNode), this.quill.scrollSelectionIntoView();
            }
            setCellsMap(t3, e3) {
              const n3 = t3.domNode.getAttribute("data-row");
              e3.has(n3) ? e3.set(n3, [...e3.get(n3), t3.domNode]) : e3.set(n3, [t3.domNode]);
            }
            showMenus() {
              this.root.classList.remove("ql-hidden");
            }
            splitCell() {
              const { selectedTds: t3 } = this.tableBetter.cellSelection, { leftTd: n3 } = this.getSelectedTdsInfo(), r2 = e2().find(n3).children.head;
              for (const n4 of t3) {
                const t4 = ~~n4.getAttribute("colspan") || 1, r3 = ~~n4.getAttribute("rowspan") || 1;
                if (1 === t4 && 1 === r3) continue;
                const i2 = [], { width: s2, right: o2 } = n4.getBoundingClientRect(), l2 = e2().find(n4), a2 = l2.table(), c2 = l2.next, u2 = l2.row();
                if (r3 > 1) if (t4 > 1) {
                  let e3 = u2.next;
                  for (let n5 = 1; n5 < r3; n5++) {
                    const { ref: n6, id: r4 } = this.getRefInfo(e3, o2);
                    for (let s3 = 0; s3 < t4; s3++) i2.push([e3, r4, n6]);
                    e3 && (e3 = e3.next);
                  }
                } else {
                  let t5 = u2.next;
                  for (let e3 = 1; e3 < r3; e3++) {
                    const { ref: e4, id: n5 } = this.getRefInfo(t5, o2);
                    i2.push([t5, n5, e4]), t5 && (t5 = t5.next);
                  }
                }
                if (t4 > 1) {
                  const e3 = n4.getAttribute("data-row");
                  for (let n5 = 1; n5 < t4; n5++) i2.push([u2, e3, c2]);
                }
                for (const [t5, e3, n5] of i2) a2.insertColumnCell(t5, e3, n5);
                const [h2] = N(l2);
                l2.replaceWith(l2.statics.blotName, Object.assign(Object.assign({}, h2), { width: ~~(s2 / t4), colspan: null, rowspan: null }));
              }
              this.tableBetter.cellSelection.setSelected(r2.parent.domNode), this.quill.scrollSelectionIntoView();
            }
            toggleAttribute(t3, e3) {
              this.prevList && !this.prevList.isEqualNode(t3) && (this.prevList.classList.add("ql-hidden"), this.prevTooltip.classList.remove("ql-table-tooltip-hidden")), t3 && (t3.classList.toggle("ql-hidden"), e3.classList.toggle("ql-table-tooltip-hidden"), this.prevList = t3, this.prevTooltip = e3);
            }
            updateMenus(t3 = this.table) {
              t3 && requestAnimationFrame(() => {
                this.root.classList.remove("ql-table-triangle-none");
                const [e3, n3] = this.getCorrectBounds(t3), { left: r2, right: i2, top: s2, bottom: o2 } = e3, { height: l2, width: a2 } = this.root.getBoundingClientRect(), c2 = this.quill.getModule("toolbar"), u2 = getComputedStyle(c2.container);
                let h2 = s2 - l2 - 10, d2 = r2 + i2 - a2 >> 1;
                h2 > -parseInt(u2.paddingBottom) ? (this.root.classList.add("ql-table-triangle-up"), this.root.classList.remove("ql-table-triangle-down")) : (h2 = o2 > n3.height ? n3.height + 10 : o2 + 10, this.root.classList.add("ql-table-triangle-down"), this.root.classList.remove("ql-table-triangle-up")), d2 < n3.left ? (d2 = 0, this.root.classList.add("ql-table-triangle-none")) : d2 + a2 > n3.right && (d2 = n3.right - a2, this.root.classList.add("ql-table-triangle-none")), D(this.root, { left: `${d2}px`, top: `${h2}px` });
              });
            }
            updateScroll(t3) {
              this.scroll = t3;
            }
            updateTable(t3) {
              this.table = t3;
            }
          };
          const En = e2().import("blots/inline");
          e2().import("ui/icons")["table-better"] = te;
          class jn extends En {
          }
          class qn {
            constructor() {
              this.computeChildren = [], this.root = this.createContainer();
            }
            clearSelected(t3) {
              for (const e3 of t3) e3.classList && e3.classList.remove("ql-cell-selected");
              this.computeChildren = [], this.root && this.setLabelContent(this.root.lastElementChild, null);
            }
            createContainer() {
              const t3 = document.createElement("div"), e3 = document.createElement("div"), n3 = document.createElement("div"), r2 = document.createDocumentFragment();
              for (let t4 = 1; t4 <= 10; t4++) for (let e4 = 1; e4 <= 10; e4++) {
                const n4 = document.createElement("span");
                n4.setAttribute("row", `${t4}`), n4.setAttribute("column", `${e4}`), r2.appendChild(n4);
              }
              return n3.innerHTML = "0 x 0", t3.classList.add("ql-table-select-container", "ql-hidden"), e3.classList.add("ql-table-select-list"), n3.classList.add("ql-table-select-label"), e3.appendChild(r2), t3.appendChild(e3), t3.appendChild(n3), t3.addEventListener("mousemove", (e4) => this.handleMouseMove(e4, t3)), t3;
            }
            getComputeChildren(t3, e3) {
              const n3 = [], { clientX: r2, clientY: i2 } = e3;
              for (const e4 of t3) {
                const { left: t4, top: s2 } = e4.getBoundingClientRect();
                r2 >= t4 && i2 >= s2 && n3.push(e4);
              }
              return n3;
            }
            getSelectAttrs(t3) {
              return [~~t3.getAttribute("row"), ~~t3.getAttribute("column")];
            }
            handleClick(t3, e3) {
              this.toggle(this.root);
              const n3 = t3.target.closest("span[row]");
              if (n3) this.insertTable(n3, e3);
              else {
                const t4 = this.computeChildren[this.computeChildren.length - 1];
                t4 && this.insertTable(t4, e3);
              }
            }
            handleMouseMove(t3, e3) {
              const n3 = e3.firstElementChild.children;
              this.clearSelected(this.computeChildren);
              const r2 = this.getComputeChildren(n3, t3);
              for (const t4 of r2) t4.classList && t4.classList.add("ql-cell-selected");
              this.computeChildren = r2, this.setLabelContent(e3.lastElementChild, r2[r2.length - 1]);
            }
            hide(t3) {
              this.clearSelected(this.computeChildren), t3 && t3.classList.add("ql-hidden");
            }
            insertTable(t3, e3) {
              const [n3, r2] = this.getSelectAttrs(t3);
              e3(n3, r2), this.hide(this.root);
            }
            setLabelContent(t3, e3) {
              if (e3) {
                const [n3, r2] = this.getSelectAttrs(e3);
                t3.innerHTML = `${n3} x ${r2}`;
              } else t3.innerHTML = "0 x 0";
            }
            show(t3) {
              this.clearSelected(this.computeChildren), t3 && t3.classList.remove("ql-hidden");
            }
            toggle(t3) {
              this.clearSelected(this.computeChildren), t3 && t3.classList.toggle("ql-hidden");
            }
          }
          e2().import("core/module");
          const Mn = e2().import("blots/container"), Bn = e2().import("modules/toolbar");
          class On extends Bn {
            attach(t3) {
              let e3 = Array.from(t3.classList).find((t4) => 0 === t4.indexOf("ql-"));
              if (!e3) return;
              if (e3 = e3.slice(3), "BUTTON" === t3.tagName && t3.setAttribute("type", "button"), null == this.handlers[e3] && null == this.quill.scroll.query(e3)) return void console.warn("ignoring attaching to nonexistent format", e3, t3);
              const n3 = "SELECT" === t3.tagName ? "change" : "click";
              t3.addEventListener(n3, (n4) => {
                var r2;
                const { cellSelection: i2 } = this.getTableBetter();
                (null === (r2 = null == i2 ? void 0 : i2.selectedTds) || void 0 === r2 ? void 0 : r2.length) > 1 ? this.cellSelectionAttach(t3, e3, n4, i2) : this.toolbarAttach(t3, e3, n4);
              }), this.controls.push([e3, t3]);
            }
            cellSelectionAttach(t3, e3, n3, r2) {
              if ("SELECT" === t3.tagName) {
                if (t3.selectedIndex < 0) return;
                const n4 = t3.options[t3.selectedIndex], i2 = "string" != typeof (null == n4 ? void 0 : n4.value) || (null == n4 ? void 0 : n4.value), s2 = r2.getCorrectValue(e3, i2);
                r2.setSelectedTdsFormat(e3, s2);
              } else {
                const i2 = (null == t3 ? void 0 : t3.value) || true, s2 = r2.getCorrectValue(e3, i2);
                r2.setSelectedTdsFormat(e3, s2), n3.preventDefault();
              }
            }
            getTableBetter() {
              return this.quill.getModule("table-better");
            }
            setTableFormat(t3, n3, r2, i2, s2) {
              let o2 = null;
              const { cellSelection: l2, tableMenus: a2 } = this.getTableBetter(), c2 = function(t4, n4, r3) {
                if (1 === n4.length) {
                  const i3 = function(t5, e3 = 0, n5 = Number.MAX_VALUE) {
                    const r4 = (t6, e4, n6) => {
                      let i4 = [], s3 = n6;
                      return t6.children.forEachAt(e4, n6, (t7, e5, n7) => {
                        t7 instanceof Mn && (i4.push(t7), i4 = i4.concat(r4(t7, e5, s3))), s3 -= n7;
                      }), i4;
                    };
                    return r4(t5, e3, n5);
                  }(e2().find(n4[0]), t4.index, t4.length);
                  return Pn(i3) === Pn(r3);
                }
                return !!(n4.length > 1);
              }(t3, n3, s2);
              for (const t4 of s2) {
                const e3 = Rn(n3, i2, t4, c2);
                o2 = t4.format(i2, r2, e3);
              }
              if (n3.length < 2) {
                if (c2 || 1 === s2.length) {
                  const t4 = B(o2);
                  Promise.resolve().then(() => {
                    t4 && this.quill.root.contains(t4.domNode) ? l2.setSelected(t4.domNode, false) : l2.setSelected(n3[0], false);
                  });
                } else l2.setSelected(n3[0], false);
                this.quill.setSelection(t3, e2().sources.SILENT);
              }
              return a2.updateMenus(), o2;
            }
            toolbarAttach(t3, n3, r2) {
              let i2;
              if ("SELECT" === t3.tagName) {
                if (t3.selectedIndex < 0) return;
                const e3 = t3.options[t3.selectedIndex];
                i2 = !e3.hasAttribute("selected") && (e3.value || false);
              } else i2 = !t3.classList.contains("ql-active") && (t3.value || !t3.hasAttribute("value")), r2.preventDefault();
              this.quill.focus();
              const [o2] = this.quill.selection.getRange();
              if (null != this.handlers[n3]) this.handlers[n3].call(this, i2);
              else if (this.quill.scroll.query(n3).prototype instanceof Ht) {
                if (i2 = prompt(`Enter ${n3}`), !i2) return;
                this.quill.updateContents(new (s())().retain(o2.index).delete(o2.length).insert({ [n3]: i2 }), e2().sources.USER);
              } else this.quill.format(n3, i2, e2().sources.USER);
              this.update(o2);
            }
          }
          function Rn(t3, e3, n3, r2) {
            return 1 === t3.length && "list" === e3 && n3.statics.blotName === x.blotName || r2;
          }
          function Pn(t3) {
            return t3.reduce((t4, e3) => t4 + e3.length(), 0);
          }
          function In(t3, e3, n3, r2) {
            const i2 = this.quill.getSelection();
            if (!r2) if (i2.length || 1 !== e3.length) r2 = this.quill.getLines(i2);
            else {
              const [t4] = this.quill.getLine(i2.index);
              r2 = [t4];
            }
            return this.setTableFormat(i2, e3, t3, n3, r2);
          }
          On.DEFAULTS = nt()({}, Bn.DEFAULTS, { handlers: { header(t3, n3) {
            const { cellSelection: r2 } = this.getTableBetter(), i2 = null == r2 ? void 0 : r2.selectedTds;
            if (null == i2 ? void 0 : i2.length) return In.call(this, t3, i2, "header", n3);
            this.quill.format("header", t3, e2().sources.USER);
          }, list(t3, n3) {
            const { cellSelection: r2 } = this.getTableBetter(), i2 = null == r2 ? void 0 : r2.selectedTds;
            if (null == i2 ? void 0 : i2.length) {
              if (1 === i2.length) {
                const e3 = this.quill.getSelection(true), n4 = this.quill.getFormat(e3);
                t3 = r2.getListCorrectValue("list", t3, n4);
              }
              return In.call(this, t3, i2, "list", n3);
            }
            const s2 = this.quill.getSelection(true), o2 = this.quill.getFormat(s2);
            "check" === t3 ? "checked" === o2.list || "unchecked" === o2.list ? this.quill.format("list", false, e2().sources.USER) : this.quill.format("list", "unchecked", e2().sources.USER) : this.quill.format("list", t3, e2().sources.USER);
          }, "table-better"() {
          } } });
          var Dn = On;
          const zn = ["error", "warn", "log", "info"];
          let Hn = "warn";
          function Fn(t3) {
            if (Hn && zn.indexOf(t3) <= zn.indexOf(Hn)) {
              for (var e3 = arguments.length, n3 = new Array(e3 > 1 ? e3 - 1 : 0), r2 = 1; r2 < e3; r2++) n3[r2 - 1] = arguments[r2];
              console[t3](...n3);
            }
          }
          function Un(t3) {
            return zn.reduce((e3, n3) => (e3[n3] = Fn.bind(console, n3, t3), e3), {});
          }
          Un.level = (t3) => {
            Hn = t3;
          }, Fn.level = Un.level;
          var Vn = Un;
          e2().import("core/module");
          const Wn = e2().import("modules/clipboard"), $n = Vn("quill:clipboard");
          var Gn = class extends Wn {
            onPaste(t3, { text: n3, html: r2 }) {
              const i2 = this.quill.getFormat(t3.index), o2 = this.getTableDelta({ text: n3, html: r2 }, i2);
              $n.log("onPaste", o2, { text: n3, html: r2 });
              const l2 = new (s())().retain(t3.index).delete(t3.length).concat(o2);
              this.quill.updateContents(l2, e2().sources.USER), this.quill.setSelection(l2.length() - t3.length, e2().sources.SILENT), this.quill.scrollSelectionIntoView();
            }
            getTableDelta({ html: t3, text: e3 }, n3) {
              var r2, i2, o2;
              const l2 = this.convert({ text: e3, html: t3 }, n3);
              if (n3[W.blotName]) for (const t4 of l2.ops) {
                if ((null == t4 ? void 0 : t4.attributes) && (t4.attributes[Y.blotName] || t4.attributes[W.blotName])) return new (s())();
                ((null === (r2 = null == t4 ? void 0 : t4.attributes) || void 0 === r2 ? void 0 : r2.header) || (null === (i2 = null == t4 ? void 0 : t4.attributes) || void 0 === i2 ? void 0 : i2.list) || !(null === (o2 = null == t4 ? void 0 : t4.attributes) || void 0 === o2 ? void 0 : o2[W.blotName])) && (t4.attributes = Object.assign(Object.assign({}, t4.attributes), n3));
              }
              return l2;
            }
          };
          const Kn = e2().import("core/module");
          class Yn extends Kn {
            constructor(t3, e3) {
              super(t3, e3), t3.clipboard.addMatcher("td, th", ot), t3.clipboard.addMatcher("tr", st), t3.clipboard.addMatcher("col", lt), t3.clipboard.addMatcher("table", at), this.language = new bt(null == e3 ? void 0 : e3.language), this.cellSelection = new Jt(t3, this), this.operateLine = new Qt(t3, this), this.tableMenus = new Sn(t3, this), this.tableSelect = new qn(), t3.root.addEventListener("keyup", this.handleKeyup.bind(this)), t3.root.addEventListener("mousedown", this.handleMousedown.bind(this)), t3.root.addEventListener("scroll", this.handleScroll.bind(this)), this.registerToolbarTable(null == e3 ? void 0 : e3.toolbarTable);
            }
            static register() {
              e2().register(W, true), e2().register($, true), e2().register(G, true), e2().register(K, true), e2().register(Y, true), e2().register(J, true), e2().register(Z, true), e2().register(X, true), e2().register({ "modules/toolbar": Dn, "modules/clipboard": Gn }, true);
            }
            clearHistorySelected() {
              const [t3] = this.getTable();
              if (!t3) return;
              const e3 = Array.from(t3.domNode.querySelectorAll("td.ql-cell-focused, td.ql-cell-selected"));
              for (const t4 of e3) t4.classList && t4.classList.remove("ql-cell-focused", "ql-cell-selected");
            }
            deleteTable() {
              const [t3] = this.getTable();
              if (null == t3) return;
              const n3 = t3.offset();
              t3.remove(), this.hideTools(), this.quill.update(e2().sources.USER), this.quill.setSelection(n3, e2().sources.SILENT);
            }
            deleteTableTemporary(t3 = e2().sources.API) {
              const n3 = this.quill.scroll.descendants(Y);
              for (const t4 of n3) t4.remove();
              this.hideTools(), this.quill.update(t3);
            }
            getTable(t3 = this.quill.getSelection()) {
              if (null == t3) return [null, null, null, -1];
              const [e3, n3] = this.quill.getLine(t3.index);
              if (null == e3 || e3.statics.blotName !== W.blotName) return [null, null, null, -1];
              const r2 = e3.parent, i2 = r2.parent;
              return [i2.parent.parent, i2, r2, n3];
            }
            handleKeyup(t3) {
              this.cellSelection.handleKeyup(t3), !t3.ctrlKey || "z" !== t3.key && "y" !== t3.key || (this.hideTools(), this.clearHistorySelected()), this.updateMenus(t3);
            }
            handleMousedown(t3) {
              var e3;
              if (null === (e3 = this.tableSelect) || void 0 === e3 || e3.hide(this.tableSelect.root), !t3.target.closest("table")) return this.hideTools();
              this.cellSelection.handleMousedown(t3), this.cellSelection.setDisabled(true);
            }
            handleScroll() {
              var t3;
              this.hideTools(), null === (t3 = this.tableMenus) || void 0 === t3 || t3.updateScroll(true);
            }
            hideTools() {
              var t3, e3, n3, r2, i2, s2, o2;
              null === (t3 = this.cellSelection) || void 0 === t3 || t3.clearSelected(), null === (e3 = this.cellSelection) || void 0 === e3 || e3.setDisabled(false), null === (n3 = this.operateLine) || void 0 === n3 || n3.hideDragBlock(), null === (r2 = this.operateLine) || void 0 === r2 || r2.hideDragTable(), null === (i2 = this.operateLine) || void 0 === i2 || i2.hideLine(), null === (s2 = this.tableMenus) || void 0 === s2 || s2.hideMenus(), null === (o2 = this.tableMenus) || void 0 === o2 || o2.destroyTablePropertiesForm();
            }
            insertTable(t3, n3) {
              const r2 = this.quill.getSelection(true);
              if (null == r2) return;
              if (this.isTable(r2)) return;
              const i2 = `width: ${72 * n3}px`, o2 = this.quill.getFormat(r2.index - 1), [, l2] = this.quill.getLine(r2.index), a2 = !!o2[W.blotName] || 0 !== l2, c2 = a2 ? 2 : 1, u2 = a2 ? new (s())().insert("\n") : new (s())(), h2 = new (s())().retain(r2.index).delete(r2.length).concat(u2).insert("\n", { [Y.blotName]: { style: i2 } }), d2 = new Array(t3).fill(0).reduce((t4) => {
                const e3 = tt();
                return new Array(n3).fill("\n").reduce((t5, n4) => t5.insert(n4, { [W.blotName]: Q(), [$.blotName]: { "data-row": e3, width: "72" } }), t4);
              }, h2);
              this.quill.updateContents(d2, e2().sources.USER), this.quill.setSelection(r2.index + c2, e2().sources.SILENT), this.showTools();
            }
            isTable(t3) {
              return !!this.quill.getFormat(t3.index)[W.blotName];
            }
            registerToolbarTable(t3) {
              if (!t3) return;
              e2().register({ "formats/table-better": jn }, true);
              const n3 = this.quill.getModule("toolbar").container.querySelector("button.ql-table-better");
              n3 && this.tableSelect.root && (n3.appendChild(this.tableSelect.root), n3.addEventListener("click", (t4) => {
                this.tableSelect.handleClick(t4, this.insertTable.bind(this));
              }), document.addEventListener("click", (t4) => {
                t4.composedPath().includes(n3) || this.tableSelect.root.classList.contains("ql-hidden") || this.tableSelect.hide(this.tableSelect.root);
              }));
            }
            showTools(t3) {
              const [e3, , n3] = this.getTable();
              e3 && n3 && (this.cellSelection.setDisabled(true), this.cellSelection.setSelected(n3.domNode, t3), this.tableMenus.showMenus(), this.tableMenus.updateMenus(e3.domNode), this.tableMenus.updateTable(e3.domNode));
            }
            updateMenus(t3) {
              this.cellSelection.selectedTds.length && ("Enter" === t3.key || t3.ctrlKey && "v" === t3.key) && this.tableMenus.updateMenus();
            }
          }
          const Zn = { "table-cell down": Jn(false), "table-cell up": Jn(true), "table-cell-block backspace": Xn("Backspace"), "table-cell-block delete": Xn("Delete"), "table-header backspace": Qn("Backspace"), "table-header delete": Qn("Delete"), "table-header enter": { key: "Enter", collapsed: true, format: ["table-header"], suffix: /^$/, handler(t3, n3) {
            const [r2, i2] = this.quill.getLine(t3.index), o2 = new (s())().retain(t3.index).insert("\n", n3.format).retain(r2.length() - i2 - 1).retain(1, { header: null });
            this.quill.updateContents(o2, e2().sources.USER), this.quill.setSelection(t3.index + 1, e2().sources.SILENT), this.quill.scrollSelectionIntoView();
          } }, "table-list backspace": tr("Backspace"), "table-list delete": tr("Delete"), "table-list empty enter": { key: "Enter", collapsed: true, format: ["table-list"], empty: true, handler(t3, e3) {
            const { line: n3 } = e3, { cellId: r2 } = n3.parent.formats()[n3.parent.statics.blotName], i2 = n3.replaceWith(W.blotName, r2), s2 = this.quill.getModule("table-better"), o2 = B(i2);
            o2 && s2.cellSelection.setSelected(o2.domNode, false);
          } } };
          function Xn(t3) {
            return { key: t3, format: ["table-cell-block"], collapsed: true, handler(e3, n3) {
              var r2;
              const [i2] = this.quill.getLine(e3.index), { offset: s2, suffix: o2 } = n3;
              if (0 === s2 && !i2.prev) return false;
              const l2 = null === (r2 = i2.prev) || void 0 === r2 ? void 0 : r2.statics.blotName;
              return 0 !== s2 || l2 !== m.blotName && l2 !== W.blotName && l2 !== x.blotName ? !(0 !== s2 && !o2 && "Delete" === t3) : er.call(this, i2, e3);
            } };
          }
          function Jn(t3) {
            return { key: t3 ? "ArrowUp" : "ArrowDown", collapsed: true, format: ["table-cell"], handler() {
              return false;
            } };
          }
          function Qn(t3) {
            return { key: t3, format: ["table-header"], collapsed: true, empty: true, handler(t4, e3) {
              const [n3] = this.quill.getLine(t4.index);
              if (n3.prev) return er.call(this, n3, t4);
              {
                const t5 = A(n3.formats()[n3.statics.blotName]);
                n3.replaceWith(W.blotName, t5);
              }
            } };
          }
          function tr(t3) {
            return { key: t3, format: ["table-list"], collapsed: true, empty: true, handler(t4, e3) {
              const [n3] = this.quill.getLine(t4.index), r2 = A(n3.parent.formats()[n3.parent.statics.blotName]);
              n3.replaceWith(W.blotName, r2);
            } };
          }
          function er(t3, n3) {
            const r2 = this.quill.getModule("table-better");
            return t3.remove(), null == r2 || r2.tableMenus.updateMenus(), this.quill.setSelection(n3.index - 1, e2().sources.SILENT), false;
          }
          Yn.keyboardBindings = Zn;
          var nr = Yn;
        }(), i.default;
      }();
    });
  }
});
export default require_quill_table_better();
//# sourceMappingURL=quill-table-better.js.map
